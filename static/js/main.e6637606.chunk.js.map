{"version":3,"sources":["components/CanvasIndustrySpaceCustomWithSimulation.js","App.js","index.js"],"names":["data","JSON","parse","rootNodeRef","useRef","useEffect","rootEl","current","root","d3","height","window","innerHeight","width","innerWidth","smallerSize","padding","widthMargin","heightMargin","rangeWidth","rangeHeight","allXValues","allYValues","nodes","forEach","x","y","push","radiusAdjuster","map","n","radius","Math","random","xRange","yRange","xScale","domain","range","yScale","canvas","append","attr","node","context","getContext","simulation","force","strength","d","parseFloat","proximity","id","velocityDecay","k","alpha","tick","transform","tempData","zoom","scaleExtent","on","simulationUpdate","hoveredNode","undefined","highlightedNode","canvasEl","dragsubject","invertX","invertY","i","length","nodeX","nodeY","dx","dy","applyX","applyY","hoveredId","highlightedId","linkedEdges","edges","filter","source","target","save","clearRect","translate","scale","beginPath","moveTo","lineTo","strokeStyle","stroke","arc","PI","fillStyle","color","polished","fill","linkedNodeIds","includes","style","cursor","restore","call","event","allEdgeXValues","allEdgeYValues","xBounds","yBounds","bounds","max","min","transition","duration","links","initGraph","createForceGraph","innerHTML","ref","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6637606.chunk.js","sourcesContent":["import React, {useEffect, useRef} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/industry-space-no-overlap.json'));\n\nconst createForceGraph = (rootEl, data) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    let radius = Math.random() * 6;\n    radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    // const radius = 3;\n    return {...n, radius}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 10, rangeHeight / 10))\n                .force(\"charge\", d3.forceManyBody().strength(-6.5))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 5) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => parseFloat(d.proximity)).id(function(d) { return d.id; }))\n                .velocityDecay(0.8)\n  let k = 0;\n  while ((simulation.alpha() > 1e-2) && (k < 150)) {\n      simulation.tick();\n      k = k + 1;\n  }\n\n  let transform = d3.zoomIdentity;\n\n  initGraph(data)\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    let hoveredNode = undefined;\n    let highlightedNode = undefined;\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          const edges = tempData.edges.filter(({source, target}) => source.id === node.id || target.id === node.id)\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          edges.forEach(({source, target}) => {\n            allEdgeXValues.push(xScale(source.x));\n            allEdgeXValues.push(xScale(target.x));\n            allEdgeYValues.push(yScale(source.y));\n            allEdgeYValues.push(yScale(target.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      const hoveredId = hoveredNode && hoveredNode.id ? hoveredNode.id : undefined;\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n      const linkedEdges = tempData.edges.filter(({source, target}) =>\n          source.id === hoveredId || target.id === hoveredId ||\n          source.id === highlightedId || target.id === highlightedId)\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      tempData.edges.forEach(function(d) {\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        if (highlightedId) {\n          context.strokeStyle = '#f9f9f9';\n        } else {\n          context.strokeStyle = '#e6e6e6';\n        }\n        context.stroke();\n      });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedId === undefined ? d.color : polished.setLightness(0.91, d.color);\n        context.fill();\n      });\n\n      const linkedNodeIds = [];\n      linkedEdges.forEach(function(d) {\n        if (!linkedNodeIds.includes(({id}) => d.source.id)) {\n          linkedNodeIds.push(d.source);\n        }\n        if (!linkedNodeIds.includes(({id}) => d.target.id)) {\n          linkedNodeIds.push(d.target);\n        }\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        context.strokeStyle = '#afafaf';\n        context.stroke();\n      });\n\n      linkedNodeIds.forEach(function(d, i) {\n        if (d) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.color;\n          context.fill();\n          context.strokeStyle = '#afafaf';\n          context.stroke();\n        }\n      });\n\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n\n      context.restore();\n    }\n  }\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      createForceGraph(rootEl, data);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef]);\n\n  return (\n    <div>\n      <div ref={rootNodeRef} />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from './components/CanvasIndustrySpaceCustomWithSimulation';\n\nconst App = () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n    </div>\n  );\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}