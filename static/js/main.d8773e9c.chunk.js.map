{"version":3,"sources":["components/CanvasIndustrySpaceCustomWithSimulation.js","App.js","index.js"],"names":["data","JSON","parse","rootNodeRef","useRef","useState","width","window","innerWidth","height","innerHeight","setWindowDimensions","useEffect","updateWindowDimensions","debounce","addEventListener","removeEventListener","rootEl","current","root","d3","smallerSize","padding","widthMargin","heightMargin","rangeWidth","rangeHeight","allXValues","allYValues","nodes","forEach","x","y","push","map","n","radius","Math","random","xRange","yRange","xScale","domain","range","yScale","canvas","append","attr","node","context","getContext","simulation","force","strength","d","parseFloat","proximity","id","transform","tempData","hoveredNode","undefined","dragsubject","invertX","invertY","i","length","nodeX","nodeY","dx","dy","applyX","applyY","simulationUpdate","hoveredId","save","clearRect","translate","scale","k","edges","beginPath","moveTo","source","lineTo","target","strokeStyle","stroke","arc","PI","fillStyle","color","fill","style","cursor","restore","call","scaleExtent","on","alert","links","initGraph","createForceGraph","innerHTML","ref","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8773e9c.chunk.js","sourcesContent":["import React, {useEffect, useState, useRef} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport debounce from 'lodash/debounce';\n\nconst data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\n\nconst createForceGraph = (rootEl, data) => {\n  const root = d3.select(rootEl);\n\n  // const radius = 5;\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  data.nodes = data.nodes.map(n => {\n    return {...n, radius: (Math.random() + 0.5) * 5}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeHeight / 10, rangeHeight / 10))\n                .force(\"charge\", d3.forceManyBody().strength(-5))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return d.radius * 4;\n                }))\n                .force(\"link\", d3.forceLink().strength(d => parseFloat(d.proximity) * 1.5).id(function(d) { return d.id; }))\n                // .velocityDecay(0.3)\n\n\n  let transform = d3.zoomIdentity;\n\n  initGraph(data)\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    let hoveredNode = undefined;\n    \n    d3.select(canvas)\n      .call(d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed))\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();\n        simulationUpdate();\n      })\n      .on('click', function() {\n        const node = dragsubject();\n        if (node) {\n          alert('Clicked ' + node.id);\n        }\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      const hoveredId = hoveredNode && hoveredNode.id ? hoveredNode.id : undefined;\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      tempData.edges.forEach(function(d) {\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        context.strokeStyle = hoveredId === d.source.id || hoveredId === d.target.id\n          ? 'rgba(0, 0, 0, 0.5)' : 'rgba(0, 0, 0, 0.08)';\n        context.stroke();\n      });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = d.color\n        context.fill();\n      });\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n\n      context.restore();\n    }\n  }\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n\n\n  const [windowDimensions, setWindowDimensions] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  useEffect(() => {\n    const updateWindowDimensions = debounce(() => {\n      setWindowDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }, 500);\n    window.addEventListener('resize', updateWindowDimensions);\n    return () => {\n      window.removeEventListener('resize', updateWindowDimensions);\n    };\n  }, []);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      createForceGraph(rootEl, data);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef]);\n\n  return (\n    <div ref={rootNodeRef} />\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from './components/CanvasIndustrySpaceCustomWithSimulation';\n\nconst App = () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n    </div>\n  );\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}