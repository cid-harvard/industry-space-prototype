{"version":3,"sources":["components/CanvasIndustrySpaceCustomWithSimulation.js","App.js","index.js"],"names":["data","JSON","parse","rootNodeRef","useRef","useEffect","rootEl","current","root","d3","height","window","innerHeight","width","innerWidth","smallerSize","padding","widthMargin","heightMargin","rangeWidth","rangeHeight","allXValues","allYValues","nodes","forEach","x","y","push","radiusAdjuster","map","n","radius","Math","random","xRange","yRange","xScale","domain","range","yScale","canvas","append","attr","node","context","getContext","simulation","force","strength","d","parseFloat","proximity","id","transform","tempData","zoom","scaleExtent","on","simulationUpdate","hoveredNode","undefined","dragsubject","invertX","invertY","i","length","nodeX","nodeY","dx","dy","applyX","applyY","hoveredId","save","clearRect","translate","scale","k","edges","beginPath","moveTo","source","lineTo","target","strokeStyle","stroke","arc","PI","fillStyle","color","fill","style","cursor","restore","call","event","links","initGraph","createForceGraph","innerHTML","ref","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60ca63be.chunk.js","sourcesContent":["import React, {useEffect, useRef} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\n\nconst minExpectedScreenSize = 1020;\n\nconst data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\n\nconst createForceGraph = (rootEl, data) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    let radius = Math.random() * 8;\n    radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    // const radius = 5;\n    return {...n, radius}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 10, rangeHeight / 10))\n                .force(\"charge\", d3.forceManyBody().strength(-6.5))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return d.radius * 5 ;\n                }))\n                .force(\"link\", d3.forceLink().strength(d => parseFloat(d.proximity)).id(function(d) { return d.id; }))\n                // .velocityDecay(0.3)\n\n\n  let transform = d3.zoomIdentity;\n\n  initGraph(data)\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    let hoveredNode = undefined;\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        if (node) {\n          // alert('Clicked ' + node.id);\n          // const x0 = xScale(node.x);\n          // const x1 = xScale(node.x + 20);\n          // const y0 = yScale(node.y);\n          // const y1 = yScale(node.y + 20);\n          // context.clearRect(0, 0, width, height);\n          // context.translate(transform.x, transform.y);\n          // context.scale(transform.k, transform.k);\n          // context.transition().duration(750).call(\n          //   zoom.transform,\n          //   d3.zoomIdentity\n          //     .translate(width / 10, height / 10)\n          //     .scale(Math.min(8, 0.9 / Math.max((x1 - x0) / (rangeWidth / 10), (y1 - y0) / (rangeHeight / 10))))\n          // );\n        }\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      const hoveredId = hoveredNode && hoveredNode.id ? hoveredNode.id : undefined;\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      tempData.edges.forEach(function(d) {\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        context.strokeStyle = hoveredId === d.source.id || hoveredId === d.target.id\n          ? 'rgba(0, 0, 0, 0.5)' : 'rgba(0, 0, 0, 0.08)';\n        context.stroke();\n      });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = d.color\n        context.fill();\n      });\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n\n      context.restore();\n    }\n  }\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      createForceGraph(rootEl, data);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef]);\n\n  return (\n    <div ref={rootNodeRef} />\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from './components/CanvasIndustrySpaceCustomWithSimulation';\n\nconst App = () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n    </div>\n  );\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}