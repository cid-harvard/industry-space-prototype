{"version":3,"sources":["components/CanvasIndustrySpaceCustom.js","App.js","index.js"],"names":["data","JSON","parse","rootNodeRef","useRef","useState","width","window","innerWidth","height","innerHeight","windowDimensions","setWindowDimensions","useEffect","updateWindowDimensions","debounce","addEventListener","removeEventListener","rootEl","current","root","d3","smallerSize","padding","widthMargin","heightMargin","allXValues","allYValues","nodes","forEach","graphics","x","y","push","xRange","yRange","xScale","domain","range","yScale","canvas","append","attr","node","context","getContext","simulation","force","strength","id","d","transform","tempData","hoveredNode","undefined","dragsubject","invertX","invertY","i","length","nodeX","nodeY","dx","dy","radius","applyX","applyY","simulationUpdate","hoveredId","save","clearRect","translate","scale","k","edges","beginPath","moveTo","source","lineTo","target","strokeStyle","stroke","arc","Math","PI","fillStyle","color","fill","style","cursor","restore","call","scaleExtent","on","alert","links","initGraph","createForceGraph","innerHTML","ref","App","CanvasIndustrySpaceCustom","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17415762.chunk.js","sourcesContent":["import React, {useEffect, useState, useRef} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport debounce from 'lodash/debounce';\n\nconst data = JSON.parse(raw('../data/industry-space-custom-3-clean.json'));\n\nconst createForceGraph = (rootEl, data) => {\n  const root = d3.select(rootEl);\n\n  const radius = 5;\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.05;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({graphics: {x, y}}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, width - padding - widthMargin]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ height - padding - heightMargin, 0 + padding + heightMargin]);\n\n\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(width / 2, height / 2))\n                .force(\"charge\", d3.forceManyBody().strength(-50))\n                .force(\"link\", d3.forceLink().strength(1).id(function(d) { return d.id; }))\n\n  let transform = d3.zoomIdentity;\n\n  initGraph(data)\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    let hoveredNode = undefined;\n    \n    d3.select(canvas)\n      .call(d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed))\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();\n        simulationUpdate();\n      })\n      .on('click', function() {\n        const node = dragsubject();\n        if (node) {\n          alert('Clicked ' + node.id);\n        }\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.graphics.x);\n        let nodeY = yScale(node.graphics.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < radius * radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      const hoveredId = hoveredNode && hoveredNode.id ? hoveredNode.id : undefined;\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      tempData.edges.forEach(function(d) {\n        context.beginPath();\n        context.moveTo(xScale(d.source.graphics.x), yScale(d.source.graphics.y));\n        context.lineTo(xScale(d.target.graphics.x), yScale(d.target.graphics.y));\n        context.strokeStyle = hoveredId === d.source.id || hoveredId === d.target.id\n          ? 'rgba(0, 0, 0, 0.5)' : 'rgba(0, 0, 0, 0.04)';\n        context.stroke();\n      });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.graphics.x), yScale(d.graphics.y), radius, 0, 2 * Math.PI, true);\n        context.fillStyle = d.color\n        context.fill();\n      });\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.graphics.x), yScale(hoveredNode.graphics.y), radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n\n      context.restore();\n    }\n  }\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n\n\n  const [windowDimensions, setWindowDimensions] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  useEffect(() => {\n    const updateWindowDimensions = debounce(() => {\n      setWindowDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }, 500);\n    window.addEventListener('resize', updateWindowDimensions);\n    return () => {\n      window.removeEventListener('resize', updateWindowDimensions);\n    };\n  }, []);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      createForceGraph(rootEl, data);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, windowDimensions]);\n\n  return (\n    <div ref={rootNodeRef} width={500} height={500} />\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpaceCustom from './components/CanvasIndustrySpaceCustom';\n\nconst App = () => {\n  return (\n    <div>\n      <CanvasIndustrySpaceCustom />\n    </div>\n  );\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}