{"version":3,"sources":["components/ProductSpaceBasic.js","pages/ProductSpace.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["Tooltip","styled","div","BackButton","button","data","JSON","parse","fadeIn","keyframes","Root","rootNodeRef","useRef","useState","undefined","hovered","setHovered","updateSimulation","setUpdateSimulation","nodeList","setNodeList","useEffect","rootEl","current","triggerSimulationUpdate","root","d3","height","window","innerHeight","width","innerWidth","allXValues","allYValues","nodes","forEach","x","y","push","xRange","yRange","xScale","domain","range","yScale","canvas","append","attr","node","context","getContext","simulation","force","strength","id","d","alphaDecay","transform","hoveredNode","highlightedNode","primaryNodes","update","tempData","zoom","scaleExtent","on","simulationUpdate","canvasEl","dragsubject","invertX","invertY","i","length","nodeX","nodeY","dx","dy","radius","applyX","applyY","highlightedId","linkedEdges","edges","filter","source","target","save","clearRect","translate","scale","k","beginPath","moveTo","lineTo","strokeStyle","stroke","arc","Math","PI","lineWidth","polished","fillStyle","color","fill","linkedNodeIds","includes","style","cursor","restore","call","coords","event","find","n","allEdgeXValues","allEdgeYValues","xBounds","yBounds","bounds","max","min","transition","duration","selected","connected","links","clearSelections","initGraph","setTimeout","createForceGraph","innerHTML","tooltip","top","left","label","replace","backButton","onClick","ref","_arrayLikeToArray","arr","len","arr2","Array","_unsupportedIterableToArray","o","minLen","Object","prototype","toString","slice","constructor","name","from","test","_taggedTemplateLiteral","strings","raw","freeze","defineProperties","value","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","err","unsupportedIterableToArray","TypeError","_toConsumableArray","arrayLikeToArray","iter"],"mappings":"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","file":"static/js/32.675b3d6f.chunk.js","sourcesContent":["import React, {useEffect, useState, useRef} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\nimport styled, {keyframes} from 'styled-components';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nconst BackButton = styled.button`\n  position: fixed;\n  left: 0;\n  top: 0;\n  background-color: transparent;\n  border: none;\n  font-size: 1rem;\n  font-family: 'OfficeCodeProWeb', monospace;\n  cursor: pointer;\n  padding: 1rem;\n`;\n\nconst data = JSON.parse(raw('../data/product-space.json'));\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth;\n\n  // const smallerSize = width < height ? width : height;\n  // const padding = smallerSize * 0.05;\n  // const widthMargin = (width - smallerSize) / 2;\n  // const heightMargin = (height - (smallerSize * 0.9)) / 2;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    // .range([0 + padding + widthMargin, width - padding - widthMargin]);\n    .range([0 + (width * 0.05), width - (width * 0.05)]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    // .range([ 0 + padding + heightMargin, height - padding - heightMargin]);\n    .range([ 0 + (height * 0.05), height - (height * 0.05)]);\n\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(width / 2, height / 2))\n                .force(\"charge\", d3.forceManyBody().strength(-50))\n                .force(\"link\", d3.forceLink().strength(1).id(function(d) { return d.id; }))\n                .alphaDecay(1)\n\n  let transform = d3.zoomIdentity;\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();        \n        setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          primaryNodes = [];\n          const connections = tempData.edges.filter(({target, source}) => target.id === node.id || source.id === node.id);\n          connections.forEach(({target, source}) => {\n            if (!primaryNodes.find(n => n.id === target.id) && node.id !== target.id) {\n              primaryNodes.push(target);\n            }\n            if (!primaryNodes.find(n => n.id === source.id) && node.id !== source.id) {\n              primaryNodes.push(source);\n            }\n          })\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [node, ...primaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.x));\n            allEdgeYValues.push(yScale(n.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / width, dy / height)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes],\n          })\n        } else {\n          primaryNodes = [];\n          setNodeList(undefined);\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n      const linkedEdges = tempData.edges.filter(({source, target}) =>\n          (hoveredNode && (source.id === hoveredNode.id || target.id === hoveredNode.id)) ||\n          source.id === highlightedId || target.id === highlightedId)\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      tempData.edges.forEach(function(d) {\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        context.strokeStyle = hoveredNode && (hoveredNode.id === d.source.id || hoveredNode.id === d.target.id)\n          ? 'rgba(0, 0, 0, 0.5)' : 'rgba(150, 150, 150, 0.4)';\n        context.stroke();\n      });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.lineWidth = 2;\n        context.strokeStyle =  highlightedId === undefined ? '#6d6d6d' : polished.setLightness(0.9, \"#6d6d6d\");\n        context.lineWidth = 2;\n        context.stroke();\n        context.fillStyle = highlightedId === undefined ? d.color : polished.setLightness(0.9, d.color);\n        context.fill();\n      });\n\n      const linkedNodeIds = [];\n      linkedEdges.forEach(function(d) {\n        if (!linkedNodeIds.includes(({id}) => d.source.id)) {\n          linkedNodeIds.push(d.source);\n        }\n        if (!linkedNodeIds.includes(({id}) => d.target.id)) {\n          linkedNodeIds.push(d.target);\n        }\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        context.lineWidth = 1;\n        context.strokeStyle = 'rgba(0, 0, 0, 0.5)';\n        context.stroke();\n      });\n\n      linkedNodeIds.forEach(function(d, i) {\n        if (d) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.color;\n          context.fill();\n          context.lineWidth = 2;\n          context.strokeStyle = '#afafaf';\n          context.stroke();\n        }\n      });\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.lineWidth = 2;\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.lineWidth = 2;\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n      // let nodeCount = 1;\n      if (primaryNodes && primaryNodes.length) {\n        primaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.color;\n          context.fill();\n          context.lineWidth = 2;\n          context.strokeStyle =  hoveredNode && hoveredNode.id === d.id ? 'black' : '#6d6d6d';\n          context.stroke();\n\n          // context.textAlign = 'center';\n          // context.textBaseline = 'middle';\n          // context.font = `400 ${d.radius}px OfficeCodeProWeb`;\n          // context.fillStyle = \"white\";\n          // context.fillText(nodeCount++, xScale(d.x), yScale(d.y));\n        });\n      }\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        const connections = tempData.edges.filter(({target, source}) => target.id === node.id || source.id === node.id);\n        connections.forEach(({target, source}) => {\n          if (!primaryNodes.find(n => n.id === target.id) && node.id !== target.id) {\n            primaryNodes.push(target);\n          }\n          if (!primaryNodes.find(n => n.id === source.id) && node.id !== source.id) {\n            primaryNodes.push(source);\n          }\n        })\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [node, ...primaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.x));\n          allEdgeYValues.push(yScale(n.y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / width, dy / height)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / width, dy / height)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  setTimeout(() => {\n    update.clearSelections();\n  }, 5)\n\n  return update;\n}\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nconst Root = styled.div`\n  opacity: 0;\n  animation: ${fadeIn} 0.15s linear 1 forwards 0.4s;\n`;\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n  const [nodeList, setNodeList] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null;\n\n  const onClear = () => updateSimulation ? updateSimulation.clearSelections() : null;\n  const backButton = nodeList ? (\n    <BackButton onClick={onClear}>{'< Back to Product Space'}</BackButton>\n  ) : null;\n\n  return (\n    <Root>\n      {backButton}\n      {tooltip}\n      <div ref={rootNodeRef} />\n    </Root>\n  );\n}\n","import React from 'react'\nimport ProductSpace from '../components/ProductSpaceBasic';\n\nexport default () => {\n  return (\n    <div>\n      <ProductSpace />\n    </div>\n  );\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}