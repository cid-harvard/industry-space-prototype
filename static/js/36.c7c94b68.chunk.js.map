{"version":3,"sources":["intensity-legend.png","components/industrySpaceMap/Utils.js","components/industrySpaceMap/rapidTooltip.js","components/industrySpaceMap/chart.js","components/industrySpaceMap/data.js","components/industrySpaceMap/styling.js","components/industrySpaceMap/index.js","pages/IndustrySpaceMap.js","sector-legend.png"],"names":["module","exports","drawPoint","r","currentPoint","totalPoints","centerX","centerY","angle","Math","PI","x","cos","y","sin","getBounds","xValues","yValues","innerWidth","innerHeight","outerWidth","outerHeight","maxZoom","xBounds","extent","yBounds","bounds","dx","dy","scale","max","min","translate","wrap","text","width","height","each","t","select","this","words","split","reverse","word","pop","line","lineNumber","attr","tspan","append","undefined","push","join","node","getComputedTextLength","getBBox","RapidTooltipRoot","styled","div","zoomScales","continent","fill","d3","domain","range","stroke","label","countries","nodes","rootEl","data","rootWidth","rootHeight","backButton","tooltipEl","legendEl","shape","shapeParam","URLSearchParams","window","location","search","get","aspect","actual","buffer","longerAspectSide","w","h","smallerActualValue","ratio","margin","left","right","top","bottom","getAspectRation","radiusAdjuster","radius","sectorLegend","querySelector","intensityLegend","state","zoom","active","hoveredShape","hoveredNode","svg","xScale","yScale","g","scaleExtent","on","transform","k","updateChart","reset","element","classed","clearActiveLabels","transition","duration","call","setHoveredShape","datum","setHoveredNode","selectAll","remove","removeEventListener","addEventListener","outerRing","innerRing","continents","clusters","enter","d","map","xCoord","yCoord","rgba","color","style","zoomToShape","nodeOpacity","wasActive","softReset","adjustedCoords","allXValues","allYValues","edges","forEach","_n","i","radiusCoords","length","innerHTML","input","columnCount","rows","row","c","alignment","boldColumns","includes","additionalContent","additionalHTML","title","getStandardTooltip","id","display","pageY","pageX","continentLabels","center","name","countryLabels","nodeLabels","xValue","yValue","edgeData","trg","find","findIndex","e","innerCircleLength","ease","filter","maxChar","trim","slice","delay","lighten","turf","require","JSON","parse","naicsData","proximityNodes","clusterMap","customClusterShapes","colorMap","n","industry6Digit","code","toString","Error","naics_id","topLevelParentId","current","parent_id","parseInt","console","error","parent","initial_x","initial_y","clusterColorMap","C1","C3","naics","indexC1","points","indexC3","industry","custom","convex","featureCollection","point","hull","geometry","coordinates","customViewbox","dimension","Root","BackButton","button","ChartContainer","LegendContainer","LegendImage","img","IndustrySpaceMap","useState","chart","setChart","chartRef","useRef","backButtonRef","tooltipRef","legendRef","dimensions","setWindowDimensions","prevDimensions","usePrevious","useEffect","updateWindowDimensions","debounce","chartNode","backButtonNode","tooltipNode","legendNode","createChart","baseData","ref","className","src"],"mappings":"gJAAAA,EAAOC,QAAU,IAA0B,8C,sGCuBpC,SAASC,EAAUC,EAAGC,EAAcC,EAAaC,EAASC,GAE/D,IACIC,EADkB,EAARC,KAAKC,GAAQL,EACND,EAKrB,MAAO,CAACO,EAHGR,EAAIM,KAAKG,IAAIJ,GAASF,EAGtBO,EAFAV,EAAIM,KAAKK,IAAIN,GAASD,GAK5B,IAAMQ,EAAY,SAACC,EAASC,EAASC,EAAYC,EAAaC,EAAYC,EAAaC,GAC5F,IAAMC,EAAUC,YAAOR,GACjBS,EAAUD,YAAOP,GACjBS,EAAS,CACb,CAACH,EAAQ,GAAIE,EAAQ,IACrB,CAACF,EAAQ,GAAIE,EAAQ,KAEjBE,EAAKD,EAAO,GAAG,GAAKA,EAAO,GAAG,GAC9BE,EAAKF,EAAO,GAAG,GAAKA,EAAO,GAAG,GAC9Bf,GAAKe,EAAO,GAAG,GAAKA,EAAO,GAAG,IAAM,EACpCb,GAAKa,EAAO,GAAG,GAAKA,EAAO,GAAG,IAAM,EACpCG,EAAQpB,KAAKqB,IAAI,EAAGrB,KAAKsB,IAAIT,EAAS,GAAMb,KAAKqB,IAAIH,EAAKT,EAAYU,EAAKT,KAGjF,MAAO,CAACa,UAFU,CAACZ,EAAa,EAAIS,EAAQlB,EAAGU,EAAc,EAAIQ,EAAQhB,GAEtDgB,UAWd,SAASI,EAAKC,EAAMC,EAAOC,GAChCF,EAAKG,MAAK,WAaR,IAXA,IAAMC,EAAIC,YAAOC,MAEXC,EAAQH,EAAEJ,OAAOQ,MAAM,OAAOC,UAChCC,EAAOH,EAAMI,MACbC,EAAO,GACPC,EAAa,EAEXpC,EAAI2B,EAAEU,KAAK,KACXnC,EAAIyB,EAAEU,KAAK,KACXpB,EAAKU,EAAEU,KAAK,MAAQV,EAAEU,KAAK,MAAQ,EACrCC,EAAQX,EAAEJ,KAAK,MAAMgB,OAAO,SAASF,KAAK,IAAKrC,GAAGqC,KAAK,IAAKnC,GAAGmC,KAAK,KAAMpB,EAAK,WACnEuB,IAATP,GAAoB,CACzBE,EAAKM,KAAKR,GACVK,EAAMf,KAAKY,EAAKO,KAAK,MACrB,IAAMC,EAAOL,EAAMK,OACfA,GAAQA,EAAKC,wBAAmC,GAARpB,IAC1CW,EAAKD,MACLI,EAAMf,KAAKY,EAAKO,KAAK,MACrBP,EAAO,CAACF,GAERK,EAAQX,EAAEY,OAAO,SAASF,KAAK,IAAKrC,GAAGqC,KAAK,IAAKnC,GAAGmC,KAAK,KAd1C,MAckDD,EAA0BnB,EAAK,MAAMM,KAAKU,IAE7GA,EAAOH,EAAMI,OAEXP,EAAEgB,OAAOE,UAAUrB,MAAQA,GAASG,EAAEgB,OAAOE,UAAUpB,OAAkB,GAATA,IAClEE,EAAEU,KAAK,UAAW,Q,oBC7EXS,EAAmBC,IAAOC,IAAV,qFAAGD,CAAH,giCCWvBE,EAAa,CACjBC,UAAW,CACTC,KAAMC,MACHC,OAAO,CAAC,EAAG,IACXC,MAAM,CAAC,EAAG,IACbC,OAAQH,MACLC,OAAO,CAAC,EAVC,KAWTC,MAAM,CAAC,EAAG,IACbE,MAAOJ,MACJC,OAAO,CAAC,EAAG,KAAM,OACjBC,MAAM,CAAC,EAAG,EAAG,KAElBG,UAAW,CACTN,KAAMC,MACHC,OAAO,CAAC,IAAK,EAAG,EAAG,EAAG,EAAG,IACzBC,MAAM,CAAC,EAAG,GAAK,IAAM,GAAK,GAAK,IAClCC,OAAQH,MACLC,OAAO,CAAC,IAAK,EAAG,EAAG,GArBV,KAsBTC,MAAM,CAAC,EAAG,GAAK,EAAG,IAAM,KAC3BE,MAAOJ,MACJC,OAAO,CAAC,KAAM,KAAM,KAAM,IAC1BC,MAAM,CAAC,EAAG,EAAG,EAAG,KAErBI,MAAO,CACLP,KAAMC,MACHC,OAAO,CAAC,EAAG,EAAG,KAAM,MACpBC,MAAM,CAAC,EAAG,GAAK,IAAM,IACxBE,MAAOJ,MACJC,OAAO,CAAC,EAAG,IACXC,MAAM,CAAC,EAAG,MAIF,WAACK,EAAQC,EAAMC,EAAWC,EAAYC,EAAYC,EAAWC,GAC1E,IAAIC,EA1Ce,SA6CbC,EADY,IAAIC,gBAAgBC,OAAOC,SAASC,QACzBC,IAAI,SAC7BL,IACFD,EAAQC,GAN6E,MFhD1D,SAACM,EAAQC,EAAQC,GAC9C,IAAMC,EAAmBH,EAAOI,EAAIJ,EAAOK,EAAI,QAAU,SACnDC,GAAsBL,EAAOG,EAAIH,EAAOI,EAAIJ,EAAOI,EAAIJ,EAAOG,GAAe,EAATF,EACpEK,EAA6B,UAArBJ,EAA+BH,EAAOK,EAAIL,EAAOI,EAAIJ,EAAOI,EAAIJ,EAAOK,EAC/EtD,EAA6B,UAArBoD,EAA+BG,EAAqBA,EAAqBC,EACjFvD,EAA8B,WAArBmD,EAAgCG,EAAqBA,EAAqBC,EAKzF,MAAO,CACLxD,QAAOC,SAAQwD,OALF,CACbC,MAAQR,EAAOG,EAAIrD,GAAS,EAAMmD,EAAS,EAAIQ,OAAST,EAAOG,EAAIrD,GAAS,EAAMmD,EAAS,EAC3FS,KAAOV,EAAOI,EAAIrD,GAAU,EAAMkD,EAAS,EAAIU,QAAUX,EAAOI,EAAIrD,GAAU,EAAMkD,EAAS,GAI7FlE,WAAYiE,EAAOG,EACnBnE,YAAagE,EAAOI,GE8ClBQ,CAAgB,CAACT,EAAG,EAAGC,EAAG,GAAI,CAACD,EAAGhB,EAAWiB,EAAGhB,GAAa,IAD/DtC,EAVqF,EAUrFA,MAAOC,EAV8E,EAU9EA,OAAQhB,EAVsE,EAUtEA,WAAYC,EAV0D,EAU1DA,YAAauE,EAV6C,EAU7CA,OAIpCM,GADc/D,EAAQC,EAASD,EAAQC,GArDjB,KAuDxB+D,EAAS,IACbA,EAASA,EAAS,IAAM,IAAMD,EAAiBC,EAASD,EAExD,IAAME,EAAexB,EAASyB,cAAc,6BACtCC,EAAkB1B,EAASyB,cAAc,gCAEzCE,EAAQ,CACZC,KAAM,EACNC,OAAQ,KACRC,aAAc,KACdC,YAAa,MAGTC,EAAM7C,IAAUO,GAAQpB,OAAO,OAClCF,KAAK,QAAU5B,GACf4B,KAAK,SAAU3B,GAEZwF,EAAS9C,MACZC,OAAOD,IAAUQ,EAAKF,OAAO,qBAAE1D,MAC/BsD,MAAM,CAAC,EAAG9B,IAEP2E,EAAS/C,MACZC,OAAOD,IAAUQ,EAAKF,OAAO,qBAAExD,MAC/BoD,MAAM,CAAC7B,EAAQ,IAEZ2E,EAAIH,EAAI1D,OAAO,KAEfsD,EAAOzC,MACViD,YAAY,CAjFD,IACA,KAiFXC,GAAG,QAIN,WACEV,EAAMC,KAAOzC,IAASmD,UAAUC,EAChCJ,EAAE/D,KAAK,YAAae,IAASmD,WAC7BE,OAGF,SAASC,IACc,OAAjBd,EAAME,QACRF,EAAME,OAAOa,QAAQC,QAAQ,UAAU,GAEzChB,EAAME,OAAS,KACfe,IACAZ,EAAIa,aACDC,SAAS,KACTC,KAAKnB,EAAKU,UAAWnD,KACxB6C,EAAIe,KAAKnB,GACTY,IAyBF,SAASQ,EAAgBC,GACvBtB,EAAMG,aAAemB,EACrBT,IAGF,SAASU,EAAeD,GACtBtB,EAAMI,YAAckB,EACftB,EAAME,QACTW,IAIJ,SAASI,IACPT,EAAEgB,UAAU,wBAAwBC,SAxDtCpB,EAAIe,KAAKnB,GAwCT9B,EAAWuD,oBAAoB,QAASZ,GACxC3C,EAAWwD,iBAAiB,QAASb,GAkBrC,IAAMc,EAAYpB,EAAE7D,OAAO,UACxBF,KAAK,QAAS,cAEXoF,EAAYrB,EAAE7D,OAAO,UACxBF,KAAK,QAAS,cAEXqF,EAAatB,EAAEgB,UAAU,wBAC5BxD,KAAKA,EAAK+D,SAASD,YACnBE,QAAQrF,OAAO,WACbF,KAAK,QAAS,uBACdA,KAAK,UAAU,SAAAwF,GAAC,OACfA,EAAE3D,GAAO4D,KAAI,mCAAEC,EAAF,KAAUC,EAAV,WACX,CAAC9B,EAAO6B,GAAU9C,EAAOC,KAAMiB,EAAO6B,GAAU/C,EAAOG,KAAK1C,KAAK,QAAMA,KAAK,QAE/EL,KAAK,QAAQ,SAAAwF,GAAC,OAAII,YAAKJ,EAAEK,MAAO,MAChC7F,KAAK,UAAU,SAAAwF,GAAC,OAAII,YAAK,UAAW,MACpCE,MAAM,UAAW,GACjB7B,GAAG,SAAS,SAAAuB,GAAC,OAAIO,EAAYP,EAAG,MAChCvB,GAAG,cAAc,SAAAuB,GAAC,OAAIZ,EAAgBY,MACtCvB,GAAG,cAAc,kBAAMW,EAAgB,SAEtCxD,EAAY2C,EAAEgB,UAAU,uBAC3BxD,KAAKA,EAAK+D,SAASlE,WACnBmE,QAAQrF,OAAO,WACbF,KAAK,QAAS,sBACdA,KAAK,UAAU,SAAAwF,GAAC,OACfA,EAAE3D,GAAO4D,KAAI,mCAAEC,EAAF,KAAUC,EAAV,WACX,CAAC9B,EAAO6B,GAAU9C,EAAOC,KAAMiB,EAAO6B,GAAU/C,EAAOG,KAAK1C,KAAK,QAAMA,KAAK,QAE/EL,KAAK,QAAQ,SAAAwF,GAAC,OAAII,YAAKJ,EAAEK,MAAO,MAChC7F,KAAK,UAAU,SAAAwF,GAAC,OAAII,YAAK,UAAW,MACpCE,MAAM,UAAW,GACjB7B,GAAG,SAAS,SAAAuB,GAAC,OAAIO,EAAYP,EAAG,MAChCvB,GAAG,cAAc,SAAAuB,GAAC,OAAIZ,EAAgBY,MACtCvB,GAAG,cAAc,kBAAMW,EAAgB,SAEtClB,EAAeK,EAAE7D,OAAO,WAC3BF,KAAK,QAAS,4BACd8F,MAAM,UAAW,QAEdE,EAAcpF,EAAWS,MAAMP,KAAKyC,EAAMC,MAC1CnC,EAAQ0C,EAAEgB,UAAU,kBACvBxD,KAAKA,EAAKF,OACVkE,QAAQrF,OAAO,UACbF,KAAK,QAAS,iBACdA,KAAK,MAAM,SAAAwF,GAAC,OAAI3B,EAAO2B,EAAE7H,GAAKiF,EAAOC,QACrC7C,KAAK,MAAM,SAAAwF,GAAC,OAAI1B,EAAO0B,EAAE3H,GAAK+E,EAAOG,OACrC/C,KAAK,IAAKmD,GACVnD,KAAK,QAAQ,SAAAwF,GAAC,MAAI,UAClBM,MAAM,UAAWE,GACjB/B,GAAG,SA6DR,SAAqBuB,GACnB,GAAqB,OAAjBjC,EAAME,QAAmBF,EAAME,OAAOa,QAAQhE,SAAWd,KAC3D,OAvJJ,SAAmBgG,GACI,OAAjBjC,EAAME,QACRF,EAAME,OAAOa,QAAQC,QAAQ,UAAU,GAEzChB,EAAME,OAAS,KACfe,IALoB,MAOOzG,EACzB,CAAC8F,EAAO2B,EAAE7H,GAAKiF,EAAOC,MACtB,CAACiB,EAAO0B,EAAE3H,GAAK+E,EAAOG,KACtB5D,EAAOC,EAAQhB,EAAYC,EAAa,GAHnCW,EAPa,EAObA,UAAWH,EAPE,EAOFA,MAMlB+E,EAAIe,KAAMnB,EAAKU,UAAWnD,IAAgB/B,UAAUA,EAAU,GAAGA,EAAU,IAAIH,MAAMA,IACrF+E,EAAIe,KAAKnB,GACTgC,EAAES,WAAY,EACd7B,IAuIS8B,CAAUV,GAEnB5B,EAAIK,GAAG,QAAS,MAChBO,IACqB,OAAjBjB,EAAME,QACRF,EAAME,OAAOa,QAAQC,QAAQ,UAAU,GAEzChB,EAAME,OAAS,GACfF,EAAME,OAAOa,QAAUvD,IAAUvB,MAAM+E,QAAQ,UAAU,GACzDhB,EAAME,OAAOoB,MAAQW,EAErB,IAAMlI,EAAUkI,EAAEW,eAAiBX,EAAEW,eAAexI,EAAIkG,EAAO2B,EAAE7H,GAAKiF,EAAOC,KACvEtF,EAAUiI,EAAEW,eAAiBX,EAAEW,eAAetI,EAAIiG,EAAO0B,EAAE3H,GAAK+E,EAAOG,IACvEqD,EAAa,CAAC9I,GACd+I,EAAa,CAAC9I,GACpBiI,EAAEc,MAAMC,SAAQ,SAACC,EAAIC,GACnB,IAAMC,EAAexJ,EA7QI,GA6QuBuJ,EAAGjB,EAAEc,MAAMK,OAAQrJ,EAASC,GAC5E6I,EAAWhG,KAAKsG,EAAa/I,GAC7B0I,EAAWjG,KAAKsG,EAAa7I,MApBT,MAuBKE,EAAUqI,EAAYC,EAAYlH,EAAOC,EAAQhB,EAAYC,EAAa,GAA9FW,EAvBe,EAuBfA,UAAWH,EAvBI,EAuBJA,MAElB+E,EAAIa,aACDC,SAAS,KACTC,KAAMnB,EAAKU,UAAWnD,IAAgB/B,UAAUA,EAAU,GAAGA,EAAU,IAAIH,MAAMA,OAvFjFoF,GAAG,aAAa,SAAAuB,GACf7D,EAAUiF,UDlIgB,SAACC,GACjC,IAAMC,EAAcD,EAAME,KAAKJ,QAAUE,EAAME,KAAK,GAAGJ,OAASE,EAAME,KAAK,GAAGJ,OAAS,EAEnFI,EAAO,GACXF,EAAME,KAAKR,SAAQ,SAAApJ,GACjB,IAAI6J,EAAM,GACV7J,EAAEoJ,SAAQ,SAACU,EAAGR,GACZ,IAAMS,EAAkB,IAANT,EACd,iDACA,gDACEX,EAAQe,EAAMM,aAAeN,EAAMM,YAAYC,SAASX,GAAhD,kCACiBS,EADjB,KACgC,GAC9CF,GAAS,0CAAsClB,EAAtC,YAA+CmB,EAA/C,aAEXF,GAAcC,KAGhB,IAAMK,EAAoBR,EAAMS,eAAN,eAA+BT,EAAMS,eAArC,UAA8D,GAExF,MAAM,gFAAN,OAEgET,EAAMhB,MAFtE,wBAGQgB,EAAMU,MAHd,kJAO4DT,EAP5D,uCASQC,EATR,iCAWMM,EAXN,gIC+G4BG,CAAmB,CACvCD,MAAO/B,EAAErE,MACT0E,MAAOD,YAAKJ,EAAEK,MAAO,IACrBkB,KAAM,CACJ,CAAC,QAASvB,EAAEiC,OAGhB9F,EAAUmE,MAAM4B,QAAU,QAC1B/F,EAAUmE,MAAM/C,IAAMhC,IAAS4G,MAAQ,KACvChG,EAAUmE,MAAMjD,KAAO9B,IAAS6G,MAAQ,QAEzC3D,GAAG,cAAc,SAAAuB,GAAC,OAAIV,EAAeU,MACrCvB,GAAG,cAAc,WAChBtC,EAAUmE,MAAM4B,QAAU,OAC1B5C,EAAe,SAGfnB,EAAcI,EAAE7D,OAAO,UAC1BF,KAAK,QAAS,yBACd8F,MAAM,UAAW,QAEd+B,EAAkB9D,EAAEgB,UAAU,8BACjCxD,KAAKA,EAAK+D,SAASD,YACnBE,QAAQrF,OAAO,QACbF,KAAK,QAAS,6BACdA,KAAK,KAAK,SAAAwF,GAAC,OAAI3B,EAAO2B,EAAEsC,OAAO,IAAMlF,EAAOC,QAC5C7C,KAAK,KAAK,SAAAwF,GAAC,OAAI1B,EAAO0B,EAAEsC,OAAO,IAAMlF,EAAOG,OAC5C+C,MAAM,YAAsB,EAAT3C,EAAa,MAChCjE,MAAK,SAAAsG,GAAC,OAAIA,EAAEuC,QAEXC,EAAgBjE,EAAE7D,OAAO,KAC5BF,KAAK,QAAS,kCACd8F,MAAM,UAAW,QAEpBkC,EAAcjD,UAAU,6BACrBxD,KAAKA,EAAK+D,SAASlE,WACnBmE,QAAQrF,OAAO,QACbF,KAAK,QAAS,4BACdA,KAAK,KAAK,SAAAwF,GAAC,OAAI3B,EAAO2B,EAAEsC,OAAO,IAAMlF,EAAOC,QAC5C7C,KAAK,KAAK,SAAAwF,GAAC,OAAI1B,EAAO0B,EAAEsC,OAAO,IAAMlF,EAAOG,OAC5C+C,MAAM,YAAsB,EAAT3C,EAAa,MAChCjE,MAAK,SAAAsG,GAAC,OAAIA,EAAEuC,QAEjB,IAAME,EAAalE,EAAE7D,OAAO,KACzBF,KAAK,QAAS,8BA6CjB,SAAS+F,EAAYP,EAAGlH,GAEtB,IAAM8H,EAAa,GACbC,EAAa,GACnBb,EAAE3D,GAAO0E,SAAQ,YAAuB,IAAD,mBAApB2B,EAAoB,KAAZC,EAAY,KACrC/B,EAAWhG,KAAKyD,EAAOqE,GAAUtF,EAAOC,MACxCwD,EAAWjG,KAAK0D,EAAOqE,GAAUvF,EAAOG,QANX,MASJhF,EAAUqI,EAAYC,EAAYjI,EAAYC,EAAaD,EAAYC,EAAaC,GAAxGU,EATwB,EASxBA,UAAWH,EATa,EASbA,MAElB+E,EAAIa,aACDC,SAAS,KACTC,KAAMnB,EAAKU,UAAWnD,IAAgB/B,UAAUA,EAAU,GAAGA,EAAU,IAAIH,MAAMA,IAGtF,SAASuF,IACP,GAAIb,EAAME,OAAQ,CAChB,IAAM2E,EAAW7E,EAAME,OAAOoB,MAAMyB,MAAMb,KAAI,gBAAE4C,EAAF,EAAEA,IAAF,OAAW9G,EAAKF,MAAMiH,MAAK,qBAAEb,KAAeY,QACpF/K,EAAUiG,EAAME,OAAOoB,MAAMsB,eACjC5C,EAAME,OAAOoB,MAAMsB,eAAexI,EAAIkG,EAAON,EAAME,OAAOoB,MAAMlH,GAAKiF,EAAOC,KACxEtF,EAAUgG,EAAME,OAAOoB,MAAMsB,eACjC5C,EAAME,OAAOoB,MAAMsB,eAAetI,EAAIiG,EAAOP,EAAME,OAAOoB,MAAMhH,GAAK+E,EAAOG,IAE9EoC,EACGnF,KAAK,KAAM1C,GACX0C,KAAK,KAAMzC,GACXuI,MAAM,UAAW,GACjBrB,aACAC,SAAS,KACToB,MAAM,UAAW,GACpBV,EACGpF,KAAK,KAAM1C,GACX0C,KAAK,KAAMzC,GACXuI,MAAM,UAAW,GACjBrB,aACAC,SAAS,KACToB,MAAM,UAAW,GAEpBzE,EACGhC,MAAK,SAAAmG,GACJ,IAAMiB,EAAI2B,EAASG,WAAU,SAAAC,GAAC,OAAIA,EAAEf,KAAOjC,EAAEiC,MAC7C,IAAW,IAAPhB,EAAU,CACZ,IAAMgC,EAAoBL,EAASzB,OAAS,EAAIyB,EAASzB,OAAS,EAC5DR,EAAiBjJ,EACrBuJ,EAAI,EAvUa,GACA,GAuUjBA,EAAI,EAAIA,EAAIA,EAAI,EAChBA,EAAI,EAAIgC,EAAoBL,EAASzB,OAAS,EAC9CrJ,EACAC,GAEFiI,EAAEW,eAAiBA,OACVX,EAAEiC,KAAOlE,EAAME,OAAOoB,MAAM4C,KACrCjC,EAAEW,oBAAiBhG,MAGtB2F,MAAM,iBAAkB,QACxBA,MAAM,UAAW,GACjBA,MAAM,WAAW,SAAAN,GAAC,OAAIA,EAAEiC,KAAOlE,EAAME,OAAOoB,MAAM4C,IAAMW,EAASE,MAAK,SAAAE,GAAC,OAAIA,EAAEf,KAAOjC,EAAEiC,MAAM,QAAU,UACtGzH,KAAK,QAAQ,SAAAwF,GAAC,OAAIA,EAAEK,SACpBpB,aACAiE,KAAK3H,KACL2D,SAAS,KACT1E,KAAK,MAAM,SAAAwF,GAAC,OAAIA,EAAEW,eAAiBX,EAAEW,eAAexI,EAAIkG,EAAO2B,EAAE7H,GAAKiF,EAAOC,QAC7E7C,KAAK,MAAM,SAAAwF,GAAC,OAAIA,EAAEW,eAAiBX,EAAEW,eAAetI,EAAIiG,EAAO0B,EAAE3H,GAAK+E,EAAOG,OAEhFgB,EAAEgB,UAAU,wBACTxD,KAAKA,EAAKF,MAAMsH,QAAO,SAAAnD,GAAC,OAAIA,EAAEiC,KAAOlE,EAAME,OAAOoB,MAAM4C,IAAMW,EAASE,MAAK,SAAAE,GAAC,OAAIA,EAAEf,KAAOjC,EAAEiC,UAC5FpI,MAAK,SAAAmG,GACJ,IAAMiB,EAAI2B,EAASG,WAAU,SAAAC,GAAC,OAAIA,EAAEf,KAAOjC,EAAEiC,MAC7C,IAAW,IAAPhB,EAAU,CACZ,IAAMgC,EAAoBL,EAASzB,OAAS,EAAIyB,EAASzB,OAAS,EAC5DR,EAAiBjJ,EACrBuJ,EAAI,EAnWa,GACA,GAmWjBA,EAAI,EAAIA,EAAIA,EAAI,EAChBA,EAAI,EAAIgC,EAAoBL,EAASzB,OAAS,EAC9CrJ,EACAC,GAEFiI,EAAEW,eAAiBA,MAGtBZ,QAAQrF,OAAO,QACbF,KAAK,QAAS,uBACdA,KAAK,KAAK,SAAAwF,GAAC,OAAIA,EAAEW,eAAiBX,EAAEW,eAAexI,EAAIkG,EAAO2B,EAAE7H,GAAKiF,EAAOC,QAC5E7C,KAAK,KAAK,SAAAwF,GAAC,OAAIA,EAAEW,eAChBX,EAAEW,eAAetI,EAAIJ,KAAKqB,IAAa,EAATqE,EAAY,GACxCW,EAAO0B,EAAE3H,GAAK+E,EAAOG,IAAMtF,KAAKqB,IAAa,EAATqE,EAAY,MAEnD2C,MAAM,iBAAkB,QACxBA,MAAM,YAAarI,KAAKqB,IAAa,GAATqE,EAAc,MAAQ,MAClDjE,MAAK,SAAAsG,GAAC,OFpVYtG,EEoVKsG,EAAErE,MFpVDyH,EEoVQ,GFnVrC1J,EAAK2J,OAAOlC,OAASiC,EAAU,EAC1B1J,EAEAA,EAAK4J,MAAM,EAAGF,GAAW,MAJR,IAAC1J,EAAM0J,KEqVxBjE,KAAK1F,EAAMxB,KAAKqB,IAAa,GAATqE,EAAa,IAAc,EAATA,GACtC2C,MAAM,UAAW,GACjBrB,aACAsE,MAAM,KACNrE,SAAS,KACToB,MAAM,UAAW,GAEtBT,EACGS,MAAM,iBAAkB,QACxBA,MAAM,UAAW,GAEpB1E,EACG0E,MAAM,iBAAkB,QACxBA,MAAM,UAAW,GAEpBpC,EACGoC,MAAM,UAAW,QAEpBnC,EACGmC,MAAM,UAAW,QAEpB+B,EACG/B,MAAM,UAAW,QAEpBkC,EACGlC,MAAM,UAAW,QAEpBmC,EACGnC,MAAM,UAAW,QAEpBvC,EAAME,OAAOa,QACVwB,MAAM,UAAW,SAEpBpE,EAAWoE,MAAM4B,QAAU,QAC3BtE,EAAa0C,MAAM4B,QAAU,QAC7BpE,EAAgBwC,MAAM4B,QAAU,WAC3B,CACL,IAAM1B,EAAcpF,EAAWS,MAAMP,KAAKyC,EAAMC,MAChDnC,EACGhC,MAAK,SAAAmG,GAAC,OAAIA,EAAEW,oBAAiBhG,KAC7B2F,MAAM,UAAW,SACjBA,MAAM,iBAAkBlF,EAAWS,MAAMP,KAAKyC,EAAMC,MAAQ,KAAQ,OAAS,QAC7EsC,MAAM,UAAWE,GACjBhG,KAAK,QAAQ,SAAAwF,GACZ,OAAIjC,EAAMC,KAAO,EACR,OACED,EAAMC,KAAO,KACfwF,YAAQpI,EAAWQ,UAAUN,KAAKyC,EAAMC,MAAQ,GAAKgC,EAAEK,OACrDtC,EAAMC,KAAO,KACfwF,YAAQpI,EAAWQ,UAAUN,KAAKyC,EAAMC,MAAQ,GAAKgC,EAAEK,OAEvDL,EAAEK,SAGZpB,aACAiE,KAAK3H,KACL2D,UAAS,SAAAc,GACR,OAAIA,EAAES,WACJT,EAAES,eAAY9F,EACP,GAEA,OAGVH,KAAK,MAAM,SAAAwF,GAAC,OAAI3B,EAAO2B,EAAE7H,GAAKiF,EAAOC,QACrC7C,KAAK,MAAM,SAAAwF,GAAC,OAAI1B,EAAO0B,EAAE3H,GAAK+E,EAAOG,OAExCsC,EACGS,MAAM,iBAAkBlF,EAAWC,UAAUC,KAAKyC,EAAMC,MAAQ,GAAM,OAAS,QAC/ExD,KAAK,QAAQ,SAAAwF,GAAC,OAAII,YAAKJ,EAAEK,MAAOjF,EAAWC,UAAUC,KAAKyC,EAAMC,UAChExD,KAAK,UAAU,SAAAwF,GAAC,OAAII,YAAK,UAAWhF,EAAWC,UAAUK,OAAOqC,EAAMC,UACtEsC,MAAM,UAAW,GAEpB1E,EACG0E,MAAM,iBAAkBlF,EAAWQ,UAAUN,KAAKyC,EAAMC,MAAQ,IAAO,OAAS,QAChFxD,KAAK,QAAQ,SAAAwF,GAAC,OAAII,YAAKJ,EAAEK,MAAOjF,EAAWQ,UAAUN,KAAKyC,EAAMC,UAChExD,KAAK,UAAU,SAAAwF,GAAC,OAAII,YAAK,UAAWhF,EAAWQ,UAAUF,OAAOqC,EAAMC,UACtEsC,MAAM,UAAW,GAEpB+B,EACG/B,MAAM,UAAWlF,EAAWC,UAAUM,MAAMoC,EAAMC,OAClDsC,MAAM,UAAW,SAEpBkC,EACGlC,MAAM,UAAWlF,EAAWQ,UAAUD,MAAMoC,EAAMC,OAClDsC,MAAM,UAAW,SAEhBvC,EAAMC,KAAO,EACfyE,EACGnC,MAAM,UAAWlF,EAAWS,MAAMF,MAAMoC,EAAMC,OAC9CsC,MAAM,UAAW,SAEpBmC,EACGnC,MAAM,UAAW,QAGlBvC,EAAMC,KAAO,EAChB9B,EAAWoE,MAAM4B,QAAU,QAE3BhG,EAAWoE,MAAM4B,QAAU,OAGxBnE,EAAMC,KAAO,KACfJ,EAAa0C,MAAM4B,QAAU,QAC7BpE,EAAgBwC,MAAM4B,QAAU,SAEhCtE,EAAa0C,MAAM4B,QAAU,OAC7BpE,EAAgBwC,MAAM4B,QAAU,SAGlCvC,EACGW,MAAM,UAAW,GACpBV,EACGU,MAAM,UAAW,GAEhBvC,EAAMG,aACRA,EACG1D,KAAK,SAAUuD,EAAMG,aAAa7B,GAAO4D,KAAI,mCAAEC,EAAF,KAAUC,EAAV,WAC5C,CAAC9B,EAAO6B,GAAU9C,EAAOC,KAAMiB,EAAO6B,GAAU/C,EAAOG,KAAK1C,KAAK,QAAMA,KAAK,MAC7EL,KAAK,OAAQ,QACbA,KAAK,SAAU,WACfA,KAAK,eAAgB,GACrB8F,MAAM,UAAW,SAEpBpC,EACGoC,MAAM,UAAW,QAElBvC,EAAMI,YACRA,EACG3D,KAAK,KAAM6D,EAAON,EAAMI,YAAYhG,GAAKiF,EAAOC,MAChD7C,KAAK,KAAM8D,EAAOP,EAAMI,YAAY9F,GAAK+E,EAAOG,KAChD/C,KAAK,OAAQuD,EAAMI,YAAYkC,OAC/B7F,KAAK,IAAKmD,GACVnD,KAAK,SAAUuD,EAAMC,KAAO,EAAI,OAAS,WACzCxD,KAAK,eAAgBmD,EAAS,EAAI,GAAM,GACxC2C,MAAM,UAAW,SAEpBnC,EACGmC,MAAM,UAAW,SAK1B,OAtRAmC,EAAWlD,UAAU,yBAUrBkD,EACGnC,MAAM,UAAW,QA2Qb,CAAC1B,gB,yBCrhBJ6E,EAAOC,EAAQ,KAEd7H,EAAS8H,KAAKC,MAAL,iylkBAAT/H,MACDgI,EAAYF,KAAKC,MAAL,kk7cACZE,EAAiBH,KAAKC,MAAL,8w/bACjBG,EAAaJ,KAAKC,MAAL,6m7HAEbI,EAAsBL,KAAKC,MAAL,2v5BAEtBK,EAAW,CACf,CAAEhC,GAAI,IAAK5B,MAAO,WAClB,CAAE4B,GAAI,IAAK5B,MAAO,WAClB,CAAE4B,GAAI,IAAK5B,MAAO,WAClB,CAAE4B,GAAI,IAAK5B,MAAO,WAClB,CAAE4B,GAAI,IAAK5B,MAAO,WAClB,CAAE4B,GAAI,IAAK5B,MAAO,WAClB,CAAE4B,GAAI,IAAK5B,MAAO,WAClB,CAAE4B,GAAI,IAAK5B,MAAO,WAClB,CAAE4B,GAAI,IAAK5B,MAAO,YAGdtE,EAAO,GAEP6E,EAAa,GACbC,EAAa,GACnBhF,EAAMkF,SAAQ,YAAa,IAAX5I,EAAU,EAAVA,EAAGE,EAAO,EAAPA,EACjBuI,EAAWhG,KAAKzC,GAChB0I,EAAWjG,KAAKvC,MAKlB0D,EAAKF,MAAQA,EAAMoE,KAAI,SAAAiE,GAGrB,IACMC,EAAiBN,EAAUf,MAAK,gBAAEsB,EAAF,EAAEA,KAAF,OAAYF,EAAEjC,GAAGoC,aAAeD,KACtE,IAAKD,EACH,MAAM,IAAIG,MAAM,sBAMlB,IAJA,IAAMC,EAAWJ,EAAeI,SAC1B5I,EAAQwI,EAAe5B,KACzBiC,EAAmBD,EAASF,WAC5BI,EAAUZ,EAAUf,MAAK,SAAAzD,GAAK,OAAIA,EAAMkF,WAAaA,KACnDE,GAAiC,OAAtBA,EAAQC,YAEvBD,EAAUZ,EAAUf,MAAK,SAAAzD,GAAK,OAAIA,EAAMkF,WAAaE,EAAQC,eACxB,OAAtBD,EAAQC,UACrBF,EAAmBC,EAAQC,UAAUL,WAC5BI,GAAgC,OAArBA,EAAQF,WAC5BC,EAAmBC,EAAQF,SAASF,YAGxC,GAAIM,SAASH,EAAkB,IAAM,EAEnC,MADAI,QAAQC,MAAMJ,GACR,IAAIH,MAAM,uBAvBQ,IA0BnBjE,EAAS4D,EAASnB,MAAK,qBAAEb,KAAeuC,KAAxCnE,MAEDS,EAAQgD,EAAeI,EAAEjC,KAAO6B,EAAeI,EAAEjC,IAAId,OAAS2C,EAAeI,EAAEjC,IAAM,GAE3F,OAAO,2BACFiC,GADL,IAEEvG,OA7Ba,IA8Bb0C,QACAyE,OAAQL,EACR9I,QACAmF,QACAiE,UAAWb,EAAE/L,EACb6M,UAAWd,EAAE7L,OAIjB,IAAM4M,EAAkB,CAQtB,EAAK,UACL,EAAK,UACL,EAAK,UACL,GAAM,UACN,GAAM,UACN,GAAM,UACN,GAAM,WAGRlJ,EAAK+D,SAAW,CAACD,WAAY,GAAIjE,UAAW,IAE5CmI,EAAWhD,SAAQ,YAAsB,IAApBmE,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,MACvBC,EAAUtJ,EAAK+D,SAASD,WAAWkD,WAAU,SAAAtB,GAAC,OAAIA,EAAEQ,KAAOiD,MAC9C,IAAbG,IACFA,EAAUtJ,EAAK+D,SAASD,WAAWsB,OACnCpF,EAAK+D,SAASD,WAAWwF,GAAW,CAACpD,GAAIiD,EAAII,OAAQ,GAAIjF,MAAO4E,EAAgBC,KAElF,IAAIK,EAAUxJ,EAAK+D,SAASlE,UAAUmH,WAAU,SAAAtB,GAAC,OAAIA,EAAEQ,KAAOkD,MAC7C,IAAbI,IACFA,EAAUxJ,EAAK+D,SAASlE,UAAUuF,OAClCpF,EAAK+D,SAASlE,UAAU2J,GAAW,CAACtD,GAAIkD,EAAIG,OAAQ,GAAIjF,MAAO4E,EAAgBC,KAEjF,IAAMM,EAAWzJ,EAAKF,MAAMiH,MAAK,SAAAoB,GAAC,OAAIA,EAAEjC,KAAOmD,KAC3CI,IACFzJ,EAAK+D,SAASD,WAAWwF,GAASC,OAAO1K,KAAK,CAAC4K,EAASrN,EAAGqN,EAASnN,IACpE0D,EAAK+D,SAASlE,UAAU2J,GAASD,OAAO1K,KAAK,CAAC4K,EAASrN,EAAGqN,EAASnN,QAKvE0D,EAAK+D,SAASD,WAAa9D,EAAK+D,SAASD,WAAWI,KAAI,SAAAD,GACtD,IAAMyF,EAASzB,EAAoBnE,WAAWiD,MAAK,SAAArB,GAAC,OAAIA,EAAEQ,KAAOjC,EAAEiC,MACnE,OAAO,2BACFjC,GADL,IAEEuC,KAAK,WAAD,OAAavC,EAAEiC,IACnByD,OAAQD,EAAOH,OACfG,OAAQA,EAAOH,OACfhD,OAAQmD,EAAOnD,YAInBvG,EAAK+D,SAASlE,UAAYG,EAAK+D,SAASlE,UAAUqE,KAAI,SAAAD,GAEpD,IAAMsC,EAASmB,EAAKnB,OAAOmB,EAAKkC,kBAAkB3F,EAAEsF,OAAOrF,KAAI,SAAA2F,GAAK,OAAInC,EAAKmC,MAAMA,QACnF,OAAO,2BACF5F,GADL,IAEEuC,KAAK,WAAD,OAAavC,EAAEiC,IACnByD,OAAQG,IAAK7F,EAAEsF,OAAQ,KACvBG,OAAQ,GACRnD,OAAQA,EAAOwD,SAASC,iBAI5BhK,EAAKiK,cAAgBhC,EAAoBiC,UAG1BlK,Q,0vFCnIf,IAEamK,EAAOhL,IAAOC,IAAV,IAFE,aAONgL,EAAajL,IAAOkL,OAAV,IAPJ,aAoBNC,EAAiBnL,IAAOC,IAAV,IFVI,GADA,GETZ,aAgHNmL,EAAkBpL,IAAOC,IAAV,IJrHS,4BIwIxBoL,EAAcrL,IAAOsL,IAAV,K,kBC5DTC,EA5DU,WAAO,IAAD,EACHC,mBAAS,MADN,mBACtBC,EADsB,KACfC,EADe,KAEvBC,EAAWC,iBAAO,MAClBC,EAAgBD,iBAAO,MACvBE,EAAaF,iBAAO,MACpBG,EAAYH,iBAAO,MALI,EAMeJ,mBAAS,CACjD/M,MAAO6C,OAAO9D,WACdkB,OAAQ4C,OAAO7D,cARU,mBAMpBuO,EANoB,KAMRC,EANQ,KAWvBC,EAAiBC,YAAYH,GA6BnC,OA3BAI,qBAAU,WACR,IAAMC,EAAyBC,KAAS,WACtCL,EAAoB,CAClBxN,MAAO6C,OAAO9D,WACdkB,OAAQ4C,OAAO7D,gBAEhB,KAEH,OADA6D,OAAOkD,iBAAiB,SAAU6H,GAC3B,WACL/K,OAAOiD,oBAAoB,SAAU8H,MAEtC,IAEHD,qBAAU,WACR,IAAMG,EAAYZ,EAASpC,QACrBiD,EAAiBX,EAActC,QAC/BkD,EAAcX,EAAWvC,QACzBmD,EAAaX,EAAUxC,QAEzBgD,GAAaC,GAAkBC,GAAeC,IAAyB,OAAVjB,GAC5DS,IAAmBF,EAAWvN,QAAUyN,EAAezN,OAASuN,EAAWtN,SAAWwN,EAAexN,WAExG6N,EAAUrG,UAAY,GACtBwF,EAASiB,EAAYJ,EAAWK,EAAUZ,EAAWvN,MAAOuN,EAAWtN,OAAQ8N,EAAgBC,EAAaC,OAE7G,CAACjB,EAAOE,EAAUE,EAAeC,EAAYC,EAAWC,EAAYE,IAGrE,kBAAClB,EAAD,KACE,kBAACC,EAAD,CAAY4B,IAAKhB,GAAgB,4BACjC,kBAACV,EAAD,CAAgB0B,IAAKlB,IACrB,kBAACP,EAAD,CAAiByB,IAAKd,GACpB,kBAACV,EAAD,CACEyB,UL/D8B,8BKgE9BC,IAAKvE,EAAQ,OAEf,kBAAC6C,EAAD,CACEyB,ULlE2B,2BKmE3BC,IAAKvE,EAAQ,OAGjB,kBAACzI,EAAD,CAAkB8M,IAAKf,MCvEd,qBACb,OACE,kBAAC,EAAD,Q,mBCLJxP,EAAOC,QAAU,IAA0B","file":"static/js/36.c7c94b68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/intensity-legend.8c1fb36a.png\";","import {extent} from 'd3-array';\nimport {select} from 'd3-selection';\n\nexport const intensityLegendClassName = 'intensity-legend-class-name';\nexport const sectorLegendClassName = 'sector-legend-class-name';\n\nexport const getAspectRation = (aspect, actual, buffer) => {\n  const longerAspectSide = aspect.w > aspect.h ? 'width' : 'height';\n  const smallerActualValue = (actual.w > actual.h ? actual.h : actual.w) - (buffer * 2);\n  const ratio = longerAspectSide === 'width' ? aspect.h / aspect.w : aspect.w / aspect.h;\n  const width = longerAspectSide === 'width' ? smallerActualValue : smallerActualValue * ratio;\n  const height = longerAspectSide === 'height' ? smallerActualValue : smallerActualValue * ratio;\n  const margin = {\n    left: ((actual.w - width) / 2) + (buffer / 2), right: ((actual.w - width) / 2) + (buffer / 2),\n    top: ((actual.h - height) / 2) + (buffer / 2), bottom: ((actual.h - height) / 2) + (buffer / 2),\n  }\n  return {\n    width, height, margin,\n    outerWidth: actual.w,\n    outerHeight: actual.h,\n  }\n};\n\nexport function drawPoint(r, currentPoint, totalPoints, centerX, centerY) {  \n\n  var theta = ((Math.PI*2) / totalPoints);\n  var angle = (theta * currentPoint);\n\n  const x = (r * Math.cos(angle) + centerX);\n  const y = (r * Math.sin(angle) + centerY);\n\n  return {x, y};\n}\n\nexport const getBounds = (xValues, yValues, innerWidth, innerHeight, outerWidth, outerHeight, maxZoom) => {\n  const xBounds = extent(xValues);\n  const yBounds = extent(yValues);\n  const bounds = [\n    [xBounds[0], yBounds[0]],\n    [xBounds[1], yBounds[1]],\n  ];\n  const dx = bounds[1][0] - bounds[0][0];\n  const dy = bounds[1][1] - bounds[0][1];\n  const x = (bounds[0][0] + bounds[1][0]) / 2;\n  const y = (bounds[0][1] + bounds[1][1]) / 2;\n  const scale = Math.max(1, Math.min(maxZoom, 0.9 / Math.max(dx / innerWidth, dy / innerHeight)));\n  const translate = [outerWidth / 2 - scale * x, outerHeight / 2 - scale * y];\n\n  return {translate, scale};\n}\n\nexport const ellipsisText = (text, maxChar) => {\n  if (text.trim().length < maxChar + 3) {\n    return text;\n  } else {\n    return text.slice(0, maxChar) + '...';\n  }\n}\n\nexport function wrap(text, width, height) {\n  text.each(function() {\n    // @ts-ignore\n    const t = select(this);\n    // @ts-ignore\n    const words = t.text().split(/\\s+/).reverse();\n    let word = words.pop();\n    let line = [];\n    let lineNumber = 0; //<-- 0!\n    const lineHeight = 1.2; // ems\n    const x = t.attr('x'); //<-- include the x!\n    const y = t.attr('y');\n    const dy = t.attr('dy') ? t.attr('dy') : 0; //<-- null check\n    let tspan = t.text(null).append('tspan').attr('x', x).attr('y', y).attr('dy', dy + 'em');\n    while (word !== undefined) {\n      line.push(word);\n      tspan.text(line.join(' '));\n      const node = tspan.node();\n      if (node && node.getComputedTextLength() > (width * 0.8)) {\n        line.pop();\n        tspan.text(line.join(' '));\n        line = [word];\n        // @ts-ignore\n        tspan = t.append('tspan').attr('x', x).attr('y', y).attr('dy', ++lineNumber * lineHeight + dy + 'em').text(word);\n      }\n      word = words.pop();\n    }\n    if (t.node().getBBox().width > width || t.node().getBBox().height > height * 0.8) {\n      t.attr('opacity', '0');\n    }\n  });\n}\n","import styled from 'styled-components/macro';\n\n// interface Input {\n//   title: string;\n//   color: string;\n//   rows: string[][];\n//   boldColumns?: number[];\n//   additionalHTML?: string;\n// }\n\nexport const RapidTooltipRoot = styled.div`\n  position: fixed;\n  z-index: 3000;\n  max-width: 16rem;\n  padding-bottom: 0.5rem;\n  font-size: 0.7rem;\n  line-height: 1.4;\n  text-transform: none;\n  transition: opacity 0.15s ease;\n  color: #333;\n  background-color: #fff;\n  border: 1px solid #dfdfdf;\n  border-radius: 4px;\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.15);\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1.5rem));\n  display: none;\n\n  .rapid-tooltip-title {\n    padding: 0.5rem;\n  }\n\n  .rapid-tooltip-subsection-grid {\n    display: grid;\n    grid-gap: 0.5rem;\n    padding: 0.5rem;\n  }\n\n  .rapid-tooltip-cell {\n    display: flex;\n  }\n\n  .rapid-tooltip-arrow-container {\n    width: 100%;\n    height: 0.5rem;\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    transform: translate(0, 100%);\n  }\n\n  .rapid-tooltip-arrow {\n    width: 0.5rem;\n    height: 0.5rem;\n    position: relative;\n    display: flex;\n    justify-content: center;\n    left: -0.25rem;\n\n    &:before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      border-left: 9px solid transparent;\n      border-right: 9px solid transparent;\n      border-top: 9px solid #dfdfdf;\n    }\n\n    &:after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 1px;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 8px solid #fff;\n    }\n  }\n`;\n\nexport const getStandardTooltip = (input) => {\n  const columnCount = input.rows.length && input.rows[0].length ? input.rows[0].length : 1;\n\n  let rows = '';\n  input.rows.forEach(r => {\n    let row = '';\n    r.forEach((c, i) => {\n      const alignment = i === 0\n        ? 'justify-content: flex-start; text-align: left;'\n        : 'justify-content: flex-end; text-align: right;';\n      const style = input.boldColumns && input.boldColumns.includes(i)\n        ? `style=\"font-weight: 600;${alignment}\"` : '';\n      row = row + `<div class=\"rapid-tooltip-cell\" ${style}>${c}</div>`;\n    });\n    rows = rows + row;\n  });\n\n  const additionalContent = input.additionalHTML ? `<div>${input.additionalHTML}</div>` : '';\n\n  return `\n    <div>\n      <div class=\"rapid-tooltip-title\" style=\"background-color: ${input.color};\">\n        ${input.title}\n      </div>\n      <div\n        class=\"rapid-tooltip-subsection-grid\"\n        style=\"display: grid; grid-template-columns: repeat(${columnCount}, auto);\"\n      >\n        ${rows}\n      </div>\n      ${additionalContent}\n    </div>\n    <div class=\"rapid-tooltip-arrow-container\">\n      <div class=\"rapid-tooltip-arrow\"></div>\n    </div>\n  `;\n};\n","import * as d3 from 'd3';\nimport {\n  getAspectRation,\n  drawPoint,\n  getBounds,\n  wrap,\n  intensityLegendClassName,\n  sectorLegendClassName,\n  ellipsisText,\n} from './Utils';\nimport {rgba, lighten} from 'polished';\nimport {getStandardTooltip} from './rapidTooltip';\n\nconst defaultShape = 'custom'; // convex || custom || points\nconst minExpectedScreenSize = 1020;\n\nconst minZoom = 0.75;\nconst maxZoom = 50;\nexport const innerRingRadius = 24;\nexport const outerRingRadius = 48;\n\nconst zoomScales = {\n  continent: {\n    fill: d3.scaleLinear()\n      .domain([1, 3])\n      .range([1, 0]),\n    stroke: d3.scaleLinear()\n      .domain([1, maxZoom])\n      .range([1, 1]),\n    label: d3.scaleLinear()\n      .domain([1, 1.85, 2.15])\n      .range([1, 1, 0]),\n  },\n  countries: {\n    fill: d3.scaleLinear()\n      .domain([1.5, 2, 3, 4, 7, 8])\n      .range([0, 0.5, 0.75, 0.3, 0.1, 0]),\n    stroke: d3.scaleLinear()\n      .domain([1.2, 2, 5, 12, maxZoom])\n      .range([0, 0.5, 1, 0.75, 0.2]),\n    label: d3.scaleLinear()\n      .domain([1.75, 2.25, 3.65, 4])\n      .range([0, 1, 1, 0]),\n  },\n  nodes: {\n    fill: d3.scaleLinear()\n      .domain([0, 2, 2.55, 3.5])\n      .range([0, 0.2, 0.75, 1]),\n    label: d3.scaleLinear()\n      .domain([8, 9])\n      .range([0, 1]),\n  },\n}\n\nexport default (rootEl, data, rootWidth, rootHeight, backButton, tooltipEl, legendEl) => {\n  let shape = defaultShape;\n\n  const urlParams = new URLSearchParams(window.location.search);\n  const shapeParam = urlParams.get('shape');\n  if (shapeParam) {\n    shape = shapeParam;\n  }\n\n  const {\n    width, height, outerWidth, outerHeight, margin,\n  } = getAspectRation({w: 4, h: 3}, {w: rootWidth, h: rootHeight}, 20);\n\n  const smallerSize = width < height ? width : height;\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n  let radius = 2.5;\n  radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n\n  const sectorLegend = legendEl.querySelector('.' + sectorLegendClassName);\n  const intensityLegend = legendEl.querySelector('.' + intensityLegendClassName);\n\n  const state = {\n    zoom: 1,\n    active: null,\n    hoveredShape: null,\n    hoveredNode: null,\n  };\n\n  const svg = d3.select(rootEl).append(\"svg\")\n    .attr(\"width\",  outerWidth)\n    .attr(\"height\", outerHeight);\n\n  const xScale = d3.scaleLinear()                // interpolator for X axis -- inner plot region\n    .domain(d3.extent(data.nodes, ({x}) => x))\n    .range([0, width]);\n\n  const yScale = d3.scaleLinear()                // interpolator for Y axis -- inner plot region\n    .domain(d3.extent(data.nodes, ({y}) => y))\n    .range([height, 0]);\n\n  const g = svg.append(\"g\");\n\n  const zoom = d3.zoom()\n    .scaleExtent([minZoom, maxZoom])\n    .on(\"zoom\", zoomed);\n\n  svg.call(zoom);\n\n  function zoomed() {\n    state.zoom = d3.event.transform.k;\n    g.attr(\"transform\", d3.event.transform);\n    updateChart();\n  }\n\n  function reset() {\n    if (state.active !== null) {\n      state.active.element.classed(\"active\", false);\n    }\n    state.active = null;\n    clearActiveLabels();\n    svg.transition()\n      .duration(300)\n      .call(zoom.transform, d3.zoomIdentity);\n    svg.call(zoom);\n    updateChart();\n  }\n\n  function softReset(d) {\n    if (state.active !== null) {\n      state.active.element.classed(\"active\", false);\n    }\n    state.active = null;\n    clearActiveLabels();\n\n    const {translate, scale} = getBounds(\n      [xScale(d.x) + margin.left],\n      [yScale(d.y) + margin.top],\n      width, height, outerWidth, outerHeight, 7\n    );\n\n    svg.call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n    svg.call(zoom);\n    d.wasActive = true;\n    updateChart();\n  }\n\n  backButton.removeEventListener('click', reset);\n  backButton.addEventListener('click', reset);\n\n  function setHoveredShape(datum) {\n    state.hoveredShape = datum;\n    updateChart();\n  }\n\n  function setHoveredNode(datum) {\n    state.hoveredNode = datum;\n    if (!state.active) {\n      updateChart();\n    }\n  }\n\n  function clearActiveLabels() {\n    g.selectAll('.industry-ring-label').remove();\n  }\n\n  const outerRing = g.append('circle')\n    .attr(\"class\", \"outer-ring\")\n\n  const innerRing = g.append('circle')\n    .attr(\"class\", \"inner-ring\")\n\n  const continents = g.selectAll(\".industry-continents\")\n    .data(data.clusters.continents)\n    .enter().append(\"polygon\")\n      .attr(\"class\", \"industry-continents\")\n      .attr(\"points\", d =>\n        d[shape].map(([xCoord, yCoord]) =>\n          [xScale(xCoord) + margin.left, yScale(yCoord) + margin.top].join(\",\")).join(\" \")\n      )\n      .attr(\"fill\", d => rgba(d.color, 1))\n      .attr(\"stroke\", d => rgba('#efefef', 1))\n      .style('opacity', 1)\n      .on(\"click\", d => zoomToShape(d, 3))\n      .on(\"mouseenter\", d => setHoveredShape(d))\n      .on(\"mouseleave\", () => setHoveredShape(null))\n\n  const countries = g.selectAll(\".industry-countries\")\n    .data(data.clusters.countries)\n    .enter().append(\"polygon\")\n      .attr(\"class\", \"industry-countries\")\n      .attr(\"points\", d =>\n        d[shape].map(([xCoord, yCoord]) =>\n          [xScale(xCoord) + margin.left, yScale(yCoord) + margin.top].join(\",\")).join(\" \")\n      )\n      .attr(\"fill\", d => rgba(d.color, 0))\n      .attr(\"stroke\", d => rgba('#efefef', 0))\n      .style('opacity', 1)\n      .on(\"click\", d => zoomToShape(d, 5))\n      .on(\"mouseenter\", d => setHoveredShape(d))\n      .on(\"mouseleave\", () => setHoveredShape(null))\n\n  const hoveredShape = g.append('polygon')\n    .attr('class', 'industry-cluster-hovered')\n    .style('display', 'none')\n\n  const nodeOpacity = zoomScales.nodes.fill(state.zoom)\n  const nodes = g.selectAll(\".industry-node\")\n    .data(data.nodes)\n    .enter().append(\"circle\")\n      .attr(\"class\", \"industry-node\")\n      .attr(\"cx\", d => xScale(d.x) + margin.left )\n      .attr(\"cy\", d => yScale(d.y) + margin.top )\n      .attr(\"r\", radius)\n      .attr('fill', d => '#fff')\n      .style('opacity', nodeOpacity)\n      .on(\"click\", zoomToPoint)\n      .on('mousemove', d => {\n        tooltipEl.innerHTML = getStandardTooltip({\n          title: d.label,\n          color: rgba(d.color, 0.3),\n          rows: [\n            ['NAICS', d.id],\n          ],\n        });\n        tooltipEl.style.display = 'block';\n        tooltipEl.style.top = d3.event.pageY + 'px';\n        tooltipEl.style.left = d3.event.pageX + 'px';\n      })\n      .on(\"mouseenter\", d => setHoveredNode(d))\n      .on(\"mouseleave\", () => {\n        tooltipEl.style.display = 'none';\n        setHoveredNode(null)\n      })\n\n  const hoveredNode = g.append('circle')\n    .attr('class', 'industry-node-hovered')\n    .style('display', 'none')\n\n  const continentLabels = g.selectAll(\".industry-continents-label\")\n    .data(data.clusters.continents)\n    .enter().append(\"text\")\n      .attr(\"class\", \"industry-continents-label\")\n      .attr('x', d => xScale(d.center[0]) + margin.left)\n      .attr('y', d => yScale(d.center[1]) + margin.top)\n      .style('font-size', radius * 8 + 'px')\n      .text(d => d.name);\n\n  const countryLabels = g.append(\"g\")\n    .attr(\"class\", \"industry-countries-label-group\")\n    .style('display', 'none')\n\n  countryLabels.selectAll(\".industry-countries-label\")\n    .data(data.clusters.countries)\n    .enter().append(\"text\")\n      .attr(\"class\", \"industry-countries-label\")\n      .attr('x', d => xScale(d.center[0]) + margin.left)\n      .attr('y', d => yScale(d.center[1]) + margin.top)\n      .style('font-size', radius * 4 + 'px')\n      .text(d => d.name);\n\n  const nodeLabels = g.append(\"g\")\n    .attr(\"class\", \"industry-nodes-label-group\")\n\n  nodeLabels.selectAll(\".industry-nodes-label\")\n    // .data(data.nodes)\n    // .enter().append(\"text\")\n    //   .attr(\"class\", \"industry-nodes-label\")\n    //   .attr('x', d => xScale(d.x) + margin.left)\n    //   .attr('y', d => yScale(d.y) + margin.top + (radius * 1.45))\n    //   .style('font-size', radius * 0.5 + 'px')\n    //   .text(d => d.label)\n    //   .call(wrap, radius * 8, radius * 7);\n\n  nodeLabels\n    .style('display', 'none')\n\n  function zoomToPoint(d) {\n    if (state.active !== null && state.active.element.node() === this) {\n      return softReset(d);\n    }\n    svg.on(\".zoom\", null);\n    clearActiveLabels();\n    if (state.active !== null) {\n      state.active.element.classed(\"active\", false);\n    }\n    state.active = {};\n    state.active.element = d3.select(this).classed(\"active\", true);\n    state.active.datum = d;\n\n    const centerX = d.adjustedCoords ? d.adjustedCoords.x : xScale(d.x) + margin.left;\n    const centerY = d.adjustedCoords ? d.adjustedCoords.y : yScale(d.y) + margin.top;\n    const allXValues = [centerX];\n    const allYValues = [centerY];\n    d.edges.forEach((_n, i) => {\n      const radiusCoords = drawPoint(outerRingRadius, i, d.edges.length, centerX, centerY);\n      allXValues.push(radiusCoords.x);\n      allYValues.push(radiusCoords.y);\n    });\n\n    const {translate, scale} = getBounds(allXValues, allYValues, width, height, outerWidth, outerHeight, 7);\n\n    svg.transition()\n      .duration(300)\n      .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n  }\n\n  function zoomToShape(d, maxZoom) {\n\n    const allXValues = [];\n    const allYValues = [];\n    d[shape].forEach(([xValue, yValue]) => {\n      allXValues.push(xScale(xValue) + margin.left)\n      allYValues.push(yScale(yValue) + margin.top)\n    });\n\n    const {translate, scale} = getBounds(allXValues, allYValues, outerWidth, outerHeight, outerWidth, outerHeight, maxZoom);\n\n    svg.transition()\n      .duration(300)\n      .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n  }\n\n  function updateChart() {\n    if (state.active) {\n      const edgeData = state.active.datum.edges.map(({trg}) => data.nodes.find(({id}) => id === trg));\n      const centerX = state.active.datum.adjustedCoords ?\n        state.active.datum.adjustedCoords.x : xScale(state.active.datum.x) + margin.left;\n      const centerY = state.active.datum.adjustedCoords ?\n        state.active.datum.adjustedCoords.y : yScale(state.active.datum.y) + margin.top;\n\n      outerRing\n        .attr(\"cx\", centerX)\n        .attr(\"cy\", centerY)\n        .style('opacity', 0)\n        .transition()\n        .duration(300)\n        .style('opacity', 1)\n      innerRing\n        .attr(\"cx\", centerX)\n        .attr(\"cy\", centerY)\n        .style('opacity', 0)\n        .transition()\n        .duration(300)\n        .style('opacity', 1)\n\n      nodes\n        .each(d => {\n          const i = edgeData.findIndex(e => e.id === d.id);\n          if (i !== -1) {\n            const innerCircleLength = edgeData.length < 7 ? edgeData.length : 7;\n            const adjustedCoords = drawPoint(\n              i < 7 ? innerRingRadius : outerRingRadius,\n              i < 7 ? i : i - 7,\n              i < 7 ? innerCircleLength : edgeData.length - 7,\n              centerX,\n              centerY,\n            );\n            d.adjustedCoords = adjustedCoords;\n          } else if (d.id !== state.active.datum.id) {\n            d.adjustedCoords = undefined;\n          }\n        })\n        .style('pointer-events', 'auto')\n        .style('opacity', 1)\n        .style('display', d => d.id === state.active.datum.id || edgeData.find(e => e.id === d.id) ? 'block' : 'none')\n        .attr('fill', d => d.color)\n        .transition()\n        .ease(d3.easeCircleInOut)\n        .duration(500)\n        .attr(\"cx\", d => d.adjustedCoords ? d.adjustedCoords.x : xScale(d.x) + margin.left)\n        .attr(\"cy\", d => d.adjustedCoords ? d.adjustedCoords.y : yScale(d.y) + margin.top)\n\n      g.selectAll(\".industry-ring-label\")\n        .data(data.nodes.filter(d => d.id === state.active.datum.id || edgeData.find(e => e.id === d.id)))\n        .each(d => {\n          const i = edgeData.findIndex(e => e.id === d.id);\n          if (i !== -1) {\n            const innerCircleLength = edgeData.length < 7 ? edgeData.length : 7;\n            const adjustedCoords = drawPoint(\n              i < 7 ? innerRingRadius : outerRingRadius,\n              i < 7 ? i : i - 7,\n              i < 7 ? innerCircleLength : edgeData.length - 7,\n              centerX,\n              centerY,\n            );\n            d.adjustedCoords = adjustedCoords;\n          }\n        })\n        .enter().append(\"text\")\n          .attr(\"class\", \"industry-ring-label\")\n          .attr('x', d => d.adjustedCoords ? d.adjustedCoords.x : xScale(d.x) + margin.left)\n          .attr('y', d => d.adjustedCoords ?\n            d.adjustedCoords.y + Math.max(radius * 2, 4)\n            : yScale(d.y) + margin.top + Math.max(radius * 2, 4)\n          )\n          .style('pointer-events', 'none')\n          .style('font-size', Math.max(radius * 0.8, 1.85) + 'px')\n          .text(d => ellipsisText(d.label, 60))\n          .call(wrap, Math.max(radius * 14, 20), radius * 9)\n          .style('opacity', 0)\n          .transition()\n          .delay(500)\n          .duration(300)\n          .style('opacity', 1)\n\n      continents\n        .style('pointer-events', 'none')\n        .style('opacity', 0)\n\n      countries\n        .style('pointer-events', 'none')\n        .style('opacity', 0)\n\n      hoveredShape\n        .style('display', 'none')\n\n      hoveredNode\n        .style('display', 'none')\n\n      continentLabels\n        .style('display', 'none')\n\n      countryLabels\n        .style('display', 'none')\n\n      nodeLabels\n        .style('display', 'none')\n\n      state.active.element\n        .style('display', 'block')\n\n      backButton.style.display = 'block';\n      sectorLegend.style.display = 'block';\n      intensityLegend.style.display = 'none';\n    } else {\n      const nodeOpacity = zoomScales.nodes.fill(state.zoom)\n      nodes\n        .each(d => d.adjustedCoords = undefined)\n        .style('display', 'block')\n        .style('pointer-events', zoomScales.nodes.fill(state.zoom) > 0.275 ? 'auto' : 'none')\n        .style('opacity', nodeOpacity)\n        .attr('fill', d => {\n          if (state.zoom < 3) {\n            return '#fff';\n          } else if (state.zoom < 3.25) {\n            return lighten(zoomScales.countries.fill(state.zoom) - 0.1, d.color);\n          } else if (state.zoom < 3.85) {\n            return lighten(zoomScales.countries.fill(state.zoom) - 0.3, d.color);\n          } else {\n            return d.color;\n          }\n        })\n        .transition()\n        .ease(d3.easeCircleInOut)\n        .duration(d => {\n          if (d.wasActive) {\n            d.wasActive = undefined;\n            return 0;\n          } else {\n            return 500;\n          }\n        })\n        .attr(\"cx\", d => xScale(d.x) + margin.left )\n        .attr(\"cy\", d => yScale(d.y) + margin.top )\n\n      continents\n        .style('pointer-events', zoomScales.continent.fill(state.zoom) > 0.1 ? 'auto' : 'none')\n        .attr(\"fill\", d => rgba(d.color, zoomScales.continent.fill(state.zoom)))\n        .attr(\"stroke\", d => rgba('#efefef', zoomScales.continent.stroke(state.zoom)))\n        .style('opacity', 1)\n\n      countries\n        .style('pointer-events', zoomScales.countries.fill(state.zoom) > 0.01 ? 'auto' : 'none')\n        .attr(\"fill\", d => rgba(d.color, zoomScales.countries.fill(state.zoom)))\n        .attr(\"stroke\", d => rgba('#efefef', zoomScales.countries.stroke(state.zoom)))\n        .style('opacity', 1)\n\n      continentLabels\n        .style('opacity', zoomScales.continent.label(state.zoom))\n        .style(\"display\", 'block')\n\n      countryLabels\n        .style('opacity', zoomScales.countries.label(state.zoom))\n        .style(\"display\", 'block')\n\n      if (state.zoom > 8) {\n        nodeLabels\n          .style('opacity', zoomScales.nodes.label(state.zoom))\n          .style(\"display\", 'block')\n      } else {\n        nodeLabels\n          .style(\"display\", 'none')\n      }\n\n      if (state.zoom > 2) {\n       backButton.style.display = 'block';\n      } else {\n       backButton.style.display = 'none';\n      }\n\n      if (state.zoom > 3.5) {\n        sectorLegend.style.display = 'block';\n        intensityLegend.style.display = 'none';\n      } else {\n        sectorLegend.style.display = 'none';\n        intensityLegend.style.display = 'block';\n      }\n\n      outerRing\n        .style('opacity', 0)\n      innerRing\n        .style('opacity', 0)\n\n      if (state.hoveredShape) {\n        hoveredShape\n          .attr(\"points\", state.hoveredShape[shape].map(([xCoord, yCoord]) =>\n            [xScale(xCoord) + margin.left, yScale(yCoord) + margin.top].join(\",\")).join(\" \") )\n          .attr(\"fill\", 'none')\n          .attr(\"stroke\", '#efefef')\n          .attr(\"stroke-width\", 3)\n          .style('display', 'block')\n      } else {\n        hoveredShape\n          .style('display', 'none')\n      }\n      if (state.hoveredNode) {\n        hoveredNode\n          .attr(\"cx\", xScale(state.hoveredNode.x) + margin.left )\n          .attr(\"cy\", yScale(state.hoveredNode.y) + margin.top )\n          .attr(\"fill\", state.hoveredNode.color)\n          .attr(\"r\", radius)\n          .attr(\"stroke\", state.zoom > 4 ? '#333' : '#efefef')\n          .attr(\"stroke-width\", radius < 2 ? 0.6 : 1)\n          .style('display', 'block')\n      } else {\n        hoveredNode\n          .style('display', 'none')\n      }\n    }\n  }\n\n  return {updateChart}\n\n}\n","import raw from 'raw.macro';\nimport hull from 'hull.js';\nconst turf = require('turf');\n\nconst {nodes} = JSON.parse(raw('../../data/umap-clusters-custom-2.json'));\nconst naicsData = JSON.parse(raw('../../data/naics_2017.json'));\nconst proximityNodes = JSON.parse(raw('../../data/proximity-min-max.json'));\nconst clusterMap = JSON.parse(raw('../../data/clusters-mapping-2.json'));\n\nconst customClusterShapes = JSON.parse(raw('../../data/custom_cluster_shapes.json'));\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst data = {};\n\nconst allXValues = [];\nconst allYValues = [];\nnodes.forEach(({x, y}) => {\n  allXValues.push(x);\n  allYValues.push(y);\n});\n\n// const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\ndata.nodes = nodes.map(n => {\n  // let radius = Math.random() * 6;\n  // radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n  const radius = 2.5;\n  const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n  if (!industry6Digit) {\n    throw new Error('undefined industry');\n  }\n  const naics_id = industry6Digit.naics_id;\n  const label = industry6Digit.name;\n  let topLevelParentId = naics_id.toString();\n  let current = naicsData.find(datum => datum.naics_id === naics_id);\n  while(current && current.parent_id !== null) {\n  // eslint-disable-next-line\n    current = naicsData.find(datum => datum.naics_id === current.parent_id);\n    if (current && current.parent_id !== null) {\n      topLevelParentId = current.parent_id.toString();\n    } else if (current && current.naics_id !== null) {\n      topLevelParentId = current.naics_id.toString();\n    }\n  }\n  if (parseInt(topLevelParentId, 10) > 8) {\n    console.error(current);\n    throw new Error('Parent out of range')\n  }\n  \n  const {color} = colorMap.find(({id}) => id === topLevelParentId);\n\n  const edges = proximityNodes[n.id] && proximityNodes[n.id].length ? proximityNodes[n.id] : [];\n\n  return {\n    ...n,\n    radius,\n    color,\n    parent: current,\n    label,\n    edges,\n    initial_x: n.x,\n    initial_y: n.y,\n  }\n})\n\nconst clusterColorMap = {\n  // '4': '#A973BE',\n  // '5': '#F1866C',\n  // '9': '#FFC135',\n  // '10': '#93CFD0',\n  // '12': '#488098',\n  // '13': '#77C898',\n  // '14': '#6A6AAD',\n  '4': '#004c6d',\n  '5': '#2d6484',\n  '9': '#4c7c9b',\n  '10': '#6996b3',\n  '12': '#86b0cc',\n  '13': '#a3cbe5',\n  '14': '#c1e7ff',\n}\n\ndata.clusters = {continents: [], countries: []};\n\nclusterMap.forEach(({C1, C3, naics}) => {\n  let indexC1 = data.clusters.continents.findIndex(c => c.id === C1);\n  if (indexC1 === -1) {\n    indexC1 = data.clusters.continents.length;\n    data.clusters.continents[indexC1] = {id: C1, points: [], color: clusterColorMap[C1]};\n  }\n  let indexC3 = data.clusters.countries.findIndex(c => c.id === C3);\n  if (indexC3 === -1) {\n    indexC3 = data.clusters.countries.length;\n    data.clusters.countries[indexC3] = {id: C3, points: [], color: clusterColorMap[C1]};\n  }\n  const industry = data.nodes.find(n => n.id === naics);\n  if (industry) {\n    data.clusters.continents[indexC1].points.push([industry.x, industry.y]);\n    data.clusters.countries[indexC3].points.push([industry.x, industry.y]);\n  }\n})\n\n\ndata.clusters.continents = data.clusters.continents.map(d => {\n  const custom = customClusterShapes.continents.find(c => c.id === d.id);\n  return {\n    ...d,\n    name: `Cluster ${d.id}`,\n    convex: custom.points,\n    custom: custom.points,\n    center: custom.center,\n  }\n})\n\ndata.clusters.countries = data.clusters.countries.map(d => {\n  // const custom = customClusterShapes.countries.find(c => c.id === d.id);\n  const center = turf.center(turf.featureCollection(d.points.map(point => turf.point(point))));\n  return {\n    ...d,\n    name: `Cluster ${d.id}`,\n    convex: hull(d.points, 200),\n    custom: [],\n    center: center.geometry.coordinates,\n  }\n})\n\ndata.customViewbox = customClusterShapes.dimension;\n\n\nexport default data;\n","import styled from 'styled-components';\nimport {\n  outerRingRadius,\n  innerRingRadius,\n} from './chart';\nimport {\n  sectorLegendClassName,\n} from './Utils';\n\nconst fontFamily = \"monospace\";\n\nexport const Root = styled.div`\n  position: relative;\n  font-family: ${fontFamily};\n`;\n\nexport const BackButton = styled.button`\n  position: absolute;\n  left: 0;\n  top: 0;\n  background-color: transparent;\n  border: none;\n  font-size: 1rem;\n  font-family: ${fontFamily};\n  cursor: pointer;\n  padding: 1rem;\n  display: none;\n`;\n\nexport const ChartContainer = styled.div`\n  svg {\n\n    /* Node hover and active styling */\n    .industry-node,\n    .industry-edge-node {\n      content-visibility: auto;\n\n      &:hover,\n      &.active {\n        cursor: pointer;\n        stroke: #333;\n        stroke-width: 0.5;\n      }\n    }\n\n    .industry-continents,\n    .industry-countries {\n      &:hover {\n        cursor: pointer;\n      }\n    }\n\n    /* Ring styling for when in ring mode */\n    circle.outer-ring {\n      fill: none;\n      stroke: #bfbfbf;\n      stroke-width: 0.5;\n      r: ${outerRingRadius}px;\n      opacity: 0;\n    }\n\n    circle.inner-ring {\n      r: ${innerRingRadius}px;\n      fill: none;\n      stroke: #bfbfbf;\n      stroke-width: 0.5;\n      opacity: 0;\n    }\n\n    /* Remove pointer events from multiple layers */\n    .industry-countries,\n    circle.outer-ring,\n    circle.inner-ring,\n    .industry-cluster-hovered,\n    .industry-node,\n    .industry-node-hovered,\n    .industry-nodes-label-group,\n    .industry-continents-label,\n    .industry-countries-label-group {\n      pointer-events: none;\n      will-change: transform, fill, opacity;\n    }\n\n    /* Label styling */\n    .industry-continents-label,\n    .industry-countries-label,\n    .industry-nodes-label,\n    .industry-ring-label {\n      fill: #444;\n      paint-order: stroke;\n      text-anchor: middle;\n      font-family: ${fontFamily};\n      will-change: transform, fill, opacity;\n    }\n\n    .industry-continents-label {\n      stroke: #efefef;\n      stroke-width: 2.5px;\n      font-weight: 600;\n      text-transform: uppercase;\n    }\n\n    .industry-countries-label {\n      stroke: #efefef;\n      stroke-width: 1px;\n      font-weight: 600;\n      text-transform: uppercase;\n    }\n\n    .industry-nodes-label {\n      stroke: #fff;\n      stroke-width: 0.1px;\n    }\n\n    .industry-ring-label {\n      stroke: #fff;\n      stroke-width: 0.6px;\n    }\n  }\n`;\n\nexport const LegendContainer = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  pointer-events: none;\n  z-index: 100;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-sizing:  border-box;\n  padding-left: 2rem;\n  padding-bottom: 2rem;\n\n  .${sectorLegendClassName} {\n    display: none;\n  }\n`;\n\nexport const LegendImage = styled.img`\n  width: 100%;\n  max-width: 800px;\n`;\n","import React, {useRef, useEffect, useState} from 'react';\nimport {usePrevious} from 'react-use';\nimport createChart from './chart';\nimport baseData from './data';\nimport {\n  Root,\n  BackButton,\n  ChartContainer,\n  LegendContainer,\n  LegendImage,\n} from './styling';\nimport {\n  RapidTooltipRoot\n} from './rapidTooltip';\nimport debounce from 'lodash/debounce';\nimport {\n  intensityLegendClassName,\n  sectorLegendClassName,\n} from './Utils';\n\nconst IndustrySpaceMap = () => {\n  const [chart, setChart] = useState(null);\n  const chartRef = useRef(null);\n  const backButtonRef = useRef(null);\n  const tooltipRef = useRef(null);\n  const legendRef = useRef(null);\n    const [dimensions, setWindowDimensions] = useState({\n      width: window.innerWidth,\n      height: window.innerHeight,\n    });\n\n  const prevDimensions = usePrevious(dimensions);\n\n  useEffect(() => {\n    const updateWindowDimensions = debounce(() => {\n      setWindowDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }, 250);\n    window.addEventListener('resize', updateWindowDimensions);\n    return () => {\n      window.removeEventListener('resize', updateWindowDimensions);\n    };\n  }, []);\n\n  useEffect(() => {\n    const chartNode = chartRef.current;\n    const backButtonNode = backButtonRef.current;\n    const tooltipNode = tooltipRef.current;\n    const legendNode = legendRef.current;\n\n    if (chartNode && backButtonNode && tooltipNode && legendNode && (chart === null ||\n        (prevDimensions && (dimensions.width !== prevDimensions.width || dimensions.height !== prevDimensions.height))\n    )) {\n      chartNode.innerHTML = '';\n      setChart(createChart(chartNode, baseData, dimensions.width, dimensions.height, backButtonNode, tooltipNode, legendNode));\n    }\n  }, [chart, chartRef, backButtonRef, tooltipRef, legendRef, dimensions, prevDimensions]);\n\n  return (\n    <Root>\n      <BackButton ref={backButtonRef}>{'< Back to Industry Space'}</BackButton>\n      <ChartContainer ref={chartRef} />\n      <LegendContainer ref={legendRef}>\n        <LegendImage\n          className={intensityLegendClassName}\n          src={require('../../intensity-legend.png')}\n        />\n        <LegendImage\n          className={sectorLegendClassName}\n          src={require('../../sector-legend.png')}\n        />\n      </LegendContainer>\n      <RapidTooltipRoot ref={tooltipRef} />\n    </Root>\n  );\n\n}\n\nexport default IndustrySpaceMap;\n","import React from 'react'\nimport IndustrySpaceMap from '../components/industrySpaceMap';\n\nexport default () => {\n  return (\n    <IndustrySpaceMap />\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/sector-legend.a4fd20af.png\";"],"sourceRoot":""}