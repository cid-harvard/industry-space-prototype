{"version":3,"sources":["components/CanvasIndustrySpaceCustomWithSimulation.js","pages/IndustrySpaceNetwork.js","components/CanvasIndustrySpaceCustomWithSimulationNoLines.js","pages/IndustrySpaceNetworkNoLines.js","components/CanvasIndustrySpaceUMap.js","pages/IndustrySpaceUMap.js","components/CanvasIndustrySpaceUMapWithLines.js","pages/IndustrySpaceUMapWithLines.js","components/CanvasIndustrySpaceUMapProximityEdges.js","pages/IndustrySpaceUMapEdgesAbs.js","components/CanvasIndustrySpaceUMapProximityEdgesThreshold.js","pages/IndustrySpaceUMapEdgesThreshold.js","components/Table.js","components/CanvasIndustrySpaceUMapProximityEdgesThresholdWithTable.js","pages/IndustrySpaceUMapEdgesThresholdWithTable.js","pages/Landing.js","App.js","index.js"],"names":["data","JSON","parse","naicsData","colorMap","id","color","rootNodeRef","useRef","useEffect","rootEl","current","root","d3","height","window","innerHeight","width","innerWidth","smallerSize","padding","widthMargin","heightMargin","rangeWidth","rangeHeight","allXValues","allYValues","nodes","forEach","x","y","push","radiusAdjuster","map","n","radius","Math","random","industry6Digit","find","code","toString","Error","naics_id","topLevelParentId","datum","parent_id","parseInt","console","error","xRange","yRange","xScale","domain","range","yScale","canvas","append","attr","node","context","getContext","simulation","force","strength","d","parseFloat","proximity","velocityDecay","k","alpha","tick","transform","tempData","zoom","scaleExtent","on","simulationUpdate","hoveredNode","undefined","highlightedNode","canvasEl","dragsubject","invertX","invertY","i","length","nodeX","nodeY","dx","dy","applyX","applyY","hoveredId","highlightedId","linkedEdges","edges","filter","source","target","save","clearRect","translate","scale","beginPath","moveTo","lineTo","strokeStyle","stroke","arc","PI","fillStyle","polished","fill","linkedNodeIds","includes","style","cursor","restore","call","event","allEdgeXValues","allEdgeYValues","xBounds","yBounds","bounds","max","min","transition","duration","links","initGraph","createForceGraph","innerHTML","ref","secondaryNodes","tertiaryNodes","nodesSortedByDistance","sortBy","node2","a","b","sqrt","slice","log","proximityNodes","trg","primaryNodes","quarternaryNodes","Root","styled","div","BackButton","button","Content","NodeList","NodeListItem","$color","rgba","TableTitle","Cell","Rank","strong","SectorCell","ProximityCell","Title","h1","Empty","Circle","Label","span","Table","props","hovered","updateSimulation","highlightedRef","containerRef","scrollTop","offsetTop","offsetHeight","selected","connected","title","label","replace","connectedNodes","parent","highlight","backgroundColor","onClick","triggerSimulationUpdate","key","borderLeft","name","clearSelections","border","Tooltip","useState","nodeList","setNodeList","setHovered","setUpdateSimulation","nodeCount","textAlign","textBaseline","font","fillText","coords","tooltip","top","left","App","href","exact","path","component","IndustrySpaceNetwork","IndustrySpaceNetworkNoLines","IndustrySpaceUMap","IndustrySpaceUMapWithLines","IndustrySpaceUMapEdgesAbs","IndustrySpaceUMapEdgesThreshold","IndustrySpaceUMapEdgesThresholdWithTable","Landing","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f6ced12.chunk.js","sourcesContent":["import React, {useEffect, useRef} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/industry-space-no-overlap.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    let radius = Math.random() * 6;\n    radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {...n, radius, color}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 10, rangeHeight / 10))\n                .force(\"charge\", d3.forceManyBody().strength(-6.5))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 5) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => parseFloat(d.proximity)).id(function(d) { return d.id; }))\n                .velocityDecay(0.8)\n  let k = 0;\n  while ((simulation.alpha() > 1e-2) && (k < 150)) {\n      simulation.tick();\n      k = k + 1;\n  }\n\n  let transform = d3.zoomIdentity;\n\n  initGraph(data)\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    let hoveredNode = undefined;\n    let highlightedNode = undefined;\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          const edges = tempData.edges.filter(({source, target}) => source.id === node.id || target.id === node.id)\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          edges.forEach(({source, target}) => {\n            allEdgeXValues.push(xScale(source.x));\n            allEdgeXValues.push(xScale(target.x));\n            allEdgeYValues.push(yScale(source.y));\n            allEdgeYValues.push(yScale(target.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      const hoveredId = hoveredNode && hoveredNode.id ? hoveredNode.id : undefined;\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n      const linkedEdges = tempData.edges.filter(({source, target}) =>\n          source.id === hoveredId || target.id === hoveredId ||\n          source.id === highlightedId || target.id === highlightedId)\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      tempData.edges.forEach(function(d) {\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        if (highlightedId) {\n          context.strokeStyle = '#f9f9f9';\n        } else {\n          context.strokeStyle = '#e6e6e6';\n        }\n        context.stroke();\n      });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedId === undefined ? d.color : polished.setLightness(0.91, d.color);\n        context.fill();\n      });\n\n      const linkedNodeIds = [];\n      linkedEdges.forEach(function(d) {\n        if (!linkedNodeIds.includes(({id}) => d.source.id)) {\n          linkedNodeIds.push(d.source);\n        }\n        if (!linkedNodeIds.includes(({id}) => d.target.id)) {\n          linkedNodeIds.push(d.target);\n        }\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        context.strokeStyle = '#afafaf';\n        context.stroke();\n      });\n\n      linkedNodeIds.forEach(function(d, i) {\n        if (d) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.color;\n          context.fill();\n          context.strokeStyle = '#afafaf';\n          context.stroke();\n        }\n      });\n\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n\n      context.restore();\n    }\n  }\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      createForceGraph(rootEl, data);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef]);\n\n  return (\n    <div>\n      <div ref={rootNodeRef} />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceCustomWithSimulation';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n    </div>\n  );\n}\n","import React, {useEffect, useRef} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/industry-space-no-overlap.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    let radius = Math.random() * 6;\n    radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {...n, radius, color}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 10, rangeHeight / 10))\n                .force(\"charge\", d3.forceManyBody().strength(-6.5))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 5) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => parseFloat(d.proximity)).id(function(d) { return d.id; }))\n                .velocityDecay(0.8)\n  let k = 0;\n  while ((simulation.alpha() > 1e-2) && (k < 150)) {\n      simulation.tick();\n      k = k + 1;\n  }\n\n  let transform = d3.zoomIdentity;\n\n  initGraph(data)\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    let hoveredNode = undefined;\n    let highlightedNode = undefined;\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          const edges = tempData.edges.filter(({source, target}) => source.id === node.id || target.id === node.id)\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          edges.forEach(({source, target}) => {\n            allEdgeXValues.push(xScale(source.x));\n            allEdgeXValues.push(xScale(target.x));\n            allEdgeYValues.push(yScale(source.y));\n            allEdgeYValues.push(yScale(target.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      const hoveredId = hoveredNode && hoveredNode.id ? hoveredNode.id : undefined;\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n      const linkedEdges = tempData.edges.filter(({source, target}) =>\n          source.id === hoveredId || target.id === hoveredId ||\n          source.id === highlightedId || target.id === highlightedId)\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // tempData.edges.forEach(function(d) {\n      //   context.beginPath();\n      //   context.moveTo(xScale(d.source.x), yScale(d.source.y));\n      //   context.lineTo(xScale(d.target.x), yScale(d.target.y));\n      //   if (highlightedId) {\n      //     context.strokeStyle = '#f9f9f9';\n      //   } else {\n      //     context.strokeStyle = '#e6e6e6';\n      //   }\n      //   context.stroke();\n      // });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedId === undefined ? d.color : polished.setLightness(0.98, d.color);\n        context.fill();\n      });\n\n      const linkedNodeIds = [];\n      linkedEdges.forEach(function(d) {\n        if (!linkedNodeIds.includes(({id}) => d.source.id)) {\n          linkedNodeIds.push(d.source);\n        }\n        if (!linkedNodeIds.includes(({id}) => d.target.id)) {\n          linkedNodeIds.push(d.target);\n        }\n        // context.beginPath();\n        // context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        // context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        // context.strokeStyle = '#afafaf';\n        // context.stroke();\n      });\n\n      linkedNodeIds.forEach(function(d, i) {\n        if (d) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.color;\n          context.fill();\n          context.strokeStyle = '#afafaf';\n          context.stroke();\n        }\n      });\n\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n\n      context.restore();\n    }\n  }\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      createForceGraph(rootEl, data);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef]);\n\n  return (\n    <div>\n      <div ref={rootNodeRef} />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceCustomWithSimulationNoLines';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n    </div>\n  );\n}\n","import React, {useEffect, useRef} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\nimport sortBy from 'lodash/sortBy';\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-custom-2.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    let radius = Math.random() * 6;\n    radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    // const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {...n, radius, color}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.8, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .velocityDecay(0.96)\n  let k = 0;\n  while ((simulation.alpha() > 1e-2) && (k < 150)) {\n      simulation.tick();\n      k = k + 1;\n  }\n\n  let transform = d3.zoomIdentity;\n\n  initGraph(data)\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    let hoveredNode = undefined;\n    let highlightedNode = undefined;\n    let secondaryNodes = [];\n    let tertiaryNodes = [];\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          const nodesSortedByDistance = sortBy(tempData.nodes, node2 => {\n            const a = node.x - node2.x;\n            const b = node.y - node2.y;\n            const c = Math.sqrt( a*a + b*b );\n            return c;\n          })\n          // nodes are adjusted by 1 to account for this node always being the closest\n          secondaryNodes = [...nodesSortedByDistance].slice(1,11);\n          tertiaryNodes = [...nodesSortedByDistance].slice(11,31);\n          // const edges = tempData.edges.filter(({source, target}) => source.id === node.id || target.id === node.id)\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          // edges.forEach(({source, target}) => {\n          //   allEdgeXValues.push(xScale(source.x));\n          //   allEdgeXValues.push(xScale(target.x));\n          //   allEdgeYValues.push(yScale(source.y));\n          //   allEdgeYValues.push(yScale(target.y));\n          // });\n          [...secondaryNodes, ...tertiaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.x));\n            allEdgeYValues.push(yScale(n.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      // const hoveredId = hoveredNode && hoveredNode.id ? hoveredNode.id : undefined;\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n      // const linkedEdges = tempData.edges.filter(({source, target}) =>\n      //     source.id === hoveredId || target.id === hoveredId ||\n      //     source.id === highlightedId || target.id === highlightedId)\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // tempData.edges.forEach(function(d) {\n      //   context.beginPath();\n      //   context.moveTo(xScale(d.source.x), yScale(d.source.y));\n      //   context.lineTo(xScale(d.target.x), yScale(d.target.y));\n      //   if (highlightedId) {\n      //     context.strokeStyle = '#f9f9f9';\n      //   } else {\n      //     context.strokeStyle = '#e6e6e6';\n      //   }\n      //   context.stroke();\n      // });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedId === undefined ? d.color : polished.rgba(d.color, 0.035);\n        context.fill();\n      });\n\n      // const linkedNodeIds = [];\n      // linkedEdges.forEach(function(d) {\n      //   if (!linkedNodeIds.includes(({id}) => d.source.id)) {\n      //     linkedNodeIds.push(d.source);\n      //   }\n      //   if (!linkedNodeIds.includes(({id}) => d.target.id)) {\n      //     linkedNodeIds.push(d.target);\n      //   }\n      //   // context.beginPath();\n      //   // context.moveTo(xScale(d.source.x), yScale(d.source.y));\n      //   // context.lineTo(xScale(d.target.x), yScale(d.target.y));\n      //   // context.strokeStyle = '#afafaf';\n      //   // context.stroke();\n      // });\n\n      // linkedNodeIds.forEach(function(d, i) {\n      //   if (d) {\n      //     context.beginPath();\n      //     context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n      //     context.fillStyle = d.color;\n      //     context.fill();\n      //     context.strokeStyle = '#afafaf';\n      //     context.stroke();\n      //   }\n      // });\n\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n      if (secondaryNodes && secondaryNodes.length) {\n        secondaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.8);\n          context.fill();\n        });\n      }\n      if (tertiaryNodes && tertiaryNodes.length) {\n        tertiaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.2);\n          context.fill();\n        });\n      }\n\n      context.restore();\n    }\n  }\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      createForceGraph(rootEl, data);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef]);\n\n  return (\n    <div>\n      <div ref={rootNodeRef} />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMap';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n    </div>\n  );\n}\n","import React, {useEffect, useRef} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-custom-2.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    let radius = Math.random() * 6;\n    radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    // const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {...n, radius, color}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.8, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .velocityDecay(0.96)\n  let k = 0;\n  while ((simulation.alpha() > 1e-2) && (k < 150)) {\n      simulation.tick();\n      k = k + 1;\n  }\n\n  let transform = d3.zoomIdentity;\n\n  initGraph(data)\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    let hoveredNode = undefined;\n    let highlightedNode = undefined;\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        console.log(data);\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          const edges = tempData.edges.filter(({source, target}) => source.id === node.id || target.id === node.id)\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          edges.forEach(({source, target}) => {\n            allEdgeXValues.push(xScale(source.x));\n            allEdgeXValues.push(xScale(target.x));\n            allEdgeYValues.push(yScale(source.y));\n            allEdgeYValues.push(yScale(target.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      const hoveredId = hoveredNode && hoveredNode.id ? hoveredNode.id : undefined;\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n      const linkedEdges = tempData.edges.filter(({source, target}) =>\n          source.id === hoveredId || target.id === hoveredId ||\n          source.id === highlightedId || target.id === highlightedId)\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      tempData.edges.forEach(function(d) {\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        if (highlightedId) {\n          context.strokeStyle = '#f9f9f9';\n        } else {\n          context.strokeStyle = '#e6e6e6';\n        }\n        context.stroke();\n      });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedId === undefined ? d.color : polished.setLightness(0.98, d.color);\n        context.fill();\n      });\n\n      const linkedNodeIds = [];\n      linkedEdges.forEach(function(d) {\n        if (!linkedNodeIds.includes(({id}) => d.source.id)) {\n          linkedNodeIds.push(d.source);\n        }\n        if (!linkedNodeIds.includes(({id}) => d.target.id)) {\n          linkedNodeIds.push(d.target);\n        }\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        context.strokeStyle = '#afafaf';\n        context.stroke();\n      });\n\n      linkedNodeIds.forEach(function(d, i) {\n        if (d) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.color;\n          context.fill();\n          context.strokeStyle = '#afafaf';\n          context.stroke();\n        }\n      });\n\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n\n      context.restore();\n    }\n  }\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      createForceGraph(rootEl, data);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef]);\n\n  return (\n    <div>\n      <div ref={rootNodeRef} />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapWithLines';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n    </div>\n  );\n}\n","import React, {useEffect, useRef} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-custom-2.json'));\nconst proximityNodes = JSON.parse(raw('../data/proximity.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconsole.log(proximityNodes);\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    let radius = Math.random() * 6;\n    radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    // const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {...n, radius, color}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.8, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .velocityDecay(0.96)\n  let k = 0;\n  while ((simulation.alpha() > 1e-2) && (k < 150)) {\n      simulation.tick();\n      k = k + 1;\n  }\n\n  let transform = d3.zoomIdentity;\n\n  initGraph(data)\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    let hoveredNode = undefined;\n    let highlightedNode = undefined;\n    let secondaryNodes = [];\n    let tertiaryNodes = [];\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          // nodes are adjusted by 1 to account for this node always being the closest\n          secondaryNodes = [];\n          proximityNodes[node.id].forEach(({trg, proximity}) => {\n            const node2 = tempData.nodes.find(n => n.id === trg);\n            if (node2) {\n              secondaryNodes.push({...node2, proximity});\n            }\n          });\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [...secondaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.x));\n            allEdgeYValues.push(yScale(n.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      // const hoveredId = hoveredNode && hoveredNode.id ? hoveredNode.id : undefined;\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n      // const linkedEdges = tempData.edges.filter(({source, target}) =>\n      //     source.id === hoveredId || target.id === hoveredId ||\n      //     source.id === highlightedId || target.id === highlightedId)\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // tempData.edges.forEach(function(d) {\n      //   context.beginPath();\n      //   context.moveTo(xScale(d.source.x), yScale(d.source.y));\n      //   context.lineTo(xScale(d.target.x), yScale(d.target.y));\n      //   if (highlightedId) {\n      //     context.strokeStyle = '#f9f9f9';\n      //   } else {\n      //     context.strokeStyle = '#e6e6e6';\n      //   }\n      //   context.stroke();\n      // });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedId === undefined ? d.color : polished.rgba(d.color, 0.035);\n        context.fill();\n      });\n\n      // const linkedNodeIds = [];\n      // linkedEdges.forEach(function(d) {\n      //   if (!linkedNodeIds.includes(({id}) => d.source.id)) {\n      //     linkedNodeIds.push(d.source);\n      //   }\n      //   if (!linkedNodeIds.includes(({id}) => d.target.id)) {\n      //     linkedNodeIds.push(d.target);\n      //   }\n      //   // context.beginPath();\n      //   // context.moveTo(xScale(d.source.x), yScale(d.source.y));\n      //   // context.lineTo(xScale(d.target.x), yScale(d.target.y));\n      //   // context.strokeStyle = '#afafaf';\n      //   // context.stroke();\n      // });\n\n      // linkedNodeIds.forEach(function(d, i) {\n      //   if (d) {\n      //     context.beginPath();\n      //     context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n      //     context.fillStyle = d.color;\n      //     context.fill();\n      //     context.strokeStyle = '#afafaf';\n      //     context.stroke();\n      //   }\n      // });\n\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n      if (secondaryNodes && secondaryNodes.length) {\n        secondaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          // console.log(d.proximity);\n          // context.fillStyle = polished.rgba(d.color, 0.8);\n          context.fillStyle = polished.rgba(d.color, d.proximity * 100);\n          context.fill();\n        });\n      }\n      if (tertiaryNodes && tertiaryNodes.length) {\n        tertiaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.2);\n          context.fill();\n        });\n      }\n\n      context.restore();\n    }\n  }\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      createForceGraph(rootEl, data);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef]);\n\n  return (\n    <div>\n      <div ref={rootNodeRef} />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapProximityEdges';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n    </div>\n  );\n}\n","import React, {useEffect, useRef} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-custom-2.json'));\nconst proximityNodes = JSON.parse(raw('../data/proximity.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconsole.log(proximityNodes);\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    let radius = Math.random() * 6;\n    radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    // const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {...n, radius, color}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.8, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .velocityDecay(0.96)\n  let k = 0;\n  while ((simulation.alpha() > 1e-2) && (k < 150)) {\n      simulation.tick();\n      k = k + 1;\n  }\n\n  let transform = d3.zoomIdentity;\n\n  initGraph(data)\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    let hoveredNode = undefined;\n    let highlightedNode = undefined;\n    let primaryNodes = [];\n    let secondaryNodes = [];\n    let tertiaryNodes = [];\n    let quarternaryNodes = [];\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          // nodes are adjusted by 1 to account for this node always being the closest\n          primaryNodes = [];\n          secondaryNodes = [];\n          tertiaryNodes = [];\n          quarternaryNodes = [];\n          proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n            const node2 = tempData.nodes.find(n => n.id === trg);\n            if (node2) {\n              if (i < 8) {\n                primaryNodes.push({...node2, proximity});\n              } else if (i < 24) {\n                secondaryNodes.push({...node2, proximity});\n              } else if (i < 48) {\n                tertiaryNodes.push({...node2, proximity});\n              } else {\n                quarternaryNodes.push({...node2, proximity});\n              }\n            }\n          });\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [node, ...primaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.x));\n            allEdgeYValues.push(yScale(n.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      // const hoveredId = hoveredNode && hoveredNode.id ? hoveredNode.id : undefined;\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n      // const linkedEdges = tempData.edges.filter(({source, target}) =>\n      //     source.id === hoveredId || target.id === hoveredId ||\n      //     source.id === highlightedId || target.id === highlightedId)\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // tempData.edges.forEach(function(d) {\n      //   context.beginPath();\n      //   context.moveTo(xScale(d.source.x), yScale(d.source.y));\n      //   context.lineTo(xScale(d.target.x), yScale(d.target.y));\n      //   if (highlightedId) {\n      //     context.strokeStyle = '#f9f9f9';\n      //   } else {\n      //     context.strokeStyle = '#e6e6e6';\n      //   }\n      //   context.stroke();\n      // });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedId === undefined ? d.color : polished.rgba(d.color, 0.035);\n        context.fill();\n      });\n\n      // const linkedNodeIds = [];\n      // linkedEdges.forEach(function(d) {\n      //   if (!linkedNodeIds.includes(({id}) => d.source.id)) {\n      //     linkedNodeIds.push(d.source);\n      //   }\n      //   if (!linkedNodeIds.includes(({id}) => d.target.id)) {\n      //     linkedNodeIds.push(d.target);\n      //   }\n      //   // context.beginPath();\n      //   // context.moveTo(xScale(d.source.x), yScale(d.source.y));\n      //   // context.lineTo(xScale(d.target.x), yScale(d.target.y));\n      //   // context.strokeStyle = '#afafaf';\n      //   // context.stroke();\n      // });\n\n      // linkedNodeIds.forEach(function(d, i) {\n      //   if (d) {\n      //     context.beginPath();\n      //     context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n      //     context.fillStyle = d.color;\n      //     context.fill();\n      //     context.strokeStyle = '#afafaf';\n      //     context.stroke();\n      //   }\n      // });\n\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n      if (primaryNodes && primaryNodes.length) {\n        primaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.8);\n          context.fillStyle = polished.rgba(d.color, d.proximity * 100);\n          context.fill();\n        });\n      }\n      if (secondaryNodes && secondaryNodes.length) {\n        secondaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.5);\n          context.fillStyle = polished.rgba(d.color, d.proximity * 100);\n          context.fill();\n        });\n      }\n      if (tertiaryNodes && tertiaryNodes.length) {\n        tertiaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.3);\n          context.fill();\n        });\n      }\n      if (quarternaryNodes && quarternaryNodes.length) {\n        quarternaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.085);\n          context.fill();\n        });\n      }\n\n      context.restore();\n    }\n  }\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      createForceGraph(rootEl, data);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef]);\n\n  return (\n    <div>\n      <div ref={rootNodeRef} />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapProximityEdgesThreshold';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n    </div>\n  );\n}\n","import React, {useRef, useEffect} from 'react';\nimport styled from 'styled-components';\nimport {rgba} from 'polished';\n\nconst Root = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  width: 450px;\n  padding: 1rem;\n  font-family: 'OfficeCodeProWeb', monospace;\n`;\n\nconst BackButton = styled.button`\n  position: fixed;\n  left: 0;\n  top: 0;\n  background-color: transparent;\n  border: none;\n  font-size: 1rem;\n  font-family: 'OfficeCodeProWeb', monospace;\n  cursor: pointer;\n  padding: 1rem;\n`;\n\nconst Content = styled.div`\n  padding: 1rem;\n  box-sizing: border-box;\n  box-shadow: 1px 2px 5px 0px rgba(0,0,0,0.45);\n  display: grid;\n  grid-template-rows: auto 1fr;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.55);\n`;\n\nconst NodeList = styled.div`\n  margin-top: 1rem;\n  overflow: auto;\n  position: relative;\n`;\n\nconst NodeListItem = styled.div`\n  display: grid;\n  grid-template-columns: 180px 1fr 1fr;\n  font-size: 0.8rem;\n\n  &:hover {\n    ${({$color}) => $color ? 'background-color:' + rgba($color, 0.4) + ';' : ''}\n    cursor: pointer;\n  }\n`;\n\nconst TableTitle = styled(NodeListItem)`\n  border-bottom: solid 1px black;\n  position: sticky;\n  top: 0;\n  background-color: #fff;\n`;\n\nconst Cell = styled.div`\n  padding: 0.5rem;\n  display: flex;\n  align-items: center;\n`;\nconst Rank = styled.strong`\n  margin-right: 0.7rem;\n`;\n\nconst SectorCell = styled(Cell)`\n  border-left: solid 1px #000;\n`;\nconst ProximityCell = styled(Cell)`\n  justify-content: flex-end;\n`;\n\nconst Title = styled.h1`\n  font-size: 1rem;\n  font-weight: 400;\n  margin: 0;\n  display: flex;\n  align-items: center;\n`;\n\nconst Empty = styled(Title)`\n  height: 100%;\n  width: 100%;\n  background-color: rgba(0,0,0,0.04);\n  text-align: center;\n  grid-row: 1 / -1;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Circle = styled.div`\n  border: solid 3px black;\n  border-radius: 400px;\n  width: 0.75rem;\n  height: 0.7rem;\n  margin-right: 0.5rem;\n  flex-shrink: 0;\n`;\n\nconst Label = styled.span`\n  text-transform: uppercase;\n`;\n\nconst Table = (props) => {\n  const {nodes, hovered, updateSimulation} = props;\n  const highlightedRef = useRef(null);\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    if (highlightedRef && highlightedRef.current && containerRef && containerRef.current && hovered !== undefined) {\n      const highlightedNode = highlightedRef.current;\n      const containerNode = containerRef.current;\n      containerNode.scrollTop = highlightedNode.offsetTop - highlightedNode.offsetHeight;\n    }\n  }, [highlightedRef, containerRef, hovered])\n\n  if (nodes) {\n    const {selected, connected} = nodes;\n    const title = selected.label.replace(selected.id, '');\n    const connectedNodes = connected.map((node, i) => {\n      const {id, label, proximity, color, parent} = node;\n      const highlight = hovered && hovered.node && hovered.node.id === id;\n      const onClick = () => updateSimulation ? updateSimulation.triggerSimulationUpdate(node) : null;\n      return (\n        <NodeListItem\n          $color={color}\n          style={{backgroundColor: highlight ? rgba(color, 0.4) : undefined}}\n          ref={highlight ? highlightedRef : undefined}\n          onClick={onClick}\n          key={id}\n        >\n          <Cell\n            style={{borderLeft: `5px solid ${color}`}}\n          >\n            <Rank>{i + 1}</Rank>\n            <div>{label.replace(id, '')}</div>\n          </Cell>\n          <SectorCell>{parent.name}</SectorCell>\n          <ProximityCell>{proximity}</ProximityCell>\n        </NodeListItem>\n      );\n    })\n    const onClear = () => updateSimulation ? updateSimulation.clearSelections() : null;\n    return (\n      <Root>\n        <BackButton onClick={onClear}>{'< Back to Industry Space'}</BackButton>\n        <Content>\n        <Title>\n            <Circle style={{backgroundColor: selected.color}} />\n            <div><Label>Selected industry:</Label> {title}</div>\n          </Title>\n          <NodeList ref={containerRef}>\n            <TableTitle>\n              <Cell>Industry Name</Cell>\n              <SectorCell style={{border: 'none'}}>Sector</SectorCell>\n              <ProximityCell>Proximity</ProximityCell>\n            </TableTitle>\n            {connectedNodes}\n          </NodeList>\n        </Content>\n      </Root>\n    );\n  } else {\n    return (\n      <Root>\n        <Content>\n          <Empty>Click a node for more details</Empty>\n        </Content>\n      </Root>\n    );\n  }\n}\n\nexport default Table;\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\nimport Table from './Table';\nimport styled from 'styled-components';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-custom-2.json'));\nconst proximityNodes = JSON.parse(raw('../data/proximity-15.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth - 450;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    let radius = Math.random() * 6;\n    radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    // const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {...n, radius, color, parent: current}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.3, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .velocityDecay(0.96)\n  let k = 0;\n  while ((simulation.alpha() > 1e-2) && (k < 150)) {\n      simulation.tick();\n      k = k + 1;\n  }\n\n  let transform = d3.zoomIdentity;\n\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n  let secondaryNodes = [];\n  let tertiaryNodes = [];\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();        \n        setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          primaryNodes = [];\n          secondaryNodes = [];\n          tertiaryNodes = [];\n          proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n            const node2 = tempData.nodes.find(n => n.id === trg);\n            if (node2) {\n              if (i < 5) {\n                primaryNodes.push({...node2, proximity});\n              } else if (i < 10) {\n                secondaryNodes.push({...node2, proximity});\n              } else {\n                tertiaryNodes.push({...node2, proximity});\n              }\n            }\n          });\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [node, ...primaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.x));\n            allEdgeYValues.push(yScale(n.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes, ...secondaryNodes, ...tertiaryNodes],\n          })\n        } else {\n          primaryNodes = [];\n          secondaryNodes = [];\n          tertiaryNodes = [];\n          setNodeList(undefined);\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedId === undefined ? d.color : polished.rgba(d.color, 0.035);\n        context.fill();\n      });\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n      let nodeCount = 1;\n      if (primaryNodes && primaryNodes.length) {\n        primaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.8);\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${d.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(nodeCount++, xScale(d.x), yScale(d.y));\n        });\n      }\n      if (secondaryNodes && secondaryNodes.length) {\n        secondaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.5);\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${d.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(nodeCount++, xScale(d.x), yScale(d.y));\n        });\n      }\n      if (tertiaryNodes && tertiaryNodes.length) {\n        tertiaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.3);\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${d.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(nodeCount++, xScale(d.x), yScale(d.y));\n        });\n      }\n\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        secondaryNodes = [];\n        tertiaryNodes = [];\n        proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n          const node2 = tempData.nodes.find(n => n.id === trg);\n          if (node2) {\n            if (i < 5) {\n              primaryNodes.push({...node2, proximity});\n            } else if (i < 10) {\n              secondaryNodes.push({...node2, proximity});\n            } else {\n              tertiaryNodes.push({...node2, proximity});\n            }\n          }\n        });\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [node, ...primaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.x));\n          allEdgeYValues.push(yScale(n.y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes, ...secondaryNodes, ...tertiaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      secondaryNodes = [];\n      tertiaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n\n  return update;\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [nodeList, setNodeList] = useState(undefined);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null\n\n  return (\n    <div>\n      {tooltip}\n      <div ref={rootNodeRef} />\n      <Table nodes={nodeList} hovered={hovered} updateSimulation={updateSimulation} />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapProximityEdgesThresholdWithTable';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n    </div>\n  );\n}\n","import React from 'react'\n\nconst App = () => {\n\n  return (\n    <ul>\n      <li><a href={'#/original'}>Industry Space as <strong>Network</strong></a></li>\n      <li><a href={'#/no-edges'}>Industry Space as <strong>Network w/o Edges</strong></a></li>\n      <li><a href={'#/u-map'}>Industry Space as <strong>UMap</strong></a></li>\n      <li><a href={'#/u-map-lines'}>Industry Space as <strong>UMap w/ Edges</strong></a></li>\n      <li><a href={'#/u-map-edges-abs'}>Industry Space as <strong>UMap w/ Edges, Highlighted Based on <em>Value</em></strong></a></li>\n      <li><a href={'#/u-map-edges-threshold'}>Industry Space as <strong>UMap w/ Edges, Highlighted based on <em>Threshold</em></strong></a></li>\n      <li><a href={'#/u-map-edges-threshold-table'}>Industry Space as <strong>UMap w/ Edges, Highlighted based on <em>Threshold</em> w/ Table</strong></a></li>\n    </ul>\n  );\n}\n\nexport default App\n","import React from 'react'\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport IndustrySpaceNetwork from './pages/IndustrySpaceNetwork';\nimport IndustrySpaceNetworkNoLines from './pages/IndustrySpaceNetworkNoLines';\nimport IndustrySpaceUMap from './pages/IndustrySpaceUMap';\nimport IndustrySpaceUMapWithLines from './pages/IndustrySpaceUMapWithLines';\nimport IndustrySpaceUMapEdgesAbs from './pages/IndustrySpaceUMapEdgesAbs';\nimport IndustrySpaceUMapEdgesThreshold from './pages/IndustrySpaceUMapEdgesThreshold';\nimport IndustrySpaceUMapEdgesThresholdWithTable from './pages/IndustrySpaceUMapEdgesThresholdWithTable';\nimport Landing from './pages/Landing';\nimport './fonts/fonts.css';\n\nconst App = () => {\n\n  return (\n    <div>\n      <Router>\n          <Switch>\n            <Route exact path={'/original'} component={IndustrySpaceNetwork} />\n            <Route exact path={'/no-edges'} component={IndustrySpaceNetworkNoLines} />\n            <Route exact path={'/u-map'} component={IndustrySpaceUMap} />\n            <Route exact path={'/u-map-lines'} component={IndustrySpaceUMapWithLines} />\n            <Route exact path={'/u-map-edges-abs'} component={IndustrySpaceUMapEdgesAbs} />\n            <Route exact path={'/u-map-edges-threshold'} component={IndustrySpaceUMapEdgesThreshold} />\n            <Route exact path={'/u-map-edges-threshold-table'} component={IndustrySpaceUMapEdgesThresholdWithTable} />\n            <Route component={Landing} />\n          </Switch>\n        </Router>\n    </div>\n  );\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}