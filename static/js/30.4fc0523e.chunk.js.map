{"version":3,"sources":["components/CanvasIndustrySpaceNetworkWithTable.js","pages/IndustrySpaceNetworkWithTable.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","sector-legend.png","components/BasicLegend.js","components/Table.js"],"names":["Tooltip","styled","div","data","JSON","parse","naicsData","colorMap","id","color","rootNodeRef","useRef","useState","undefined","nodeList","setNodeList","hovered","setHovered","updateSimulation","setUpdateSimulation","useEffect","rootEl","current","triggerSimulationUpdate","root","d3","height","window","innerHeight","width","innerWidth","smallerSize","padding","widthMargin","heightMargin","rangeWidth","rangeHeight","allXValues","allYValues","nodes","forEach","x","y","push","radiusAdjuster","map","n","radius","Math","random","industry6Digit","find","code","toString","Error","naics_id","topLevelParentId","datum","parent_id","parseInt","console","error","parent","label","name","xRange","yRange","xScale","domain","range","yScale","canvas","append","attr","node","context","getContext","simulation","force","strength","d","parseFloat","proximity","velocityDecay","k","alpha","tick","transform","tempData","zoom","scaleExtent","on","simulationUpdate","hoveredNode","highlightedNode","connectedNodes","canvasEl","dragsubject","invertX","invertY","i","length","nodeX","nodeY","dx","dy","applyX","applyY","hoveredId","highlightedId","linkedEdges","edges","filter","source","target","save","clearRect","translate","scale","beginPath","moveTo","lineTo","strokeStyle","stroke","arc","PI","fillStyle","polished","fill","linkedNodeIds","includes","style","cursor","nodeCount","textAlign","textBaseline","font","fillText","restore","call","coords","event","allEdgeXValues","allEdgeYValues","toFixed","xBounds","yBounds","bounds","max","min","transition","duration","sortBy","reverse","selected","connected","links","clearSelections","initGraph","createForceGraph","innerHTML","tooltip","top","left","replace","ref","Table","tableLayout","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","_slicedToArray","arr","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","err","unsupportedIterableToArray","TypeError","module","exports","Root","Legend","img","paddingRight","src","require","BackButton","button","Content","NodeList","NodeListItem","$color","rgba","TableTitle","Cell","Rank","strong","SectorCell","ProximityCell","Title","h1","Empty","Circle","Label","span","props","highlightedRef","containerRef","scrollTop","offsetTop","offsetHeight","title","highlight","backgroundColor","onClick","key","borderLeft","border"],"mappings":"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","file":"static/js/30.4fc0523e.chunk.js","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\nimport Table from './Table';\nimport styled from 'styled-components';\nimport sortBy from 'lodash/sortBy';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nconst minExpectedScreenSize = 1020;\n\nconst data = JSON.parse(raw('../data/industry-space-no-overlap.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth - 450;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    let radius = Math.random() * 6;\n    radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n    }\n    const naics_id = industry6Digit.naics_id;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {...n, radius, color, parent: current, label: industry6Digit.name}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 10, rangeHeight / 10))\n                .force(\"charge\", d3.forceManyBody().strength(-6.5))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 5) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => parseFloat(d.proximity)).id(function(d) { return d.id; }))\n                .velocityDecay(0.8)\n  let k = 0;\n  while ((simulation.alpha() > 1e-2) && (k < 150)) {\n      simulation.tick();\n      k = k + 1;\n  }\n\n  let transform = d3.zoomIdentity;\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    let hoveredNode = undefined;\n    let highlightedNode = undefined;\n    let connectedNodes = [];\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();\n        setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          const edges = tempData.edges.filter(({source, target}) => source.id === node.id || target.id === node.id)\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          connectedNodes = [];\n          edges.forEach(({source, target, proximity}) => {\n            allEdgeXValues.push(xScale(source.x));\n            allEdgeXValues.push(xScale(target.x));\n            allEdgeYValues.push(yScale(source.y));\n            allEdgeYValues.push(yScale(target.y));\n            if (source.id !== node.id && !connectedNodes.find(n => n.id === source.id)) {\n              connectedNodes.push({...source, proximity: proximity.toFixed(5)});\n            }\n            if (target.id !== node.id && !connectedNodes.find(n => n.id === target.id)) {\n              connectedNodes.push({...target, proximity: proximity.toFixed(5)});\n            }\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n          connectedNodes = sortBy(connectedNodes, 'proximity').reverse()\n          setNodeList({\n            selected: node,\n            connected: connectedNodes,\n          })\n\n        } else {\n          connectedNodes = [];\n          setNodeList(undefined);\n        }\n        simulationUpdate();\n      })\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      const hoveredId = hoveredNode && hoveredNode.id ? hoveredNode.id : undefined;\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n      const linkedEdges = tempData.edges.filter(({source, target}) =>\n          source.id === hoveredId || target.id === hoveredId ||\n          source.id === highlightedId || target.id === highlightedId)\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      tempData.edges.forEach(function(d) {\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        if (highlightedId) {\n          context.strokeStyle = '#f9f9f9';\n        } else {\n          context.strokeStyle = '#e6e6e6';\n        }\n        context.stroke();\n      });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedId === undefined ? d.color : polished.setLightness(0.97, d.color);\n        context.fill();\n      });\n\n      const linkedNodeIds = [];\n      linkedEdges.forEach(function(d) {\n        if (!linkedNodeIds.includes(({id}) => d.source.id)) {\n          linkedNodeIds.push(d.source);\n        }\n        if (!linkedNodeIds.includes(({id}) => d.target.id)) {\n          linkedNodeIds.push(d.target);\n        }\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        context.strokeStyle = '#afafaf';\n        context.stroke();\n      });\n\n      linkedNodeIds.forEach(function(d, i) {\n        if (d) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.color;\n          context.fill();\n          context.strokeStyle = '#afafaf';\n          context.stroke();\n        }\n      });\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n\n      let nodeCount = 1;\n      connectedNodes.forEach(function(d, i) {\n        if (d) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.color;\n          context.fill();\n          context.strokeStyle = hoveredNode && hoveredNode.id === d.id ? 'black' : '#afafaf';\n          context.stroke();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${d.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(nodeCount++, xScale(d.x), yScale(d.y));\n        }\n      });\n\n      context.restore();\n    }\n    const triggerSimulationUpdate = (node) => {\n      highlightedNode = node;\n      if (node) {\n        const edges = tempData.edges.filter(({source, target}) => source.id === node.id || target.id === node.id)\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        connectedNodes = [];\n        edges.forEach(({source, target, proximity}) => {\n          allEdgeXValues.push(xScale(source.x));\n          allEdgeXValues.push(xScale(target.x));\n          allEdgeYValues.push(yScale(source.y));\n          allEdgeYValues.push(yScale(target.y));\n          if (source.id !== node.id && !connectedNodes.find(n => n.id === source.id)) {\n            connectedNodes.push({...source, proximity: proximity.toFixed(5)});\n          }\n          if (target.id !== node.id && !connectedNodes.find(n => n.id === target.id)) {\n            connectedNodes.push({...target, proximity: proximity.toFixed(5)});\n          }\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n        connectedNodes = sortBy(connectedNodes, 'proximity').reverse()\n        setNodeList({\n          selected: node,\n          connected: connectedNodes,\n        })\n\n      } else {\n        connectedNodes = [];\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      connectedNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  return update;\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [nodeList, setNodeList] = useState(undefined);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null\n\n  return (\n    <div>\n      {tooltip}\n      <div ref={rootNodeRef} />\n      <Table nodes={nodeList} hovered={hovered} updateSimulation={updateSimulation} />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceNetworkWithTable';\nimport Legend from '../components/BasicLegend';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n      <Legend tableLayout={true} />\n    </div>\n  );\n}\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","module.exports = __webpack_public_path__ + \"static/media/sector-legend.a4fd20af.png\";","import React from 'react';\nimport styled from 'styled-components/macro';\n\nconst Root = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  pointer-events: none;\n  z-index: 100;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-sizing:  border-box;\n  padding-left: 2rem;\n  padding-bottom: 2rem;\n`;\n\nconst Legend = styled.img`\n  width: 100%;\n  max-width: 800px;\n`;\n\nexport default ({tableLayout}) => {\n  return (\n    <Root\n      style={{paddingRight: tableLayout ? 550 : undefined}}\n    >\n      <Legend src={require('../sector-legend.png')} />\n    </Root>\n  );\n}\n","import React, {useRef, useEffect} from 'react';\nimport styled from 'styled-components';\nimport {rgba} from 'polished';\n\nconst Root = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  width: 450px;\n  padding: 1rem;\n  font-family: 'OfficeCodeProWeb', monospace;\n`;\n\nconst BackButton = styled.button`\n  position: fixed;\n  left: 0;\n  top: 0;\n  background-color: transparent;\n  border: none;\n  font-size: 1rem;\n  font-family: 'OfficeCodeProWeb', monospace;\n  cursor: pointer;\n  padding: 1rem;\n`;\n\nconst Content = styled.div`\n  padding: 1rem;\n  box-sizing: border-box;\n  box-shadow: 1px 2px 5px 0px rgba(0,0,0,0.45);\n  display: grid;\n  grid-template-rows: auto 1fr;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.55);\n`;\n\nconst NodeList = styled.div`\n  margin-top: 1rem;\n  overflow: auto;\n  position: relative;\n`;\n\nconst NodeListItem = styled.div`\n  display: grid;\n  grid-template-columns: 180px 1fr 1fr;\n  font-size: 0.8rem;\n\n  &:hover {\n    ${({$color}) => $color ? 'background-color:' + rgba($color, 0.4) + ';' : ''}\n    cursor: pointer;\n  }\n`;\n\nconst TableTitle = styled(NodeListItem)`\n  border-bottom: solid 1px black;\n  position: sticky;\n  top: 0;\n  background-color: #fff;\n`;\n\nconst Cell = styled.div`\n  padding: 0.5rem;\n  display: flex;\n  align-items: center;\n`;\nconst Rank = styled.strong`\n  margin-right: 0.7rem;\n`;\n\nconst SectorCell = styled(Cell)`\n  border-left: solid 1px #000;\n`;\nconst ProximityCell = styled(Cell)`\n  justify-content: flex-end;\n`;\n\nconst Title = styled.h1`\n  font-size: 1rem;\n  font-weight: 400;\n  margin: 0;\n  display: flex;\n  align-items: center;\n`;\n\nconst Empty = styled(Title)`\n  height: 100%;\n  width: 100%;\n  background-color: rgba(0,0,0,0.04);\n  text-align: center;\n  grid-row: 1 / -1;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Circle = styled.div`\n  border: solid 3px black;\n  border-radius: 400px;\n  width: 0.75rem;\n  height: 0.7rem;\n  margin-right: 0.5rem;\n  flex-shrink: 0;\n`;\n\nconst Label = styled.span`\n  text-transform: uppercase;\n`;\n\nconst Table = (props) => {\n  const {nodes, hovered, updateSimulation} = props;\n  const highlightedRef = useRef(null);\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    if (highlightedRef && highlightedRef.current && containerRef && containerRef.current && hovered !== undefined) {\n      const highlightedNode = highlightedRef.current;\n      const containerNode = containerRef.current;\n      containerNode.scrollTop = highlightedNode.offsetTop - highlightedNode.offsetHeight;\n    }\n  }, [highlightedRef, containerRef, hovered])\n\n  if (nodes) {\n    const {selected, connected} = nodes;\n    const title = selected.label.replace(selected.id, '');\n    const connectedNodes = connected.map((node, i) => {\n      const {id, label, proximity, color, parent} = node;\n      const highlight = hovered && hovered.node && hovered.node.id === id;\n      const onClick = () => updateSimulation ? updateSimulation.triggerSimulationUpdate(node) : null;\n      return (\n        <NodeListItem\n          $color={color}\n          style={{backgroundColor: highlight ? rgba(color, 0.4) : undefined}}\n          ref={highlight ? highlightedRef : undefined}\n          onClick={onClick}\n          key={id}\n        >\n          <Cell\n            style={{borderLeft: `5px solid ${color}`}}\n          >\n            <Rank>{i + 1}</Rank>\n            <div>{label.replace(id, '')}</div>\n          </Cell>\n          <SectorCell>{parent.name}</SectorCell>\n          <ProximityCell>{proximity}</ProximityCell>\n        </NodeListItem>\n      );\n    })\n    const onClear = () => updateSimulation ? updateSimulation.clearSelections() : null;\n    return (\n      <Root>\n        <BackButton onClick={onClear}>{'< Back to Industry Space'}</BackButton>\n        <Content>\n        <Title>\n            <Circle style={{backgroundColor: selected.color}} />\n            <div><Label>Selected industry:</Label> {title}</div>\n          </Title>\n          <NodeList ref={containerRef}>\n            <TableTitle>\n              <Cell>Industry Name</Cell>\n              <SectorCell style={{border: 'none'}}>Sector</SectorCell>\n              <ProximityCell>Proximity</ProximityCell>\n            </TableTitle>\n            {connectedNodes}\n          </NodeList>\n        </Content>\n      </Root>\n    );\n  } else {\n    return (\n      <Root>\n        <Content>\n          <Empty>Click a node for more details</Empty>\n        </Content>\n      </Root>\n    );\n  }\n}\n\nexport default Table;\n"],"sourceRoot":""}