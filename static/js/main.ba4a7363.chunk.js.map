{"version":3,"sources":["sector-legend.png","pages/download.svg","components/CanvasIndustrySpaceCustomWithSimulation.js","components/BasicLegend.js","pages/IndustrySpaceNetwork.js","components/CanvasIndustrySpaceCustomWithSimulationNoLines.js","pages/IndustrySpaceNetworkNoLines.js","components/CanvasIndustrySpaceUMap.js","pages/IndustrySpaceUMap.js","components/CanvasIndustrySpaceUMapWithLines.js","pages/IndustrySpaceUMapWithLines.js","components/CanvasIndustrySpaceUMapProximityEdges.js","pages/IndustrySpaceUMapEdgesAbs.js","components/CanvasIndustrySpaceUMapProximityEdgesThreshold.js","pages/IndustrySpaceUMapEdgesThreshold.js","components/Table.js","components/CanvasIndustrySpaceUMapProximityEdgesThresholdWithTable.js","pages/IndustrySpaceUMapEdgesThresholdWithTable.js","components/CanvasIndustrySpaceNetworkWithTable.js","pages/IndustrySpaceNetworkWithTable.js","components/CanvasIndustrySpaceNetworkNoEdgesWithTable.js","pages/IndustrySpaceNetworkNoEdgesWithTable.js","components/StrengthTable.js","components/CanvasIndustrySpaceUMapProximityEdgesThresholdWithTableSrength.js","pages/IndustrySpaceUMapEdgesThresholdWithTableStrength.js","components/CanvasIndustrySpaceUMapProximityEdgesThresholdWithTableSrengthNoNodeSizing.js","pages/IndustrySpaceUMapEdgesThresholdWithTableStrengthNoSizing.js","components/PercentTable.js","components/CanvasIndustrySpaceUMapClustersRaw.js","pages/IndustrySpaceClusters.js","components/CanvasIndustrySpaceUMapClustersRawNoNodeSizing.js","pages/IndustrySpaceClustersNoSizing.js","components/ChemicalSpaceHighlighted.js","pages/ChemicalSpace.js","pages/ChemicalSpaceCustomHighlighting.js","components/ProductSpaceBasic.js","pages/ProductSpace.js","components/ProductSpaceSaudiHighlighted.js","pages/ProductSpaceSaudi.js","components/ProductSpaceHighlighted.js","pages/ProductSpaceCustomHighlighting.js","components/CanvasIndustrySpaceUMapClustersRings.js","pages/IndustrySpaceClustersRings.js","components/CanvasIndustrySpaceUMapClustersRingsEdgesLines.js","pages/IndustrySpaceClustersRingsEdgesLines.js","components/CanvasIndustrySpaceUMapClustersRingsEdgesOpacity.js","pages/IndustrySpaceClustersRingsEdgesOpacity.js","components/CanvasIndustrySpaceUMapClustersRingsEdgesOpacityLines.js","pages/IndustrySpaceClustersRingsEdgesOpacityLines.js","components/CanvasIndustrySpaceUMapClustersRingsEdgesOpacityLinesRCA.js","pages/IndustrySpaceClustersRingsEdgesOpacityLinesRCA.js","components/CanvasIndustrySpaceUMapClustersRingsEdgesOpacityLinesRCASizing.js","pages/IndustrySpaceClustersRingsEdgesOpacityLinesRCASizing.js","components/CanvasIndustrySpaceUMapClustersRingsClusterColoring.js","pages/IndustrySpaceClustersRingsClusterColoring.js","components/CanvasIndustrySpaceUMapClustersRingsRCA.js","pages/IndustrySpaceClustersRingsRCA.js","components/CanvasIndustrySpaceUMapClustersRingsRCASizing.js","pages/IndustrySpaceClustersRingsRCASizing.js","components/CanvasIndustrySpaceUMapClustersRingsClusterConvex.js","pages/IndustrySpaceClustersRingsClusterConvex.js","components/CanvasIndustrySpaceUMapClustersRingsClusterConvexLv2.js","pages/IndustrySpaceClustersRingsClusterConvexLv2.js","components/CanvasIndustrySpaceUMapClustersRingsClusterConvexLv3.js","pages/IndustrySpaceClustersRingsClusterConvexLv3.js","components/CanvasIndustrySpaceUMapClustersRingsClusterConvexLv1V2.js","pages/IndustrySpaceClustersRingsClusterConvexLv1V2.js","pages/Landing.js","pages/TestingLanding.js","App.js","index.js","IS-Legends-01.png","IS-Legends-02.png","IS_how-to-read-04.png"],"names":["module","exports","data","JSON","parse","naicsData","colorMap","id","color","rootNodeRef","useRef","useEffect","rootEl","current","root","d3","height","window","innerHeight","width","innerWidth","smallerSize","padding","widthMargin","heightMargin","rangeWidth","rangeHeight","allXValues","allYValues","nodes","forEach","x","y","push","radiusAdjuster","map","n","radius","Math","random","industry6Digit","find","code","toString","Error","naics_id","topLevelParentId","datum","parent_id","parseInt","console","error","xRange","yRange","xScale","domain","range","yScale","canvas","append","attr","node","context","getContext","simulation","force","strength","d","parseFloat","proximity","velocityDecay","k","alpha","tick","transform","tempData","zoom","scaleExtent","on","simulationUpdate","hoveredNode","undefined","highlightedNode","canvasEl","dragsubject","invertX","invertY","i","length","nodeX","nodeY","dx","dy","applyX","applyY","hoveredId","highlightedId","linkedEdges","edges","filter","source","target","save","clearRect","translate","scale","beginPath","moveTo","lineTo","strokeStyle","stroke","arc","PI","fillStyle","polished","fill","linkedNodeIds","includes","style","cursor","restore","call","event","allEdgeXValues","allEdgeYValues","xBounds","yBounds","bounds","max","min","transition","duration","links","initGraph","createForceGraph","innerHTML","ref","Root","styled","div","Legend","img","tableLayout","paddingRight","src","require","secondaryNodes","tertiaryNodes","nodesSortedByDistance","sortBy","node2","a","b","sqrt","slice","log","proximityNodes","trg","primaryNodes","quarternaryNodes","BackButton","button","Content","NodeList","NodeListItem","$color","rgba","TableTitle","Cell","Rank","strong","SectorCell","ProximityCell","Title","h1","Empty","Circle","Label","span","Table","props","hovered","updateSimulation","highlightedRef","containerRef","scrollTop","offsetTop","offsetHeight","selected","connected","title","label","replace","connectedNodes","parent","highlight","backgroundColor","onClick","triggerSimulationUpdate","key","borderLeft","name","clearSelections","border","Tooltip","useState","nodeList","setNodeList","setHovered","setUpdateSimulation","update","nodeCount","textAlign","textBaseline","font","fillText","coords","setTimeout","tooltip","top","left","toFixed","reverse","floor","String","fromCharCode","HowToReadButton","EmptyImage","ModalContainer","ModalBackdrop","ModalContent","CloseButton","proximityScale","showToggle","modalOpen","setModalOpen","modal","HowToReadPNG","alt","imgSrc","PNGLegend2","PNGLegend1","allProximities","proximityRange","chemData","fadeIn","keyframes","codeList","isIncluded","alphaDecay","lineWidth","backButton","UtilityBar","DownloadButton","SvgIcon","Modal","Backdrop","Textarea","textarea","UpdateButton","downloadImage","link","document","createElement","download","href","querySelector","toDataURL","click","remove","setCodeList","textAreaRef","React","placeholder","value","codes","split","marginRight","DownloadSVGURL","join","highlightNodes","keyName","Select","select","setKeyName","onChange","e","getLines","ctx","text","maxWidth","words","lines","currentLine","word","measureText","initial_x","initial_y","shouldTick","drawPoint","r","currentPoint","totalPoints","centerX","centerY","angle","cos","sin","t","shortenedLabel","numPrimary","numSecondary","newCoords","new_x","new_y","xDist","yDist","x_interval","y_interval","interval","elapsed","currentNode","ceil","stop","linkedNodes","targetNode","numberOfHighlightedNodes","round","showPng","clusterMap","cluster","naics","mapped","C1","convexMap","convex","points","hull","lineCap","point","closePath","C2","C3","App","TestLanding","exact","path","component","IndustrySpaceNetwork","IndustrySpaceNetworkNoLines","IndustrySpaceUMap","IndustrySpaceUMapWithLines","IndustrySpaceUMapEdgesAbs","IndustrySpaceUMapEdgesThreshold","IndustrySpaceUMapEdgesThresholdWithTable","IndustrySpaceNetworkWithTable","IndustrySpaceNetworkNoEdgesWithTable","IndustrySpaceUMapEdgesThresholdWithTableStrength","IndustrySpaceClusters","IndustrySpaceUMapEdgesThresholdWithTableStrengthNoSizing","IndustrySpaceClustersNoSizing","IndustrySpaceClustersRings","IndustrySpaceClustersRingsEdgesLines","IndustrySpaceClustersRingsEdgesOpacity","IndustrySpaceClustersRingsEdgesOpacityLines","IndustrySpaceClustersRingsEdgesOpacityLinesRCA","ProductSpace","ProductSpaceSaudi","ProductSpaceCustom","ChemicalSpace","ChemicalSpaceCustomHighlighting","IndustrySpaceClustersRingsClusterColoring","IndustrySpaceClustersRingsClusterConvex","IndustrySpaceClustersRingsClusterConvexLv2","IndustrySpaceClustersRingsClusterConvexLv3","IndustrySpaceClustersRingsClusterConvexLv1V2","IndustrySpaceClustersRingsEdgesOpacityLinesRCASizing","IndustrySpaceClustersRingsRCA","IndustrySpaceClustersRingsRCASizing","Landing","ReactDOM","render","getElementById"],"mappings":"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C,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAWgN,OAAQ,IACtC,CAAEjN,GAAI,KAAMC,MAAO,UAAW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","file":"static/js/main.ba4a7363.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sector-legend.a4fd20af.png\";","module.exports = __webpack_public_path__ + \"static/media/download.02e9c647.svg\";","import React, {useEffect, useRef} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/industry-space-no-overlap.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    let radius = Math.random() * 6;\n    radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {...n, radius, color}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 10, rangeHeight / 10))\n                .force(\"charge\", d3.forceManyBody().strength(-6.5))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 5) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => parseFloat(d.proximity)).id(function(d) { return d.id; }))\n                .velocityDecay(0.8)\n  let k = 0;\n  while ((simulation.alpha() > 1e-2) && (k < 150)) {\n      simulation.tick();\n      k = k + 1;\n  }\n\n  let transform = d3.zoomIdentity;\n\n  initGraph(data)\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    let hoveredNode = undefined;\n    let highlightedNode = undefined;\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          const edges = tempData.edges.filter(({source, target}) => source.id === node.id || target.id === node.id)\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          edges.forEach(({source, target}) => {\n            allEdgeXValues.push(xScale(source.x));\n            allEdgeXValues.push(xScale(target.x));\n            allEdgeYValues.push(yScale(source.y));\n            allEdgeYValues.push(yScale(target.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      const hoveredId = hoveredNode && hoveredNode.id ? hoveredNode.id : undefined;\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n      const linkedEdges = tempData.edges.filter(({source, target}) =>\n          source.id === hoveredId || target.id === hoveredId ||\n          source.id === highlightedId || target.id === highlightedId)\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      tempData.edges.forEach(function(d) {\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        if (highlightedId) {\n          context.strokeStyle = '#f9f9f9';\n        } else {\n          context.strokeStyle = '#e6e6e6';\n        }\n        context.stroke();\n      });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedId === undefined ? d.color : polished.setLightness(0.91, d.color);\n        context.fill();\n      });\n\n      const linkedNodeIds = [];\n      linkedEdges.forEach(function(d) {\n        if (!linkedNodeIds.includes(({id}) => d.source.id)) {\n          linkedNodeIds.push(d.source);\n        }\n        if (!linkedNodeIds.includes(({id}) => d.target.id)) {\n          linkedNodeIds.push(d.target);\n        }\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        context.strokeStyle = '#afafaf';\n        context.stroke();\n      });\n\n      linkedNodeIds.forEach(function(d, i) {\n        if (d) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.color;\n          context.fill();\n          context.strokeStyle = '#afafaf';\n          context.stroke();\n        }\n      });\n\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n\n      context.restore();\n    }\n  }\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      createForceGraph(rootEl, data);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef]);\n\n  return (\n    <div>\n      <div ref={rootNodeRef} />\n    </div>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components/macro';\n\nconst Root = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  pointer-events: none;\n  z-index: 100;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-sizing:  border-box;\n  padding-left: 2rem;\n  padding-bottom: 2rem;\n`;\n\nconst Legend = styled.img`\n  width: 100%;\n  max-width: 800px;\n`;\n\nexport default ({tableLayout}) => {\n  return (\n    <Root\n      style={{paddingRight: tableLayout ? 550 : undefined}}\n    >\n      <Legend src={require('../sector-legend.png')} />\n    </Root>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceCustomWithSimulation';\nimport Legend from '../components/BasicLegend';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n      <Legend />\n    </div>\n  );\n}\n","import React, {useEffect, useRef} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/industry-space-no-overlap.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    let radius = Math.random() * 6;\n    radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {...n, radius, color}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 10, rangeHeight / 10))\n                .force(\"charge\", d3.forceManyBody().strength(-6.5))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 5) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => parseFloat(d.proximity)).id(function(d) { return d.id; }))\n                .velocityDecay(0.8)\n  let k = 0;\n  while ((simulation.alpha() > 1e-2) && (k < 150)) {\n      simulation.tick();\n      k = k + 1;\n  }\n\n  let transform = d3.zoomIdentity;\n\n  initGraph(data)\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    let hoveredNode = undefined;\n    let highlightedNode = undefined;\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          const edges = tempData.edges.filter(({source, target}) => source.id === node.id || target.id === node.id)\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          edges.forEach(({source, target}) => {\n            allEdgeXValues.push(xScale(source.x));\n            allEdgeXValues.push(xScale(target.x));\n            allEdgeYValues.push(yScale(source.y));\n            allEdgeYValues.push(yScale(target.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      const hoveredId = hoveredNode && hoveredNode.id ? hoveredNode.id : undefined;\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n      const linkedEdges = tempData.edges.filter(({source, target}) =>\n          source.id === hoveredId || target.id === hoveredId ||\n          source.id === highlightedId || target.id === highlightedId)\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // tempData.edges.forEach(function(d) {\n      //   context.beginPath();\n      //   context.moveTo(xScale(d.source.x), yScale(d.source.y));\n      //   context.lineTo(xScale(d.target.x), yScale(d.target.y));\n      //   if (highlightedId) {\n      //     context.strokeStyle = '#f9f9f9';\n      //   } else {\n      //     context.strokeStyle = '#e6e6e6';\n      //   }\n      //   context.stroke();\n      // });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedId === undefined ? d.color : polished.setLightness(0.98, d.color);\n        context.fill();\n      });\n\n      const linkedNodeIds = [];\n      linkedEdges.forEach(function(d) {\n        if (!linkedNodeIds.includes(({id}) => d.source.id)) {\n          linkedNodeIds.push(d.source);\n        }\n        if (!linkedNodeIds.includes(({id}) => d.target.id)) {\n          linkedNodeIds.push(d.target);\n        }\n        // context.beginPath();\n        // context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        // context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        // context.strokeStyle = '#afafaf';\n        // context.stroke();\n      });\n\n      linkedNodeIds.forEach(function(d, i) {\n        if (d) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.color;\n          context.fill();\n          context.strokeStyle = '#afafaf';\n          context.stroke();\n        }\n      });\n\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n\n      context.restore();\n    }\n  }\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      createForceGraph(rootEl, data);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef]);\n\n  return (\n    <div>\n      <div ref={rootNodeRef} />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceCustomWithSimulationNoLines';\nimport Legend from '../components/BasicLegend';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n      <Legend />\n    </div>\n  );\n}\n","import React, {useEffect, useRef} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\nimport sortBy from 'lodash/sortBy';\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-custom-2.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    let radius = Math.random() * 6;\n    radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    // const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {...n, radius, color}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.8, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .velocityDecay(0.96)\n  let k = 0;\n  while ((simulation.alpha() > 1e-2) && (k < 150)) {\n      simulation.tick();\n      k = k + 1;\n  }\n\n  let transform = d3.zoomIdentity;\n\n  initGraph(data)\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    let hoveredNode = undefined;\n    let highlightedNode = undefined;\n    let secondaryNodes = [];\n    let tertiaryNodes = [];\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          const nodesSortedByDistance = sortBy(tempData.nodes, node2 => {\n            const a = node.x - node2.x;\n            const b = node.y - node2.y;\n            const c = Math.sqrt( a*a + b*b );\n            return c;\n          })\n          // nodes are adjusted by 1 to account for this node always being the closest\n          secondaryNodes = [...nodesSortedByDistance].slice(1,11);\n          tertiaryNodes = [...nodesSortedByDistance].slice(11,31);\n          // const edges = tempData.edges.filter(({source, target}) => source.id === node.id || target.id === node.id)\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          // edges.forEach(({source, target}) => {\n          //   allEdgeXValues.push(xScale(source.x));\n          //   allEdgeXValues.push(xScale(target.x));\n          //   allEdgeYValues.push(yScale(source.y));\n          //   allEdgeYValues.push(yScale(target.y));\n          // });\n          [...secondaryNodes, ...tertiaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.x));\n            allEdgeYValues.push(yScale(n.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      // const hoveredId = hoveredNode && hoveredNode.id ? hoveredNode.id : undefined;\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n      // const linkedEdges = tempData.edges.filter(({source, target}) =>\n      //     source.id === hoveredId || target.id === hoveredId ||\n      //     source.id === highlightedId || target.id === highlightedId)\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // tempData.edges.forEach(function(d) {\n      //   context.beginPath();\n      //   context.moveTo(xScale(d.source.x), yScale(d.source.y));\n      //   context.lineTo(xScale(d.target.x), yScale(d.target.y));\n      //   if (highlightedId) {\n      //     context.strokeStyle = '#f9f9f9';\n      //   } else {\n      //     context.strokeStyle = '#e6e6e6';\n      //   }\n      //   context.stroke();\n      // });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedId === undefined ? d.color : polished.rgba(d.color, 0.035);\n        context.fill();\n      });\n\n      // const linkedNodeIds = [];\n      // linkedEdges.forEach(function(d) {\n      //   if (!linkedNodeIds.includes(({id}) => d.source.id)) {\n      //     linkedNodeIds.push(d.source);\n      //   }\n      //   if (!linkedNodeIds.includes(({id}) => d.target.id)) {\n      //     linkedNodeIds.push(d.target);\n      //   }\n      //   // context.beginPath();\n      //   // context.moveTo(xScale(d.source.x), yScale(d.source.y));\n      //   // context.lineTo(xScale(d.target.x), yScale(d.target.y));\n      //   // context.strokeStyle = '#afafaf';\n      //   // context.stroke();\n      // });\n\n      // linkedNodeIds.forEach(function(d, i) {\n      //   if (d) {\n      //     context.beginPath();\n      //     context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n      //     context.fillStyle = d.color;\n      //     context.fill();\n      //     context.strokeStyle = '#afafaf';\n      //     context.stroke();\n      //   }\n      // });\n\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n      if (secondaryNodes && secondaryNodes.length) {\n        secondaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.8);\n          context.fill();\n        });\n      }\n      if (tertiaryNodes && tertiaryNodes.length) {\n        tertiaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.2);\n          context.fill();\n        });\n      }\n\n      context.restore();\n    }\n  }\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      createForceGraph(rootEl, data);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef]);\n\n  return (\n    <div>\n      <div ref={rootNodeRef} />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMap';\nimport Legend from '../components/BasicLegend';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n      <Legend />\n    </div>\n  );\n}\n","import React, {useEffect, useRef} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-custom-2.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    let radius = Math.random() * 6;\n    radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    // const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {...n, radius, color}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.8, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .velocityDecay(0.96)\n  let k = 0;\n  while ((simulation.alpha() > 1e-2) && (k < 150)) {\n      simulation.tick();\n      k = k + 1;\n  }\n\n  let transform = d3.zoomIdentity;\n\n  initGraph(data)\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    let hoveredNode = undefined;\n    let highlightedNode = undefined;\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        console.log(data);\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          const edges = tempData.edges.filter(({source, target}) => source.id === node.id || target.id === node.id)\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          edges.forEach(({source, target}) => {\n            allEdgeXValues.push(xScale(source.x));\n            allEdgeXValues.push(xScale(target.x));\n            allEdgeYValues.push(yScale(source.y));\n            allEdgeYValues.push(yScale(target.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      const hoveredId = hoveredNode && hoveredNode.id ? hoveredNode.id : undefined;\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n      const linkedEdges = tempData.edges.filter(({source, target}) =>\n          source.id === hoveredId || target.id === hoveredId ||\n          source.id === highlightedId || target.id === highlightedId)\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      tempData.edges.forEach(function(d) {\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        if (highlightedId) {\n          context.strokeStyle = '#f9f9f9';\n        } else {\n          context.strokeStyle = '#e6e6e6';\n        }\n        context.stroke();\n      });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedId === undefined ? d.color : polished.setLightness(0.98, d.color);\n        context.fill();\n      });\n\n      const linkedNodeIds = [];\n      linkedEdges.forEach(function(d) {\n        if (!linkedNodeIds.includes(({id}) => d.source.id)) {\n          linkedNodeIds.push(d.source);\n        }\n        if (!linkedNodeIds.includes(({id}) => d.target.id)) {\n          linkedNodeIds.push(d.target);\n        }\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        context.strokeStyle = '#afafaf';\n        context.stroke();\n      });\n\n      linkedNodeIds.forEach(function(d, i) {\n        if (d) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.color;\n          context.fill();\n          context.strokeStyle = '#afafaf';\n          context.stroke();\n        }\n      });\n\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n\n      context.restore();\n    }\n  }\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      createForceGraph(rootEl, data);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef]);\n\n  return (\n    <div>\n      <div ref={rootNodeRef} />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapWithLines';\nimport Legend from '../components/BasicLegend';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n      <Legend />\n    </div>\n  );\n}\n","import React, {useEffect, useRef} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-custom-2.json'));\nconst proximityNodes = JSON.parse(raw('../data/proximity.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    let radius = Math.random() * 6;\n    radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    // const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {...n, radius, color}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.8, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .velocityDecay(0.96)\n  let k = 0;\n  while ((simulation.alpha() > 1e-2) && (k < 150)) {\n      simulation.tick();\n      k = k + 1;\n  }\n\n  let transform = d3.zoomIdentity;\n\n  initGraph(data)\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    let hoveredNode = undefined;\n    let highlightedNode = undefined;\n    let secondaryNodes = [];\n    let tertiaryNodes = [];\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          // nodes are adjusted by 1 to account for this node always being the closest\n          secondaryNodes = [];\n          proximityNodes[node.id].forEach(({trg, proximity}) => {\n            const node2 = tempData.nodes.find(n => n.id === trg);\n            if (node2) {\n              secondaryNodes.push({...node2, proximity});\n            }\n          });\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [...secondaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.x));\n            allEdgeYValues.push(yScale(n.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      // const hoveredId = hoveredNode && hoveredNode.id ? hoveredNode.id : undefined;\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n      // const linkedEdges = tempData.edges.filter(({source, target}) =>\n      //     source.id === hoveredId || target.id === hoveredId ||\n      //     source.id === highlightedId || target.id === highlightedId)\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // tempData.edges.forEach(function(d) {\n      //   context.beginPath();\n      //   context.moveTo(xScale(d.source.x), yScale(d.source.y));\n      //   context.lineTo(xScale(d.target.x), yScale(d.target.y));\n      //   if (highlightedId) {\n      //     context.strokeStyle = '#f9f9f9';\n      //   } else {\n      //     context.strokeStyle = '#e6e6e6';\n      //   }\n      //   context.stroke();\n      // });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedId === undefined ? d.color : polished.rgba(d.color, 0.035);\n        context.fill();\n      });\n\n      // const linkedNodeIds = [];\n      // linkedEdges.forEach(function(d) {\n      //   if (!linkedNodeIds.includes(({id}) => d.source.id)) {\n      //     linkedNodeIds.push(d.source);\n      //   }\n      //   if (!linkedNodeIds.includes(({id}) => d.target.id)) {\n      //     linkedNodeIds.push(d.target);\n      //   }\n      //   // context.beginPath();\n      //   // context.moveTo(xScale(d.source.x), yScale(d.source.y));\n      //   // context.lineTo(xScale(d.target.x), yScale(d.target.y));\n      //   // context.strokeStyle = '#afafaf';\n      //   // context.stroke();\n      // });\n\n      // linkedNodeIds.forEach(function(d, i) {\n      //   if (d) {\n      //     context.beginPath();\n      //     context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n      //     context.fillStyle = d.color;\n      //     context.fill();\n      //     context.strokeStyle = '#afafaf';\n      //     context.stroke();\n      //   }\n      // });\n\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n      if (secondaryNodes && secondaryNodes.length) {\n        secondaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          // console.log(d.proximity);\n          // context.fillStyle = polished.rgba(d.color, 0.8);\n          context.fillStyle = polished.rgba(d.color, d.proximity * 100);\n          context.fill();\n        });\n      }\n      if (tertiaryNodes && tertiaryNodes.length) {\n        tertiaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.2);\n          context.fill();\n        });\n      }\n\n      context.restore();\n    }\n  }\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      createForceGraph(rootEl, data);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef]);\n\n  return (\n    <div>\n      <div ref={rootNodeRef} />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapProximityEdges';\nimport Legend from '../components/BasicLegend';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n      <Legend />\n    </div>\n  );\n}\n","import React, {useEffect, useRef} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-custom-2.json'));\nconst proximityNodes = JSON.parse(raw('../data/proximity.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    let radius = Math.random() * 6;\n    radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    // const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {...n, radius, color}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.8, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .velocityDecay(0.96)\n  let k = 0;\n  while ((simulation.alpha() > 1e-2) && (k < 150)) {\n      simulation.tick();\n      k = k + 1;\n  }\n\n  let transform = d3.zoomIdentity;\n\n  initGraph(data)\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    let hoveredNode = undefined;\n    let highlightedNode = undefined;\n    let primaryNodes = [];\n    let secondaryNodes = [];\n    let tertiaryNodes = [];\n    let quarternaryNodes = [];\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          // nodes are adjusted by 1 to account for this node always being the closest\n          primaryNodes = [];\n          secondaryNodes = [];\n          tertiaryNodes = [];\n          quarternaryNodes = [];\n          proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n            const node2 = tempData.nodes.find(n => n.id === trg);\n            if (node2) {\n              if (i < 8) {\n                primaryNodes.push({...node2, proximity});\n              } else if (i < 24) {\n                secondaryNodes.push({...node2, proximity});\n              } else if (i < 48) {\n                tertiaryNodes.push({...node2, proximity});\n              } else {\n                quarternaryNodes.push({...node2, proximity});\n              }\n            }\n          });\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [node, ...primaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.x));\n            allEdgeYValues.push(yScale(n.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      // const hoveredId = hoveredNode && hoveredNode.id ? hoveredNode.id : undefined;\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n      // const linkedEdges = tempData.edges.filter(({source, target}) =>\n      //     source.id === hoveredId || target.id === hoveredId ||\n      //     source.id === highlightedId || target.id === highlightedId)\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // tempData.edges.forEach(function(d) {\n      //   context.beginPath();\n      //   context.moveTo(xScale(d.source.x), yScale(d.source.y));\n      //   context.lineTo(xScale(d.target.x), yScale(d.target.y));\n      //   if (highlightedId) {\n      //     context.strokeStyle = '#f9f9f9';\n      //   } else {\n      //     context.strokeStyle = '#e6e6e6';\n      //   }\n      //   context.stroke();\n      // });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedId === undefined ? d.color : polished.rgba(d.color, 0.035);\n        context.fill();\n      });\n\n      // const linkedNodeIds = [];\n      // linkedEdges.forEach(function(d) {\n      //   if (!linkedNodeIds.includes(({id}) => d.source.id)) {\n      //     linkedNodeIds.push(d.source);\n      //   }\n      //   if (!linkedNodeIds.includes(({id}) => d.target.id)) {\n      //     linkedNodeIds.push(d.target);\n      //   }\n      //   // context.beginPath();\n      //   // context.moveTo(xScale(d.source.x), yScale(d.source.y));\n      //   // context.lineTo(xScale(d.target.x), yScale(d.target.y));\n      //   // context.strokeStyle = '#afafaf';\n      //   // context.stroke();\n      // });\n\n      // linkedNodeIds.forEach(function(d, i) {\n      //   if (d) {\n      //     context.beginPath();\n      //     context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n      //     context.fillStyle = d.color;\n      //     context.fill();\n      //     context.strokeStyle = '#afafaf';\n      //     context.stroke();\n      //   }\n      // });\n\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n      if (primaryNodes && primaryNodes.length) {\n        primaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.8);\n          context.fillStyle = polished.rgba(d.color, d.proximity * 100);\n          context.fill();\n        });\n      }\n      if (secondaryNodes && secondaryNodes.length) {\n        secondaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.5);\n          context.fillStyle = polished.rgba(d.color, d.proximity * 100);\n          context.fill();\n        });\n      }\n      if (tertiaryNodes && tertiaryNodes.length) {\n        tertiaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.3);\n          context.fill();\n        });\n      }\n      if (quarternaryNodes && quarternaryNodes.length) {\n        quarternaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.085);\n          context.fill();\n        });\n      }\n\n      context.restore();\n    }\n  }\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      createForceGraph(rootEl, data);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef]);\n\n  return (\n    <div>\n      <div ref={rootNodeRef} />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapProximityEdgesThreshold';\nimport Legend from '../components/BasicLegend';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n      <Legend />\n    </div>\n  );\n}\n","import React, {useRef, useEffect} from 'react';\nimport styled from 'styled-components';\nimport {rgba} from 'polished';\n\nconst Root = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  width: 450px;\n  padding: 1rem;\n  font-family: 'OfficeCodeProWeb', monospace;\n`;\n\nconst BackButton = styled.button`\n  position: fixed;\n  left: 0;\n  top: 0;\n  background-color: transparent;\n  border: none;\n  font-size: 1rem;\n  font-family: 'OfficeCodeProWeb', monospace;\n  cursor: pointer;\n  padding: 1rem;\n`;\n\nconst Content = styled.div`\n  padding: 1rem;\n  box-sizing: border-box;\n  box-shadow: 1px 2px 5px 0px rgba(0,0,0,0.45);\n  display: grid;\n  grid-template-rows: auto 1fr;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.55);\n`;\n\nconst NodeList = styled.div`\n  margin-top: 1rem;\n  overflow: auto;\n  position: relative;\n`;\n\nconst NodeListItem = styled.div`\n  display: grid;\n  grid-template-columns: 180px 1fr 1fr;\n  font-size: 0.8rem;\n\n  &:hover {\n    ${({$color}) => $color ? 'background-color:' + rgba($color, 0.4) + ';' : ''}\n    cursor: pointer;\n  }\n`;\n\nconst TableTitle = styled(NodeListItem)`\n  border-bottom: solid 1px black;\n  position: sticky;\n  top: 0;\n  background-color: #fff;\n`;\n\nconst Cell = styled.div`\n  padding: 0.5rem;\n  display: flex;\n  align-items: center;\n`;\nconst Rank = styled.strong`\n  margin-right: 0.7rem;\n`;\n\nconst SectorCell = styled(Cell)`\n  border-left: solid 1px #000;\n`;\nconst ProximityCell = styled(Cell)`\n  justify-content: flex-end;\n`;\n\nconst Title = styled.h1`\n  font-size: 1rem;\n  font-weight: 400;\n  margin: 0;\n  display: flex;\n  align-items: center;\n`;\n\nconst Empty = styled(Title)`\n  height: 100%;\n  width: 100%;\n  background-color: rgba(0,0,0,0.04);\n  text-align: center;\n  grid-row: 1 / -1;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Circle = styled.div`\n  border: solid 3px black;\n  border-radius: 400px;\n  width: 0.75rem;\n  height: 0.7rem;\n  margin-right: 0.5rem;\n  flex-shrink: 0;\n`;\n\nconst Label = styled.span`\n  text-transform: uppercase;\n`;\n\nconst Table = (props) => {\n  const {nodes, hovered, updateSimulation} = props;\n  const highlightedRef = useRef(null);\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    if (highlightedRef && highlightedRef.current && containerRef && containerRef.current && hovered !== undefined) {\n      const highlightedNode = highlightedRef.current;\n      const containerNode = containerRef.current;\n      containerNode.scrollTop = highlightedNode.offsetTop - highlightedNode.offsetHeight;\n    }\n  }, [highlightedRef, containerRef, hovered])\n\n  if (nodes) {\n    const {selected, connected} = nodes;\n    const title = selected.label.replace(selected.id, '');\n    const connectedNodes = connected.map((node, i) => {\n      const {id, label, proximity, color, parent} = node;\n      const highlight = hovered && hovered.node && hovered.node.id === id;\n      const onClick = () => updateSimulation ? updateSimulation.triggerSimulationUpdate(node) : null;\n      return (\n        <NodeListItem\n          $color={color}\n          style={{backgroundColor: highlight ? rgba(color, 0.4) : undefined}}\n          ref={highlight ? highlightedRef : undefined}\n          onClick={onClick}\n          key={id}\n        >\n          <Cell\n            style={{borderLeft: `5px solid ${color}`}}\n          >\n            <Rank>{i + 1}</Rank>\n            <div>{label.replace(id, '')}</div>\n          </Cell>\n          <SectorCell>{parent.name}</SectorCell>\n          <ProximityCell>{proximity}</ProximityCell>\n        </NodeListItem>\n      );\n    })\n    const onClear = () => updateSimulation ? updateSimulation.clearSelections() : null;\n    return (\n      <Root>\n        <BackButton onClick={onClear}>{'< Back to Industry Space'}</BackButton>\n        <Content>\n        <Title>\n            <Circle style={{backgroundColor: selected.color}} />\n            <div><Label>Selected industry:</Label> {title}</div>\n          </Title>\n          <NodeList ref={containerRef}>\n            <TableTitle>\n              <Cell>Industry Name</Cell>\n              <SectorCell style={{border: 'none'}}>Sector</SectorCell>\n              <ProximityCell>Proximity</ProximityCell>\n            </TableTitle>\n            {connectedNodes}\n          </NodeList>\n        </Content>\n      </Root>\n    );\n  } else {\n    return (\n      <Root>\n        <Content>\n          <Empty>Click a node for more details</Empty>\n        </Content>\n      </Root>\n    );\n  }\n}\n\nexport default Table;\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\nimport Table from './Table';\nimport styled from 'styled-components';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-custom-2.json'));\nconst proximityNodes = JSON.parse(raw('../data/proximity-15.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth - 450;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    let radius = Math.random() * 6;\n    radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    // const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {...n, radius, color, parent: current}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.3, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .velocityDecay(0.96)\n  let k = 0;\n  while ((simulation.alpha() > 1e-2) && (k < 150)) {\n      simulation.tick();\n      k = k + 1;\n  }\n\n  let transform = d3.zoomIdentity;\n\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n  let secondaryNodes = [];\n  let tertiaryNodes = [];\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();        \n        setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          primaryNodes = [];\n          secondaryNodes = [];\n          tertiaryNodes = [];\n          proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n            const node2 = tempData.nodes.find(n => n.id === trg);\n            if (node2) {\n              if (i < 5) {\n                primaryNodes.push({...node2, proximity});\n              } else if (i < 10) {\n                secondaryNodes.push({...node2, proximity});\n              } else {\n                tertiaryNodes.push({...node2, proximity});\n              }\n            }\n          });\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [node, ...primaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.x));\n            allEdgeYValues.push(yScale(n.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes, ...secondaryNodes, ...tertiaryNodes],\n          })\n        } else {\n          primaryNodes = [];\n          secondaryNodes = [];\n          tertiaryNodes = [];\n          setNodeList(undefined);\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedId === undefined ? d.color : polished.rgba(d.color, 0.035);\n        context.fill();\n      });\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n      let nodeCount = 1;\n      if (primaryNodes && primaryNodes.length) {\n        primaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.8);\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${d.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(nodeCount++, xScale(d.x), yScale(d.y));\n        });\n      }\n      if (secondaryNodes && secondaryNodes.length) {\n        secondaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.5);\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${d.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(nodeCount++, xScale(d.x), yScale(d.y));\n        });\n      }\n      if (tertiaryNodes && tertiaryNodes.length) {\n        tertiaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.3);\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${d.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(nodeCount++, xScale(d.x), yScale(d.y));\n        });\n      }\n\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        secondaryNodes = [];\n        tertiaryNodes = [];\n        proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n          const node2 = tempData.nodes.find(n => n.id === trg);\n          if (node2) {\n            if (i < 5) {\n              primaryNodes.push({...node2, proximity});\n            } else if (i < 10) {\n              secondaryNodes.push({...node2, proximity});\n            } else {\n              tertiaryNodes.push({...node2, proximity});\n            }\n          }\n        });\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [node, ...primaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.x));\n          allEdgeYValues.push(yScale(n.y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes, ...secondaryNodes, ...tertiaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      secondaryNodes = [];\n      tertiaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  setTimeout(() => {\n    update.clearSelections();\n  }, 0)\n\n  return update;\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [nodeList, setNodeList] = useState(undefined);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null\n\n  return (\n    <div>\n      {tooltip}\n      <div ref={rootNodeRef} />\n      <Table nodes={nodeList} hovered={hovered} updateSimulation={updateSimulation} />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapProximityEdgesThresholdWithTable';\nimport Legend from '../components/BasicLegend';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n      <Legend tableLayout={true} />\n    </div>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\nimport Table from './Table';\nimport styled from 'styled-components';\nimport sortBy from 'lodash/sortBy';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nconst minExpectedScreenSize = 1020;\n\nconst data = JSON.parse(raw('../data/industry-space-no-overlap.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth - 450;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    let radius = Math.random() * 6;\n    radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n    }\n    const naics_id = industry6Digit.naics_id;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {...n, radius, color, parent: current, label: industry6Digit.name}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 10, rangeHeight / 10))\n                .force(\"charge\", d3.forceManyBody().strength(-6.5))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 5) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => parseFloat(d.proximity)).id(function(d) { return d.id; }))\n                .velocityDecay(0.8)\n  let k = 0;\n  while ((simulation.alpha() > 1e-2) && (k < 150)) {\n      simulation.tick();\n      k = k + 1;\n  }\n\n  let transform = d3.zoomIdentity;\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    let hoveredNode = undefined;\n    let highlightedNode = undefined;\n    let connectedNodes = [];\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();\n        setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          const edges = tempData.edges.filter(({source, target}) => source.id === node.id || target.id === node.id)\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          connectedNodes = [];\n          edges.forEach(({source, target, proximity}) => {\n            allEdgeXValues.push(xScale(source.x));\n            allEdgeXValues.push(xScale(target.x));\n            allEdgeYValues.push(yScale(source.y));\n            allEdgeYValues.push(yScale(target.y));\n            if (source.id !== node.id && !connectedNodes.find(n => n.id === source.id)) {\n              connectedNodes.push({...source, proximity: proximity.toFixed(5)});\n            }\n            if (target.id !== node.id && !connectedNodes.find(n => n.id === target.id)) {\n              connectedNodes.push({...target, proximity: proximity.toFixed(5)});\n            }\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n          connectedNodes = sortBy(connectedNodes, 'proximity').reverse()\n          setNodeList({\n            selected: node,\n            connected: connectedNodes,\n          })\n\n        } else {\n          connectedNodes = [];\n          setNodeList(undefined);\n        }\n        simulationUpdate();\n      })\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      const hoveredId = hoveredNode && hoveredNode.id ? hoveredNode.id : undefined;\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n      const linkedEdges = tempData.edges.filter(({source, target}) =>\n          source.id === hoveredId || target.id === hoveredId ||\n          source.id === highlightedId || target.id === highlightedId)\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      tempData.edges.forEach(function(d) {\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        if (highlightedId) {\n          context.strokeStyle = '#f9f9f9';\n        } else {\n          context.strokeStyle = '#e6e6e6';\n        }\n        context.stroke();\n      });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedId === undefined ? d.color : polished.setLightness(0.97, d.color);\n        context.fill();\n      });\n\n      const linkedNodeIds = [];\n      linkedEdges.forEach(function(d) {\n        if (!linkedNodeIds.includes(({id}) => d.source.id)) {\n          linkedNodeIds.push(d.source);\n        }\n        if (!linkedNodeIds.includes(({id}) => d.target.id)) {\n          linkedNodeIds.push(d.target);\n        }\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        context.strokeStyle = '#afafaf';\n        context.stroke();\n      });\n\n      linkedNodeIds.forEach(function(d, i) {\n        if (d) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.color;\n          context.fill();\n          context.strokeStyle = '#afafaf';\n          context.stroke();\n        }\n      });\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n\n      let nodeCount = 1;\n      connectedNodes.forEach(function(d, i) {\n        if (d) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.color;\n          context.fill();\n          context.strokeStyle = hoveredNode && hoveredNode.id === d.id ? 'black' : '#afafaf';\n          context.stroke();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${d.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(nodeCount++, xScale(d.x), yScale(d.y));\n        }\n      });\n\n      context.restore();\n    }\n    const triggerSimulationUpdate = (node) => {\n      highlightedNode = node;\n      if (node) {\n        const edges = tempData.edges.filter(({source, target}) => source.id === node.id || target.id === node.id)\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        connectedNodes = [];\n        edges.forEach(({source, target, proximity}) => {\n          allEdgeXValues.push(xScale(source.x));\n          allEdgeXValues.push(xScale(target.x));\n          allEdgeYValues.push(yScale(source.y));\n          allEdgeYValues.push(yScale(target.y));\n          if (source.id !== node.id && !connectedNodes.find(n => n.id === source.id)) {\n            connectedNodes.push({...source, proximity: proximity.toFixed(5)});\n          }\n          if (target.id !== node.id && !connectedNodes.find(n => n.id === target.id)) {\n            connectedNodes.push({...target, proximity: proximity.toFixed(5)});\n          }\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n        connectedNodes = sortBy(connectedNodes, 'proximity').reverse()\n        setNodeList({\n          selected: node,\n          connected: connectedNodes,\n        })\n\n      } else {\n        connectedNodes = [];\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      connectedNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  return update;\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [nodeList, setNodeList] = useState(undefined);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null\n\n  return (\n    <div>\n      {tooltip}\n      <div ref={rootNodeRef} />\n      <Table nodes={nodeList} hovered={hovered} updateSimulation={updateSimulation} />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceNetworkWithTable';\nimport Legend from '../components/BasicLegend';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n      <Legend tableLayout={true} />\n    </div>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\nimport Table from './Table';\nimport styled from 'styled-components';\nimport sortBy from 'lodash/sortBy';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nconst minExpectedScreenSize = 1020;\n\nconst data = JSON.parse(raw('../data/industry-space-no-overlap.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth - 450;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    let radius = Math.random() * 6;\n    radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n    }\n    const naics_id = industry6Digit.naics_id;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {...n, radius, color, parent: current, label: industry6Digit.name}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 10, rangeHeight / 10))\n                .force(\"charge\", d3.forceManyBody().strength(-6.5))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 5) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => parseFloat(d.proximity)).id(function(d) { return d.id; }))\n                .velocityDecay(0.8)\n  let k = 0;\n  while ((simulation.alpha() > 1e-2) && (k < 150)) {\n      simulation.tick();\n      k = k + 1;\n  }\n\n  let transform = d3.zoomIdentity;\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    let hoveredNode = undefined;\n    let highlightedNode = undefined;\n    let connectedNodes = [];\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();\n        setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          const edges = tempData.edges.filter(({source, target}) => source.id === node.id || target.id === node.id)\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          connectedNodes = [];\n          edges.forEach(({source, target, proximity}) => {\n            allEdgeXValues.push(xScale(source.x));\n            allEdgeXValues.push(xScale(target.x));\n            allEdgeYValues.push(yScale(source.y));\n            allEdgeYValues.push(yScale(target.y));\n            if (source.id !== node.id && !connectedNodes.find(n => n.id === source.id)) {\n              connectedNodes.push({...source, proximity: proximity.toFixed(5)});\n            }\n            if (target.id !== node.id && !connectedNodes.find(n => n.id === target.id)) {\n              connectedNodes.push({...target, proximity: proximity.toFixed(5)});\n            }\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n          connectedNodes = sortBy(connectedNodes, 'proximity').reverse()\n          setNodeList({\n            selected: node,\n            connected: connectedNodes,\n          })\n\n        } else {\n          connectedNodes = [];\n          setNodeList(undefined);\n        }\n        simulationUpdate();\n      })\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      // const hoveredId = hoveredNode && hoveredNode.id ? hoveredNode.id : undefined;\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n      // const linkedEdges = tempData.edges.filter(({source, target}) =>\n      //     source.id === hoveredId || target.id === hoveredId ||\n      //     source.id === highlightedId || target.id === highlightedId)\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // tempData.edges.forEach(function(d) {\n      //   context.beginPath();\n      //   context.moveTo(xScale(d.source.x), yScale(d.source.y));\n      //   context.lineTo(xScale(d.target.x), yScale(d.target.y));\n      //   if (highlightedId) {\n      //     context.strokeStyle = '#f9f9f9';\n      //   } else {\n      //     context.strokeStyle = '#e6e6e6';\n      //   }\n      //   context.stroke();\n      // });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedId === undefined ? d.color : polished.setLightness(0.97, d.color);\n        context.fill();\n      });\n\n      // const linkedNodeIds = [];\n      // linkedEdges.forEach(function(d) {\n      //   if (!linkedNodeIds.includes(({id}) => d.source.id)) {\n      //     linkedNodeIds.push(d.source);\n      //   }\n      //   if (!linkedNodeIds.includes(({id}) => d.target.id)) {\n      //     linkedNodeIds.push(d.target);\n      //   }\n      //   context.beginPath();\n      //   context.moveTo(xScale(d.source.x), yScale(d.source.y));\n      //   context.lineTo(xScale(d.target.x), yScale(d.target.y));\n      //   context.strokeStyle = '#afafaf';\n      //   context.stroke();\n      // });\n\n      // linkedNodeIds.forEach(function(d, i) {\n      //   if (d) {\n      //     context.beginPath();\n      //     context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n      //     context.fillStyle = d.color;\n      //     context.fill();\n      //     context.strokeStyle = '#afafaf';\n      //     context.stroke();\n      //   }\n      // });\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n\n      let nodeCount = 1;\n      connectedNodes.forEach(function(d, i) {\n        if (d) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.color;\n          context.fill();\n          context.strokeStyle = hoveredNode && hoveredNode.id === d.id ? 'black' : '#afafaf';\n          context.stroke();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${d.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(nodeCount++, xScale(d.x), yScale(d.y));\n        }\n      });\n\n      context.restore();\n    }\n    const triggerSimulationUpdate = (node) => {\n      highlightedNode = node;\n      if (node) {\n        const edges = tempData.edges.filter(({source, target}) => source.id === node.id || target.id === node.id)\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        connectedNodes = [];\n        edges.forEach(({source, target, proximity}) => {\n          allEdgeXValues.push(xScale(source.x));\n          allEdgeXValues.push(xScale(target.x));\n          allEdgeYValues.push(yScale(source.y));\n          allEdgeYValues.push(yScale(target.y));\n          if (source.id !== node.id && !connectedNodes.find(n => n.id === source.id)) {\n            connectedNodes.push({...source, proximity: proximity.toFixed(5)});\n          }\n          if (target.id !== node.id && !connectedNodes.find(n => n.id === target.id)) {\n            connectedNodes.push({...target, proximity: proximity.toFixed(5)});\n          }\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n        connectedNodes = sortBy(connectedNodes, 'proximity').reverse()\n        setNodeList({\n          selected: node,\n          connected: connectedNodes,\n        })\n\n      } else {\n        connectedNodes = [];\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      connectedNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  return update;\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [nodeList, setNodeList] = useState(undefined);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null\n\n  return (\n    <div>\n      {tooltip}\n      <div ref={rootNodeRef} />\n      <Table nodes={nodeList} hovered={hovered} updateSimulation={updateSimulation} />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceNetworkNoEdgesWithTable';\nimport Legend from '../components/BasicLegend';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n      <Legend tableLayout={true} />\n    </div>\n  );\n}\n","import React, {useRef, useEffect} from 'react';\nimport styled from 'styled-components';\nimport {rgba} from 'polished';\n\nconst Root = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  width: 450px;\n  padding: 1rem;\n  font-family: 'OfficeCodeProWeb', monospace;\n`;\n\nconst BackButton = styled.button`\n  position: fixed;\n  left: 0;\n  top: 0;\n  background-color: transparent;\n  border: none;\n  font-size: 1rem;\n  font-family: 'OfficeCodeProWeb', monospace;\n  cursor: pointer;\n  padding: 1rem;\n`;\n\nconst Content = styled.div`\n  padding: 1rem;\n  box-sizing: border-box;\n  box-shadow: 1px 2px 5px 0px rgba(0,0,0,0.45);\n  display: grid;\n  grid-template-rows: auto 1fr;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.55);\n`;\n\nconst NodeList = styled.div`\n  margin-top: 1rem;\n  overflow: auto;\n  position: relative;\n`;\n\nconst NodeListItem = styled.div`\n  display: grid;\n  grid-template-columns: 180px 1fr 1fr;\n  font-size: 0.8rem;\n\n  &:hover {\n    ${({$color}) => $color ? 'background-color:' + rgba($color, 0.4) + ';' : ''}\n    cursor: pointer;\n  }\n`;\n\nconst TableTitle = styled(NodeListItem)`\n  border-bottom: solid 1px black;\n  position: sticky;\n  top: 0;\n  background-color: #fff;\n`;\n\nconst Cell = styled.div`\n  padding: 0.5rem;\n  display: flex;\n  align-items: center;\n`;\nconst Rank = styled.strong`\n  margin-right: 0.7rem;\n`;\n\nconst SectorCell = styled(Cell)`\n  border-left: solid 1px #000;\n`;\nconst ProximityCell = styled(Cell)`\n  justify-content: flex-end;\n`;\n\nconst Title = styled.h1`\n  font-size: 1rem;\n  font-weight: 400;\n  margin: 0;\n  display: flex;\n  align-items: center;\n`;\n\nconst Empty = styled(Title)`\n  height: 100%;\n  width: 100%;\n  background-color: rgba(0,0,0,0.04);\n  text-align: center;\n  grid-row: 1 / -1;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Circle = styled.div`\n  border: solid 3px black;\n  border-radius: 400px;\n  width: 0.75rem;\n  height: 0.7rem;\n  margin-right: 0.5rem;\n  flex-shrink: 0;\n`;\n\nconst Label = styled.span`\n  text-transform: uppercase;\n`;\n\nconst Table = (props) => {\n  const {nodes, hovered, updateSimulation} = props;\n  const highlightedRef = useRef(null);\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    if (highlightedRef && highlightedRef.current && containerRef && containerRef.current && hovered !== undefined) {\n      const highlightedNode = highlightedRef.current;\n      const containerNode = containerRef.current;\n      containerNode.scrollTop = highlightedNode.offsetTop - highlightedNode.offsetHeight;\n    }\n  }, [highlightedRef, containerRef, hovered])\n\n  if (nodes) {\n    const {selected, connected} = nodes;\n    const title = selected.label.replace(selected.id, '');\n    const connectedNodes = connected.map((node, i) => {\n      const {id, label, color, parent} = node;\n      const highlight = hovered && hovered.node && hovered.node.id === id;\n      const onClick = () => updateSimulation ? updateSimulation.triggerSimulationUpdate(node) : null;\n      const strength = i < Math.floor((connected.length - 1) / 2) ? 'High' : 'Low';\n      return (\n        <NodeListItem\n          $color={color}\n          style={{backgroundColor: highlight ? rgba(color, 0.4) : undefined}}\n          ref={highlight ? highlightedRef : undefined}\n          onClick={onClick}\n          key={id}\n        >\n          <Cell\n            style={{borderLeft: `5px solid ${color}`}}\n          >\n            <Rank>{String.fromCharCode(64 + (i + 1))}</Rank>\n            <div>{label.replace(id, '')}</div>\n          </Cell>\n          <SectorCell>{parent.name}</SectorCell>\n          <ProximityCell>{strength}</ProximityCell>\n        </NodeListItem>\n      );\n    })\n    const onClear = () => updateSimulation ? updateSimulation.clearSelections() : null;\n    return (\n      <Root>\n        <BackButton onClick={onClear}>{'< Back to Industry Space'}</BackButton>\n        <Content>\n        <Title>\n            <Circle style={{backgroundColor: selected.color}} />\n            <div><Label>Selected industry:</Label> {title}</div>\n          </Title>\n          <NodeList ref={containerRef}>\n            <TableTitle>\n              <Cell>Industry Name</Cell>\n              <SectorCell style={{border: 'none'}}>Sector</SectorCell>\n              <ProximityCell>Relatedness</ProximityCell>\n            </TableTitle>\n            {connectedNodes}\n          </NodeList>\n        </Content>\n      </Root>\n    );\n  } else {\n    return (\n      <Root>\n        <Content>\n          <Empty>Click a node for more details</Empty>\n        </Content>\n      </Root>\n    );\n  }\n}\n\nexport default Table;\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\nimport Table from './StrengthTable';\nimport styled from 'styled-components';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-custom-2.json'));\nconst proximityNodes = JSON.parse(raw('../data/proximity-min-max.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth - 450;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    let radius = Math.random() * 6;\n    radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    // const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {...n, radius, color, parent: current}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.3, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .velocityDecay(0.96)\n  let k = 0;\n  while ((simulation.alpha() > 1e-2) && (k < 150)) {\n      simulation.tick();\n      k = k + 1;\n  }\n\n  let transform = d3.zoomIdentity;\n\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n  let secondaryNodes = [];\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();        \n        setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          primaryNodes = [];\n          secondaryNodes = [];\n          proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n            const node2 = tempData.nodes.find(n => n.id === trg);\n            if (node2) {\n              if (i < Math.floor((proximityNodes[node.id].length - 1) / 2)) {\n                primaryNodes.push({...node2, proximity});\n              } else {\n                secondaryNodes.push({...node2, proximity});\n              }\n            }\n          });\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [node, ...primaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.x));\n            allEdgeYValues.push(yScale(n.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes, ...secondaryNodes],\n          })\n        } else {\n          primaryNodes = [];\n          secondaryNodes = [];\n          setNodeList(undefined);\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedId === undefined ? d.color : polished.rgba(d.color, 0.035);\n        context.fill();\n      });\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n      let nodeCount = 1;\n      if (primaryNodes && primaryNodes.length) {\n        primaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.8);\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${d.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(String.fromCharCode(64 + nodeCount++), xScale(d.x), yScale(d.y));\n        });\n      }\n      if (secondaryNodes && secondaryNodes.length) {\n        secondaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.35);\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${d.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(String.fromCharCode(64 + nodeCount++), xScale(d.x), yScale(d.y));\n        });\n      }\n\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        secondaryNodes = [];\n        proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n          const node2 = tempData.nodes.find(n => n.id === trg);\n          if (node2) {\n            if (i < Math.floor((proximityNodes[node.id].length - 1) / 2)) {\n              primaryNodes.push({...node2, proximity});\n            } else {\n              secondaryNodes.push({...node2, proximity});\n            }\n          }\n        });\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [node, ...primaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.x));\n          allEdgeYValues.push(yScale(n.y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes, ...secondaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      secondaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  setTimeout(() => {\n    update.clearSelections();\n  }, 0)\n\n  return update;\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [nodeList, setNodeList] = useState(undefined);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null\n\n  return (\n    <div>\n      {tooltip}\n      <div ref={rootNodeRef} />\n      <Table nodes={nodeList} hovered={hovered} updateSimulation={updateSimulation} />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapProximityEdgesThresholdWithTableSrength.js';\nimport Legend from '../components/BasicLegend';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n      <Legend tableLayout={true} />\n    </div>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\nimport Table from './StrengthTable';\nimport styled from 'styled-components';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-custom-2.json'));\nconst proximityNodes = JSON.parse(raw('../data/proximity-min-max.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth - 450;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  // const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    // let radius = Math.random() * 6;\n    // radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {...n, radius, color, parent: current}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.3, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .velocityDecay(0.96)\n  let k = 0;\n  while ((simulation.alpha() > 1e-2) && (k < 150)) {\n      simulation.tick();\n      k = k + 1;\n  }\n\n  let transform = d3.zoomIdentity;\n\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n  let secondaryNodes = [];\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();        \n        setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          primaryNodes = [];\n          secondaryNodes = [];\n          proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n            const node2 = tempData.nodes.find(n => n.id === trg);\n            if (node2) {\n              if (i < Math.floor((proximityNodes[node.id].length - 1) / 2)) {\n                primaryNodes.push({...node2, proximity});\n              } else {\n                secondaryNodes.push({...node2, proximity});\n              }\n            }\n          });\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [node, ...primaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.x));\n            allEdgeYValues.push(yScale(n.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes, ...secondaryNodes],\n          })\n        } else {\n          primaryNodes = [];\n          secondaryNodes = [];\n          setNodeList(undefined);\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedId === undefined ? d.color : polished.rgba(d.color, 0.035);\n        context.fill();\n      });\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n      let nodeCount = 1;\n      if (primaryNodes && primaryNodes.length) {\n        primaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.8);\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${d.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(String.fromCharCode(64 + nodeCount++), xScale(d.x), yScale(d.y));\n        });\n      }\n      if (secondaryNodes && secondaryNodes.length) {\n        secondaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.35);\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${d.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(String.fromCharCode(64 + nodeCount++), xScale(d.x), yScale(d.y));\n        });\n      }\n\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        secondaryNodes = [];\n        proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n          const node2 = tempData.nodes.find(n => n.id === trg);\n          if (node2) {\n            if (i < Math.floor((proximityNodes[node.id].length - 1) / 2)) {\n              primaryNodes.push({...node2, proximity});\n            } else {\n              secondaryNodes.push({...node2, proximity});\n            }\n          }\n        });\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [node, ...primaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.x));\n          allEdgeYValues.push(yScale(n.y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes, ...secondaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      secondaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  setTimeout(() => {\n    update.clearSelections();\n  }, 0)\n\n  return update;\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [nodeList, setNodeList] = useState(undefined);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null\n\n  return (\n    <div>\n      {tooltip}\n      <div ref={rootNodeRef} />\n      <Table nodes={nodeList} hovered={hovered} updateSimulation={updateSimulation} />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapProximityEdgesThresholdWithTableSrengthNoNodeSizing';\nimport Legend from '../components/BasicLegend';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n      <Legend tableLayout={true} />\n    </div>\n  );\n}\n","import React, {useRef, useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport {rgba} from 'polished';\nimport PNGLegend1 from '../IS-Legends-01.png';\nimport PNGLegend2 from '../IS-Legends-02.png';\nimport HowToReadPNG from '../IS_how-to-read-04.png';\n\nconst Root = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  width: 450px;\n  padding: 1rem;\n  font-family: 'OfficeCodeProWeb', monospace;\n`;\n\nconst BackButton = styled.button`\n  position: fixed;\n  left: 0;\n  top: 0;\n  background-color: transparent;\n  border: none;\n  font-size: 1rem;\n  font-family: 'OfficeCodeProWeb', monospace;\n  cursor: pointer;\n  padding: 1rem;\n`;\n\nconst HowToReadButton = styled.button`\n  position: fixed;\n  left: 1rem;\n  top: 4rem;\n  background-color: transparent;\n  border: solid 1px #333;\n  font-size: 1rem;\n  font-family: 'OfficeCodeProWeb', monospace;\n  cursor: pointer;\n  padding: 0.5rem;\n`;\n\nconst Content = styled.div`\n  padding: 1rem;\n  box-sizing: border-box;\n  box-shadow: 1px 2px 5px 0px rgba(0,0,0,0.45);\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.55);\n`;\n\nconst NodeList = styled.div`\n  margin-top: 1rem;\n  overflow: auto;\n  position: relative;\n`;\n\nconst NodeListItem = styled.div`\n  display: grid;\n  grid-template-columns: 180px 1fr 1fr;\n  font-size: 0.8rem;\n\n  &:hover {\n    ${({$color}) => $color ? 'background-color:' + rgba($color, 0.4) + ';' : ''}\n    cursor: pointer;\n  }\n`;\n\nconst TableTitle = styled(NodeListItem)`\n  border-bottom: solid 1px black;\n  position: sticky;\n  top: 0;\n  background-color: #fff;\n`;\n\nconst Cell = styled.div`\n  padding: 0.5rem;\n  display: flex;\n  align-items: center;\n`;\nconst Rank = styled.strong`\n  margin-right: 0.7rem;\n`;\n\nconst SectorCell = styled(Cell)`\n  border-left: solid 1px #000;\n`;\nconst ProximityCell = styled(Cell)`\n  justify-content: flex-end;\n`;\n\nconst Title = styled.h1`\n  font-size: 1rem;\n  font-weight: 400;\n  margin: 0;\n  display: flex;\n  align-items: center;\n`;\n\nconst Empty = styled(Title)`\n  height: 100%;\n  width: 100%;\n  text-align: center;\n  grid-row: 1 / -1;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Circle = styled.div`\n  border: solid 3px black;\n  border-radius: 400px;\n  width: 0.75rem;\n  height: 0.7rem;\n  margin-right: 0.5rem;\n  flex-shrink: 0;\n`;\n\nconst Label = styled.span`\n  text-transform: uppercase;\n`;\n\nconst EmptyImage = styled.div`\n  width: 100%;\n  height: 100%;\n  grid-row: 3;\n  grid-column: 1 / -1;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  margin: 2rem 0;\n\n  img {\n    max-width: 100%;\n    margin: auto;\n  }\n`;\n\nconst ModalContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n  padding: 1rem;\n  box-sizing: border-box;\n`;\n\nconst ModalBackdrop = styled.button`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border: none;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nconst ModalContent = styled.div`\n  width: 100%;\n  max-width: 1200px;\n  padding: 1rem;\n  position: relative;\n  background-color: #fff;\n\n  img {\n    max-width: 100%;\n  }\n`;\n\n\nconst CloseButton = styled.button`\n  border: none;\n  padding: 0.8rem;\n  background-color: transparent;\n  color: #999;\n  position: absolute;\n  top: 0;\n  right: 0;\n  cursor: pointer;\n  font-size: 1.2rem\n`;\n\nconst Table = (props) => {\n  const {nodes, hovered, updateSimulation, proximityScale, showToggle} = props;\n  const highlightedRef = useRef(null);\n  const containerRef = useRef(null);\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const modal = modalOpen ? (\n    <ModalContainer>\n      <ModalBackdrop onClick={() => setModalOpen(false)} />\n      <ModalContent>\n        <img src={HowToReadPNG} alt={''} />\n        <CloseButton onClick={() => setModalOpen(false)}>\n          ×\n        </CloseButton>\n      </ModalContent>\n    </ModalContainer>\n  ) : null;\n\n  useEffect(() => {\n    if (highlightedRef && highlightedRef.current && containerRef && containerRef.current && hovered !== undefined) {\n      const highlightedNode = highlightedRef.current;\n      const containerNode = containerRef.current;\n      containerNode.scrollTop = highlightedNode.offsetTop - highlightedNode.offsetHeight;\n    }\n  }, [highlightedRef, containerRef, hovered])\n\n  const imgSrc = showToggle ? PNGLegend2 : PNGLegend1;\n  if (nodes) {\n    const {selected, connected} = nodes;\n    const title = selected.label.replace(selected.id, '');\n    const connectedNodes = connected.map((node, i) => {\n      const {id, label, color, parent, proximity} = node;\n      const highlight = hovered && hovered.node && hovered.node.id === id;\n      const onClick = () => updateSimulation ? updateSimulation.triggerSimulationUpdate(node) : null;\n      const strength = parseFloat(proximityScale(proximity).toFixed(2));\n      return (\n        <NodeListItem\n          $color={color}\n          style={{backgroundColor: highlight ? rgba(color, 0.4) : undefined}}\n          ref={highlight ? highlightedRef : undefined}\n          onClick={onClick}\n          key={id}\n        >\n          <Cell\n            style={{borderLeft: `5px solid ${color}`}}\n          >\n            <Rank>{String.fromCharCode(64 + (i + 1))}</Rank>\n            <div>{label.replace(id, '')}</div>\n          </Cell>\n          <SectorCell>{parent.name}</SectorCell>\n          <ProximityCell>{strength}%</ProximityCell>\n        </NodeListItem>\n      );\n    })\n    const onClear = () => updateSimulation ? updateSimulation.clearSelections() : null;\n    return (\n      <Root>\n        <BackButton onClick={onClear}>{'< Back to Industry Space'}</BackButton>\n        <HowToReadButton onClick={() => setModalOpen(true)}>How to Read</HowToReadButton>\n        <Content>\n          <Title>\n            <Circle style={{backgroundColor: selected.color}} />\n            <div><Label>Selected industry:</Label> {title}</div>\n          </Title>\n          <NodeList ref={containerRef}>\n            <TableTitle>\n              <Cell>Industry Name</Cell>\n              <SectorCell style={{border: 'none'}}>Sector</SectorCell>\n              <ProximityCell>Relatedness</ProximityCell>\n            </TableTitle>\n            {connectedNodes}\n          </NodeList>\n        </Content>\n        {modal}\n      </Root>\n    );\n  } else {\n    return (\n      <Root>\n        <HowToReadButton onClick={() => setModalOpen(true)}>How to Read</HowToReadButton>\n        <Content>\n          <Empty>\n            <EmptyImage><img src={imgSrc} alt={''} /></EmptyImage>\n          </Empty>\n        </Content>\n        {modal}\n      </Root>\n    );\n  }\n}\n\nexport default Table;\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\nimport Table from './PercentTable';\nimport styled from 'styled-components';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-clusters-custom-2.json'));\nconst proximityNodes = JSON.parse(raw('../data/proximity-min-max.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst allProximities = [];\nfor (let node in proximityNodes) {\n  proximityNodes[node].forEach(({proximity}) => allProximities.push(proximity));\n}\nconst proximityRange = d3.extent(allProximities);\nconst proximityScale = d3.scaleLinear()\n    .domain(proximityRange)\n    .range([0, 100]);\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth - 450;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    let radius = Math.random() * 6;\n    radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    // const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    const label = industry6Digit.name;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {...n, radius, color, parent: current, label}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.3, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .velocityDecay(0.96)\n  let k = 0;\n  while ((simulation.alpha() > 1e-2) && (k < 150)) {\n      simulation.tick();\n      k = k + 1;\n  }\n\n  let transform = d3.zoomIdentity;\n\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n  let secondaryNodes = [];\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();        \n        setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          primaryNodes = [];\n          secondaryNodes = [];\n          proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n            const node2 = tempData.nodes.find(n => n.id === trg);\n            if (node2) {\n              if (i < Math.floor((proximityNodes[node.id].length - 1) / 2)) {\n                primaryNodes.push({...node2, proximity});\n              } else {\n                secondaryNodes.push({...node2, proximity});\n              }\n            }\n          });\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [node, ...primaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.x));\n            allEdgeYValues.push(yScale(n.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes, ...secondaryNodes],\n          })\n        } else {\n          primaryNodes = [];\n          secondaryNodes = [];\n          setNodeList(undefined);\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedId === undefined ? d.color : polished.rgba(d.color, 0.035);\n        context.fill();\n      });\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n      let nodeCount = 1;\n      if (primaryNodes && primaryNodes.length) {\n        primaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.8);\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${d.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(String.fromCharCode(64 + nodeCount++), xScale(d.x), yScale(d.y));\n        });\n      }\n      if (secondaryNodes && secondaryNodes.length) {\n        secondaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.35);\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${d.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(String.fromCharCode(64 + nodeCount++), xScale(d.x), yScale(d.y));\n        });\n      }\n\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        secondaryNodes = [];\n        proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n          const node2 = tempData.nodes.find(n => n.id === trg);\n          if (node2) {\n            if (i < Math.floor((proximityNodes[node.id].length - 1) / 2)) {\n              primaryNodes.push({...node2, proximity});\n            } else {\n              secondaryNodes.push({...node2, proximity});\n            }\n          }\n        });\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [node, ...primaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.x));\n          allEdgeYValues.push(yScale(n.y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes, ...secondaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      secondaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  setTimeout(() => {\n    update.clearSelections();\n  }, 0)\n\n  return update;\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [nodeList, setNodeList] = useState(undefined);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null\n\n  return (\n    <div>\n      {tooltip}\n      <div ref={rootNodeRef} />\n      <Table\n        nodes={nodeList}\n        hovered={hovered}\n        updateSimulation={updateSimulation}\n        proximityScale={proximityScale}\n      />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapClustersRaw';\nimport Legend from '../components/BasicLegend';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n      <Legend tableLayout={true} />\n    </div>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\nimport Table from './PercentTable';\nimport styled from 'styled-components';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-clusters-custom-2.json'));\nconst proximityNodes = JSON.parse(raw('../data/proximity-min-max.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst allProximities = [];\nfor (let node in proximityNodes) {\n  proximityNodes[node].forEach(({proximity}) => allProximities.push(proximity));\n}\nconst proximityRange = d3.extent(allProximities);\nconst proximityScale = d3.scaleLinear()\n    .domain(proximityRange)\n    .range([0, 100]);\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth - 450;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  // const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    // let radius = Math.random() * 6;\n    // radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    const label = industry6Digit.name;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {...n, radius, color, parent: current, label}\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.3, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .velocityDecay(0.96)\n  let k = 0;\n  while ((simulation.alpha() > 1e-2) && (k < 150)) {\n      simulation.tick();\n      k = k + 1;\n  }\n\n  let transform = d3.zoomIdentity;\n\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n  let secondaryNodes = [];\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();        \n        setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          primaryNodes = [];\n          secondaryNodes = [];\n          proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n            const node2 = tempData.nodes.find(n => n.id === trg);\n            if (node2) {\n              if (i < Math.floor((proximityNodes[node.id].length - 1) / 2)) {\n                primaryNodes.push({...node2, proximity});\n              } else {\n                secondaryNodes.push({...node2, proximity});\n              }\n            }\n          });\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [node, ...primaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.x));\n            allEdgeYValues.push(yScale(n.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes, ...secondaryNodes],\n          })\n        } else {\n          primaryNodes = [];\n          secondaryNodes = [];\n          setNodeList(undefined);\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedId === undefined ? d.color : polished.rgba(d.color, 0.035);\n        context.fill();\n      });\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n      let nodeCount = 1;\n      if (primaryNodes && primaryNodes.length) {\n        primaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.8);\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${d.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(String.fromCharCode(64 + nodeCount++), xScale(d.x), yScale(d.y));\n        });\n      }\n      if (secondaryNodes && secondaryNodes.length) {\n        secondaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = polished.rgba(d.color, 0.35);\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${d.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(String.fromCharCode(64 + nodeCount++), xScale(d.x), yScale(d.y));\n        });\n      }\n\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        secondaryNodes = [];\n        proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n          const node2 = tempData.nodes.find(n => n.id === trg);\n          if (node2) {\n            if (i < Math.floor((proximityNodes[node.id].length - 1) / 2)) {\n              primaryNodes.push({...node2, proximity});\n            } else {\n              secondaryNodes.push({...node2, proximity});\n            }\n          }\n        });\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [node, ...primaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.x));\n          allEdgeYValues.push(yScale(n.y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes, ...secondaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      secondaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  setTimeout(() => {\n    update.clearSelections();\n  }, 0)\n\n  return update;\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [nodeList, setNodeList] = useState(undefined);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null\n\n  return (\n    <div>\n      {tooltip}\n      <div ref={rootNodeRef} />\n      <Table\n        nodes={nodeList}\n        hovered={hovered}\n        updateSimulation={updateSimulation}\n        proximityScale={proximityScale}\n      />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapClustersRawNoNodeSizing';\nimport Legend from '../components/BasicLegend';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n      <Legend tableLayout={true} />\n    </div>\n  );\n}\n","import React, {useEffect, useState, useRef} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\nimport styled, {keyframes} from 'styled-components';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nconst BackButton = styled.button`\n  position: fixed;\n  left: 0;\n  top: 0;\n  background-color: transparent;\n  border: none;\n  font-size: 1rem;\n  font-family: 'OfficeCodeProWeb', monospace;\n  cursor: pointer;\n  padding: 1rem;\n`;\n\nconst data = JSON.parse(raw('../data/product-space.json'));\nconst chemData = JSON.parse(raw('../data/chemical-space.json'));\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered, codeList) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth;\n\n  // const smallerSize = width < height ? width : height;\n  // const padding = smallerSize * 0.05;\n  // const widthMargin = (width - smallerSize) / 2;\n  // const heightMargin = (height - (smallerSize * 0.9)) / 2;\n\n  const allXValues = [];\n  const allYValues = [];\n  \n  data.nodes = data.nodes.map((n) => {\n    const {x, y} = n;\n    allXValues.push(x);\n    allYValues.push(y);\n    const isIncluded = codeList && codeList.length ? codeList.find(code => code === n.code) : true;\n    return {...n, fill: isIncluded ? n.color : 'white'}\n  });\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    // .range([0 + padding + widthMargin, width - padding - widthMargin]);\n    .range([0 + (width * 0.05), width - (width * 0.05)]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    // .range([ 0 + padding + heightMargin, height - padding - heightMargin]);\n    .range([ 0 + (height * 0.05), height - (height * 0.05)]);\n\n\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(width / 2, height / 2))\n                .force(\"charge\", d3.forceManyBody().strength(-50))\n                .force(\"link\", d3.forceLink().strength(1).id(function(d) { return d.id; }))\n                .alphaDecay(1)\n\n  let transform = d3.zoomIdentity;\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();        \n        setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          primaryNodes = [];\n          const connections = tempData.edges.filter(({target, source}) => target.id === node.id || source.id === node.id);\n          connections.forEach(({target, source}) => {\n            if (!primaryNodes.find(n => n.id === target.id) && node.id !== target.id) {\n              primaryNodes.push(target);\n            }\n            if (!primaryNodes.find(n => n.id === source.id) && node.id !== source.id) {\n              primaryNodes.push(source);\n            }\n          })\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [node, ...primaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.x));\n            allEdgeYValues.push(yScale(n.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / width, dy / height)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes],\n          })\n        } else {\n          primaryNodes = [];\n          setNodeList(undefined);\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n      const linkedEdges = tempData.edges.filter(({source, target}) =>\n          (hoveredNode && (source.id === hoveredNode.id || target.id === hoveredNode.id)) ||\n          source.id === highlightedId || target.id === highlightedId)\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      tempData.edges.forEach(function(d) {\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        context.strokeStyle = hoveredNode && (hoveredNode.id === d.source.id || hoveredNode.id === d.target.id)\n          ? 'rgba(0, 0, 0, 0.5)' : 'rgba(150, 150, 150, 0.4)';\n        context.stroke();\n      });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.lineWidth = 2;\n        context.strokeStyle =  highlightedId === undefined ? '#6d6d6d' : polished.setLightness(0.9, \"#6d6d6d\");\n        context.lineWidth = 2;\n        context.stroke();\n        context.fillStyle = highlightedId === undefined ? d.fill : polished.setLightness(0.9, d.fill);\n        context.fill();\n      });\n\n      const linkedNodeIds = [];\n      linkedEdges.forEach(function(d) {\n        if (!linkedNodeIds.includes(({id}) => d.source.id)) {\n          linkedNodeIds.push(d.source);\n        }\n        if (!linkedNodeIds.includes(({id}) => d.target.id)) {\n          linkedNodeIds.push(d.target);\n        }\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        context.lineWidth = 1;\n        context.strokeStyle = 'rgba(0, 0, 0, 0.5)';\n        context.stroke();\n      });\n\n      linkedNodeIds.forEach(function(d, i) {\n        if (d) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.fill;\n          context.fill();\n          context.lineWidth = 2;\n          context.strokeStyle = '#afafaf';\n          context.stroke();\n        }\n      });\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.fill\n        context.fill();\n        context.lineWidth = 2;\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.fill\n        context.fill();\n        context.lineWidth = 2;\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n      // let nodeCount = 1;\n      if (primaryNodes && primaryNodes.length) {\n        primaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.fill;\n          context.fill();\n          context.lineWidth = 2;\n          context.strokeStyle =  hoveredNode && hoveredNode.id === d.id ? 'black' : '#6d6d6d';\n          context.stroke();\n\n          // context.textAlign = 'center';\n          // context.textBaseline = 'middle';\n          // context.font = `400 ${d.radius}px OfficeCodeProWeb`;\n          // context.fillStyle = \"white\";\n          // context.fillText(nodeCount++, xScale(d.x), yScale(d.y));\n        });\n      }\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        const connections = tempData.edges.filter(({target, source}) => target.id === node.id || source.id === node.id);\n        connections.forEach(({target, source}) => {\n          if (!primaryNodes.find(n => n.id === target.id) && node.id !== target.id) {\n            primaryNodes.push(target);\n          }\n          if (!primaryNodes.find(n => n.id === source.id) && node.id !== source.id) {\n            primaryNodes.push(source);\n          }\n        })\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [node, ...primaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.x));\n          allEdgeYValues.push(yScale(n.y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / width, dy / height)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      chemData.nodes.forEach(n => {\n        const node = data.nodes.find(({id}) => id === n.id);\n        allEdgeXValues.push(xScale(node.x));\n        allEdgeYValues.push(yScale(node.y));\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / width, dy / height)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  setTimeout(() => {\n    update.clearSelections();\n  }, 5)\n\n  return update;\n}\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nconst Root = styled.div`\n  opacity: 0;\n  animation: ${fadeIn} 0.15s linear 1 forwards 0.4s;\n`;\n\nexport default ({codeList}) => {\n  const rootNodeRef = useRef(null);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n  const [nodeList, setNodeList] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered, codeList);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation, codeList]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null;\n\n  const onClear = () => updateSimulation ? updateSimulation.clearSelections() : null;\n  const backButton = nodeList ? (\n    <BackButton onClick={onClear}>{'< Back to Chemical Space'}</BackButton>\n  ) : null;\n\n  return (\n    <Root>\n      {backButton}\n      {tooltip}\n      <div ref={rootNodeRef} />\n    </Root>\n  );\n}\n","import React from 'react'\nimport ChemicalSpace from '../components/ChemicalSpaceHighlighted';\n\nexport default () => {\n  return (\n    <div>\n      <ChemicalSpace />\n    </div>\n  );\n}\n","import React, {useState} from 'react'\nimport ProductSpace from '../components/ChemicalSpaceHighlighted';\nimport styled from 'styled-components';\nimport DownloadSVGURL from './download.svg';\n\nconst UtilityBar = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  z-index: 1000;\n  display: flex;\n  margin: 1rem;\n`;\n\nconst DownloadButton = styled.button`\n  padding: 0.4rem;\n  font-family: OfficeCodeProWeb, monospace;\n  font-size: 1.1rem;\n  cursor: pointer;\n  border: solid 1px #6f6f6f;\n  border-radius: 0;\n  font-size: 0.75rem;\n`;\n\nconst SvgIcon = styled.img`\n  width: 0.9rem;\n  margin-right: 0.3rem;\n`;\n\nconst Modal = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 2000;\n  display: flex;\n  font-family: OfficeCodeProWeb, monospace;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ModalContent = styled.div`\n  padding: 1rem 2rem;\n  border: solid 1px #6f6f6f;\n  border-radius: 8px;\n  background-color: #fff;\n  width: 400px;\n  font-size: 0.85rem;\n  position: relative;\n  box-sizing: border-box;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.4);\n`;\n\nconst CloseButton = styled.button`\n  padding: 0.4rem;\n  font-family: OfficeCodeProWeb, monospace;\n  font-size: 1.1rem;\n  cursor: pointer;\n  border: none;\n  background-color: transparent;\n  border-radius: 0;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst Textarea = styled.textarea`\n  padding: 1rem;\n  border: solid 1px #6f6f6f;\n  border-radius: 8px;\n  width: 100%;\n  height: 500px;\n  font-size: 0.85rem;\n  box-sizing: border-box;\n`;\n\nconst UpdateButton = styled(DownloadButton)`\n  width: 100%;\n  margin-top: 1rem;\n`;\n\nconst downloadImage = () => {\n  var link = document.createElement('a');\n  link.download = `Product-Space-custom.png`;\n  link.href = document.querySelector('canvas').toDataURL()\n  link.click();\n  link.remove();\n};\n\nexport default () => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [codeList, setCodeList] = useState([]);\n  const textAreaRef = React.useRef();\n\n  const updateCodeList = () => {\n    const node = textAreaRef.current;\n    if (node && node.value.length) {\n      const codes = node.value.split('\\n');\n      setCodeList(codes);\n    } else {\n      setCodeList([])\n    }\n    setModalOpen(false);\n  }\n\n  const modal = modalOpen ? (\n    <Modal>\n      <Backdrop onClick={() => setModalOpen(false)} />\n      <ModalContent>\n        <CloseButton onClick={() => setModalOpen(false)}>×</CloseButton>\n        <p>\n          Copy &amp; Paste a series of 6-Digit HS-Codes into the text area below. Each one should be on a seperate line. Leave blank to highlight everything.\n        </p>\n        <Textarea\n          placeholder={\n            'e.g.\\n3910\\n8479\\n3911\\n3707\\n3810\\n8484\\n3403\\n8209\\n8703\\n8412\\n3004\\n2926\\n8524\\n7220\\n3006\\n9031\\n2933'\n          }\n          ref={textAreaRef}\n        />\n        <UpdateButton onClick={updateCodeList}>\n          Update\n        </UpdateButton>\n      </ModalContent>\n    </Modal>\n  ) : null;\n\n  return (\n    <div>\n      <UtilityBar>\n        <DownloadButton style={{marginRight: '1rem'}} onClick={() => setModalOpen(true)}>\n          Set Custom Highlighting\n        </DownloadButton>\n        <DownloadButton onClick={downloadImage}>\n          <SvgIcon src={DownloadSVGURL} alt={'Download PNG'} />\n          Download Image\n        </DownloadButton>\n      </UtilityBar>\n      <ProductSpace key={codeList.join('-')} codeList={codeList} />\n      {modal}\n    </div>\n  );\n}\n","import React, {useEffect, useState, useRef} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\nimport styled, {keyframes} from 'styled-components';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nconst BackButton = styled.button`\n  position: fixed;\n  left: 0;\n  top: 0;\n  background-color: transparent;\n  border: none;\n  font-size: 1rem;\n  font-family: 'OfficeCodeProWeb', monospace;\n  cursor: pointer;\n  padding: 1rem;\n`;\n\nconst data = JSON.parse(raw('../data/product-space.json'));\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth;\n\n  // const smallerSize = width < height ? width : height;\n  // const padding = smallerSize * 0.05;\n  // const widthMargin = (width - smallerSize) / 2;\n  // const heightMargin = (height - (smallerSize * 0.9)) / 2;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    // .range([0 + padding + widthMargin, width - padding - widthMargin]);\n    .range([0 + (width * 0.05), width - (width * 0.05)]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    // .range([ 0 + padding + heightMargin, height - padding - heightMargin]);\n    .range([ 0 + (height * 0.05), height - (height * 0.05)]);\n\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(width / 2, height / 2))\n                .force(\"charge\", d3.forceManyBody().strength(-50))\n                .force(\"link\", d3.forceLink().strength(1).id(function(d) { return d.id; }))\n                .alphaDecay(1)\n\n  let transform = d3.zoomIdentity;\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();        \n        setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          primaryNodes = [];\n          const connections = tempData.edges.filter(({target, source}) => target.id === node.id || source.id === node.id);\n          connections.forEach(({target, source}) => {\n            if (!primaryNodes.find(n => n.id === target.id) && node.id !== target.id) {\n              primaryNodes.push(target);\n            }\n            if (!primaryNodes.find(n => n.id === source.id) && node.id !== source.id) {\n              primaryNodes.push(source);\n            }\n          })\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [node, ...primaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.x));\n            allEdgeYValues.push(yScale(n.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / width, dy / height)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes],\n          })\n        } else {\n          primaryNodes = [];\n          setNodeList(undefined);\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n      const linkedEdges = tempData.edges.filter(({source, target}) =>\n          (hoveredNode && (source.id === hoveredNode.id || target.id === hoveredNode.id)) ||\n          source.id === highlightedId || target.id === highlightedId)\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      tempData.edges.forEach(function(d) {\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        context.strokeStyle = hoveredNode && (hoveredNode.id === d.source.id || hoveredNode.id === d.target.id)\n          ? 'rgba(0, 0, 0, 0.5)' : 'rgba(150, 150, 150, 0.4)';\n        context.stroke();\n      });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.lineWidth = 2;\n        context.strokeStyle =  highlightedId === undefined ? '#6d6d6d' : polished.setLightness(0.9, \"#6d6d6d\");\n        context.lineWidth = 2;\n        context.stroke();\n        context.fillStyle = highlightedId === undefined ? d.color : polished.setLightness(0.9, d.color);\n        context.fill();\n      });\n\n      const linkedNodeIds = [];\n      linkedEdges.forEach(function(d) {\n        if (!linkedNodeIds.includes(({id}) => d.source.id)) {\n          linkedNodeIds.push(d.source);\n        }\n        if (!linkedNodeIds.includes(({id}) => d.target.id)) {\n          linkedNodeIds.push(d.target);\n        }\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        context.lineWidth = 1;\n        context.strokeStyle = 'rgba(0, 0, 0, 0.5)';\n        context.stroke();\n      });\n\n      linkedNodeIds.forEach(function(d, i) {\n        if (d) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.color;\n          context.fill();\n          context.lineWidth = 2;\n          context.strokeStyle = '#afafaf';\n          context.stroke();\n        }\n      });\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.color\n        context.fill();\n        context.lineWidth = 2;\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.lineWidth = 2;\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n      // let nodeCount = 1;\n      if (primaryNodes && primaryNodes.length) {\n        primaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.color;\n          context.fill();\n          context.lineWidth = 2;\n          context.strokeStyle =  hoveredNode && hoveredNode.id === d.id ? 'black' : '#6d6d6d';\n          context.stroke();\n\n          // context.textAlign = 'center';\n          // context.textBaseline = 'middle';\n          // context.font = `400 ${d.radius}px OfficeCodeProWeb`;\n          // context.fillStyle = \"white\";\n          // context.fillText(nodeCount++, xScale(d.x), yScale(d.y));\n        });\n      }\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        const connections = tempData.edges.filter(({target, source}) => target.id === node.id || source.id === node.id);\n        connections.forEach(({target, source}) => {\n          if (!primaryNodes.find(n => n.id === target.id) && node.id !== target.id) {\n            primaryNodes.push(target);\n          }\n          if (!primaryNodes.find(n => n.id === source.id) && node.id !== source.id) {\n            primaryNodes.push(source);\n          }\n        })\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [node, ...primaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.x));\n          allEdgeYValues.push(yScale(n.y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / width, dy / height)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / width, dy / height)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  setTimeout(() => {\n    update.clearSelections();\n  }, 5)\n\n  return update;\n}\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nconst Root = styled.div`\n  opacity: 0;\n  animation: ${fadeIn} 0.15s linear 1 forwards 0.4s;\n`;\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n  const [nodeList, setNodeList] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null;\n\n  const onClear = () => updateSimulation ? updateSimulation.clearSelections() : null;\n  const backButton = nodeList ? (\n    <BackButton onClick={onClear}>{'< Back to Product Space'}</BackButton>\n  ) : null;\n\n  return (\n    <Root>\n      {backButton}\n      {tooltip}\n      <div ref={rootNodeRef} />\n    </Root>\n  );\n}\n","import React from 'react'\nimport ProductSpace from '../components/ProductSpaceBasic';\n\nexport default () => {\n  return (\n    <div>\n      <ProductSpace />\n    </div>\n  );\n}\n","import React, {useEffect, useState, useRef} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\nimport styled, {keyframes} from 'styled-components';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nconst BackButton = styled.button`\n  position: fixed;\n  left: 0;\n  top: 0;\n  background-color: transparent;\n  border: none;\n  font-size: 1rem;\n  font-family: 'OfficeCodeProWeb', monospace;\n  cursor: pointer;\n  padding: 1rem;\n`;\n\nconst data = JSON.parse(raw('../data/product-space.json'));\nconst highlightNodes = JSON.parse(raw('../data/product-space-saudi-nodes.json'));\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered, keyName) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth;\n\n  // const smallerSize = width < height ? width : height;\n  // const padding = smallerSize * 0.05;\n  // const widthMargin = (width - smallerSize) / 2;\n  // const heightMargin = (height - (smallerSize * 0.9)) / 2;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes = data.nodes.map((n) => {\n    const {x, y} = n;\n    allXValues.push(x);\n    allYValues.push(y);\n    const isIncluded = keyName ? highlightNodes[keyName].find(code => code === n.code) : true;\n    return {...n, fill: isIncluded ? n.color : 'white'}\n  });\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    // .range([0 + padding + widthMargin, width - padding - widthMargin]);\n    .range([0 + (width * 0.05), width - (width * 0.05)]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    // .range([ 0 + padding + heightMargin, height - padding - heightMargin]);\n    .range([ 0 + (height * 0.05), height - (height * 0.05)]);\n\n\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(width / 2, height / 2))\n                .force(\"charge\", d3.forceManyBody().strength(-50))\n                .force(\"link\", d3.forceLink().strength(1).id(function(d) { return d.id; }))\n                .alphaDecay(1)\n\n  let transform = d3.zoomIdentity;\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();        \n        setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          primaryNodes = [];\n          const connections = tempData.edges.filter(({target, source}) => target.id === node.id || source.id === node.id);\n          connections.forEach(({target, source}) => {\n            if (!primaryNodes.find(n => n.id === target.id) && node.id !== target.id) {\n              primaryNodes.push(target);\n            }\n            if (!primaryNodes.find(n => n.id === source.id) && node.id !== source.id) {\n              primaryNodes.push(source);\n            }\n          })\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [node, ...primaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.x));\n            allEdgeYValues.push(yScale(n.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / width, dy / height)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes],\n          })\n        } else {\n          primaryNodes = [];\n          setNodeList(undefined);\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n      const linkedEdges = tempData.edges.filter(({source, target}) =>\n          (hoveredNode && (source.id === hoveredNode.id || target.id === hoveredNode.id)) ||\n          source.id === highlightedId || target.id === highlightedId)\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      tempData.edges.forEach(function(d) {\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        context.strokeStyle = hoveredNode && (hoveredNode.id === d.source.id || hoveredNode.id === d.target.id)\n          ? 'rgba(0, 0, 0, 0.5)' : 'rgba(150, 150, 150, 0.4)';\n        context.stroke();\n      });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.lineWidth = 2;\n        context.strokeStyle =  highlightedId === undefined ? '#6d6d6d' : polished.setLightness(0.9, \"#6d6d6d\");\n        context.lineWidth = 2;\n        context.stroke();\n        context.fillStyle = highlightedId === undefined ? d.fill : polished.setLightness(0.9, d.fill);\n        context.fill();\n      });\n\n      const linkedNodeIds = [];\n      linkedEdges.forEach(function(d) {\n        if (!linkedNodeIds.includes(({id}) => d.source.id)) {\n          linkedNodeIds.push(d.source);\n        }\n        if (!linkedNodeIds.includes(({id}) => d.target.id)) {\n          linkedNodeIds.push(d.target);\n        }\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        context.lineWidth = 1;\n        context.strokeStyle = 'rgba(0, 0, 0, 0.5)';\n        context.stroke();\n      });\n\n      linkedNodeIds.forEach(function(d, i) {\n        if (d) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.fill;\n          context.fill();\n          context.lineWidth = 2;\n          context.strokeStyle = '#afafaf';\n          context.stroke();\n        }\n      });\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.fill\n        context.fill();\n        context.lineWidth = 2;\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.fill\n        context.fill();\n        context.lineWidth = 2;\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n      // let nodeCount = 1;\n      if (primaryNodes && primaryNodes.length) {\n        primaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.fill;\n          context.fill();\n          context.lineWidth = 2;\n          context.strokeStyle =  hoveredNode && hoveredNode.id === d.id ? 'black' : '#6d6d6d';\n          context.stroke();\n\n          // context.textAlign = 'center';\n          // context.textBaseline = 'middle';\n          // context.font = `400 ${d.radius}px OfficeCodeProWeb`;\n          // context.fillStyle = \"white\";\n          // context.fillText(nodeCount++, xScale(d.x), yScale(d.y));\n        });\n      }\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        const connections = tempData.edges.filter(({target, source}) => target.id === node.id || source.id === node.id);\n        connections.forEach(({target, source}) => {\n          if (!primaryNodes.find(n => n.id === target.id) && node.id !== target.id) {\n            primaryNodes.push(target);\n          }\n          if (!primaryNodes.find(n => n.id === source.id) && node.id !== source.id) {\n            primaryNodes.push(source);\n          }\n        })\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [node, ...primaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.x));\n          allEdgeYValues.push(yScale(n.y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / width, dy / height)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / width, dy / height)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  setTimeout(() => {\n    update.clearSelections();\n  }, 5)\n\n  return update;\n}\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nconst Root = styled.div`\n  opacity: 0;\n  animation: ${fadeIn} 0.15s linear 1 forwards 0.4s;\n`;\n\nexport default ({keyName}) => {\n  const rootNodeRef = useRef(null);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n  const [nodeList, setNodeList] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered, keyName);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation, keyName]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null;\n\n  const onClear = () => updateSimulation ? updateSimulation.clearSelections() : null;\n  const backButton = nodeList ? (\n    <BackButton onClick={onClear}>{'< Back to Product Space'}</BackButton>\n  ) : null;\n\n  return (\n    <Root>\n      {backButton}\n      {tooltip}\n      <div ref={rootNodeRef} />\n    </Root>\n  );\n}\n","import React, {useState} from 'react'\nimport ProductSpace from '../components/ProductSpaceSaudiHighlighted';\nimport styled from 'styled-components';\nimport DownloadSVGURL from './download.svg';\n\nconst UtilityBar = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  z-index: 1000;\n  display: flex;\n  margin: 1rem;\n`;\n\nconst Select = styled.select`\n  margin-right: 1rem;\n  padding: 0.4rem;\n  font-family: OfficeCodeProWeb, monospace;\n  font-size: 1.1rem;\n  cursor: pointer;\n  border: solid 1px #6f6f6f;\n  border-radius: 0;\n  font-size: 0.75rem;\n`;\n\nconst DownloadButton = styled.button`\n  padding: 0.4rem;\n  font-family: OfficeCodeProWeb, monospace;\n  font-size: 1.1rem;\n  cursor: pointer;\n  border: solid 1px #6f6f6f;\n  border-radius: 0;\n  font-size: 0.75rem;\n`;\n\nconst SvgIcon = styled.img`\n  width: 0.9rem;\n  margin-right: 0.3rem;\n`;\n\nconst downloadImage = (keyName) => {\n  var link = document.createElement('a');\n  link.download = `Product-Space-${keyName}.png`;\n  link.href = document.querySelector('canvas').toDataURL()\n  link.click();\n  link.remove();\n};\n\nexport default () => {\n  const [keyName, setKeyName] = useState('all');\n\n  return (\n    <div>\n      <UtilityBar>\n        <Select value={keyName} onChange={(e) => setKeyName(e.target.value)}>\n          <option value='all'>All Nodes</option>\n          <option value='atlas'>Atlas</option>\n          <option value='adjacent'>Adjacent</option>\n          <option value='strategic'>Strategic</option>\n          <option value='overlapping_strategy'>Overlapping Strategy</option>\n          <option value='combined'>Combined</option>\n        </Select>\n        <DownloadButton onClick={() => downloadImage(keyName)}>\n          <SvgIcon src={DownloadSVGURL} alt={'Download PNG'} />\n          Download Image\n        </DownloadButton>\n      </UtilityBar>\n      <ProductSpace key={keyName} keyName={keyName === 'all' ? undefined : keyName} />\n    </div>\n  );\n}\n","import React, {useEffect, useState, useRef} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport * as polished from 'polished';\nimport styled, {keyframes} from 'styled-components';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nconst BackButton = styled.button`\n  position: fixed;\n  left: 0;\n  top: 0;\n  background-color: transparent;\n  border: none;\n  font-size: 1rem;\n  font-family: 'OfficeCodeProWeb', monospace;\n  cursor: pointer;\n  padding: 1rem;\n`;\n\nconst data = JSON.parse(raw('../data/product-space.json'));\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered, codeList) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth;\n\n  // const smallerSize = width < height ? width : height;\n  // const padding = smallerSize * 0.05;\n  // const widthMargin = (width - smallerSize) / 2;\n  // const heightMargin = (height - (smallerSize * 0.9)) / 2;\n\n  const allXValues = [];\n  const allYValues = [];\n  \n  data.nodes = data.nodes.map((n) => {\n    const {x, y} = n;\n    allXValues.push(x);\n    allYValues.push(y);\n    const isIncluded = codeList && codeList.length ? codeList.find(code => code === n.code) : true;\n    return {...n, fill: isIncluded ? n.color : 'white'}\n  });\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    // .range([0 + padding + widthMargin, width - padding - widthMargin]);\n    .range([0 + (width * 0.05), width - (width * 0.05)]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    // .range([ 0 + padding + heightMargin, height - padding - heightMargin]);\n    .range([ 0 + (height * 0.05), height - (height * 0.05)]);\n\n\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(width / 2, height / 2))\n                .force(\"charge\", d3.forceManyBody().strength(-50))\n                .force(\"link\", d3.forceLink().strength(1).id(function(d) { return d.id; }))\n                .alphaDecay(1)\n\n  let transform = d3.zoomIdentity;\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n    \n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        hoveredNode = dragsubject();        \n        setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n        simulationUpdate();\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        highlightedNode = node;\n        if (node) {\n          primaryNodes = [];\n          const connections = tempData.edges.filter(({target, source}) => target.id === node.id || source.id === node.id);\n          connections.forEach(({target, source}) => {\n            if (!primaryNodes.find(n => n.id === target.id) && node.id !== target.id) {\n              primaryNodes.push(target);\n            }\n            if (!primaryNodes.find(n => n.id === source.id) && node.id !== source.id) {\n              primaryNodes.push(source);\n            }\n          })\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [node, ...primaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.x));\n            allEdgeYValues.push(yScale(n.y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / width, dy / height)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes],\n          })\n        } else {\n          primaryNodes = [];\n          setNodeList(undefined);\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          return node;\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n      const linkedEdges = tempData.edges.filter(({source, target}) =>\n          (hoveredNode && (source.id === hoveredNode.id || target.id === hoveredNode.id)) ||\n          source.id === highlightedId || target.id === highlightedId)\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      tempData.edges.forEach(function(d) {\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        context.strokeStyle = hoveredNode && (hoveredNode.id === d.source.id || hoveredNode.id === d.target.id)\n          ? 'rgba(0, 0, 0, 0.5)' : 'rgba(150, 150, 150, 0.4)';\n        context.stroke();\n      });\n\n      // Draw the nodes\n      tempData.nodes.forEach(function(d, i) {\n        context.beginPath();\n        context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        context.lineWidth = 2;\n        context.strokeStyle =  highlightedId === undefined ? '#6d6d6d' : polished.setLightness(0.9, \"#6d6d6d\");\n        context.lineWidth = 2;\n        context.stroke();\n        context.fillStyle = highlightedId === undefined ? d.fill : polished.setLightness(0.9, d.fill);\n        context.fill();\n      });\n\n      const linkedNodeIds = [];\n      linkedEdges.forEach(function(d) {\n        if (!linkedNodeIds.includes(({id}) => d.source.id)) {\n          linkedNodeIds.push(d.source);\n        }\n        if (!linkedNodeIds.includes(({id}) => d.target.id)) {\n          linkedNodeIds.push(d.target);\n        }\n        context.beginPath();\n        context.moveTo(xScale(d.source.x), yScale(d.source.y));\n        context.lineTo(xScale(d.target.x), yScale(d.target.y));\n        context.lineWidth = 1;\n        context.strokeStyle = 'rgba(0, 0, 0, 0.5)';\n        context.stroke();\n      });\n\n      linkedNodeIds.forEach(function(d, i) {\n        if (d) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.fill;\n          context.fill();\n          context.lineWidth = 2;\n          context.strokeStyle = '#afafaf';\n          context.stroke();\n        }\n      });\n\n      if (hoveredNode) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = hoveredNode.fill\n        context.fill();\n        context.lineWidth = 2;\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.fill\n        context.fill();\n        context.lineWidth = 2;\n        context.strokeStyle = 'black';\n        context.stroke();\n      }\n      // let nodeCount = 1;\n      if (primaryNodes && primaryNodes.length) {\n        primaryNodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.fill;\n          context.fill();\n          context.lineWidth = 2;\n          context.strokeStyle =  hoveredNode && hoveredNode.id === d.id ? 'black' : '#6d6d6d';\n          context.stroke();\n\n          // context.textAlign = 'center';\n          // context.textBaseline = 'middle';\n          // context.font = `400 ${d.radius}px OfficeCodeProWeb`;\n          // context.fillStyle = \"white\";\n          // context.fillText(nodeCount++, xScale(d.x), yScale(d.y));\n        });\n      }\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        const connections = tempData.edges.filter(({target, source}) => target.id === node.id || source.id === node.id);\n        connections.forEach(({target, source}) => {\n          if (!primaryNodes.find(n => n.id === target.id) && node.id !== target.id) {\n            primaryNodes.push(target);\n          }\n          if (!primaryNodes.find(n => n.id === source.id) && node.id !== source.id) {\n            primaryNodes.push(source);\n          }\n        })\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [node, ...primaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.x));\n          allEdgeYValues.push(yScale(n.y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / width, dy / height)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / width, dy / height)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  setTimeout(() => {\n    update.clearSelections();\n  }, 5)\n\n  return update;\n}\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nconst Root = styled.div`\n  opacity: 0;\n  animation: ${fadeIn} 0.15s linear 1 forwards 0.4s;\n`;\n\nexport default ({codeList}) => {\n  const rootNodeRef = useRef(null);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n  const [nodeList, setNodeList] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered, codeList);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation, codeList]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null;\n\n  const onClear = () => updateSimulation ? updateSimulation.clearSelections() : null;\n  const backButton = nodeList ? (\n    <BackButton onClick={onClear}>{'< Back to Product Space'}</BackButton>\n  ) : null;\n\n  return (\n    <Root>\n      {backButton}\n      {tooltip}\n      <div ref={rootNodeRef} />\n    </Root>\n  );\n}\n","import React, {useState} from 'react'\nimport ProductSpace from '../components/ProductSpaceHighlighted';\nimport styled from 'styled-components';\nimport DownloadSVGURL from './download.svg';\n\nconst UtilityBar = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  z-index: 1000;\n  display: flex;\n  margin: 1rem;\n`;\n\nconst DownloadButton = styled.button`\n  padding: 0.4rem;\n  font-family: OfficeCodeProWeb, monospace;\n  font-size: 1.1rem;\n  cursor: pointer;\n  border: solid 1px #6f6f6f;\n  border-radius: 0;\n  font-size: 0.75rem;\n`;\n\nconst SvgIcon = styled.img`\n  width: 0.9rem;\n  margin-right: 0.3rem;\n`;\n\nconst Modal = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 2000;\n  display: flex;\n  font-family: OfficeCodeProWeb, monospace;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ModalContent = styled.div`\n  padding: 1rem 2rem;\n  border: solid 1px #6f6f6f;\n  border-radius: 8px;\n  background-color: #fff;\n  width: 400px;\n  font-size: 0.85rem;\n  position: relative;\n  box-sizing: border-box;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.4);\n`;\n\nconst CloseButton = styled.button`\n  padding: 0.4rem;\n  font-family: OfficeCodeProWeb, monospace;\n  font-size: 1.1rem;\n  cursor: pointer;\n  border: none;\n  background-color: transparent;\n  border-radius: 0;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst Textarea = styled.textarea`\n  padding: 1rem;\n  border: solid 1px #6f6f6f;\n  border-radius: 8px;\n  width: 100%;\n  height: 500px;\n  font-size: 0.85rem;\n  box-sizing: border-box;\n`;\n\nconst UpdateButton = styled(DownloadButton)`\n  width: 100%;\n  margin-top: 1rem;\n`;\n\nconst downloadImage = () => {\n  var link = document.createElement('a');\n  link.download = `Product-Space-custom.png`;\n  link.href = document.querySelector('canvas').toDataURL()\n  link.click();\n  link.remove();\n};\n\nexport default () => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [codeList, setCodeList] = useState([]);\n  const textAreaRef = React.useRef();\n\n  const updateCodeList = () => {\n    const node = textAreaRef.current;\n    if (node && node.value.length) {\n      const codes = node.value.split('\\n');\n      setCodeList(codes);\n    } else {\n      setCodeList([])\n    }\n    setModalOpen(false);\n  }\n\n  const modal = modalOpen ? (\n    <Modal>\n      <Backdrop onClick={() => setModalOpen(false)} />\n      <ModalContent>\n        <CloseButton onClick={() => setModalOpen(false)}>×</CloseButton>\n        <p>\n          Copy &amp; Paste a series of 6-Digit HS-Codes into the text area below. Each one should be on a seperate line. Leave blank to highlight everything.\n        </p>\n        <Textarea\n          placeholder={\n            'e.g.\\n3910\\n8479\\n3911\\n3707\\n3810\\n8484\\n3403\\n8209\\n8703\\n8412\\n3004\\n2926\\n8524\\n7220\\n3006\\n9031\\n2933'\n          }\n          ref={textAreaRef}\n        />\n        <UpdateButton onClick={updateCodeList}>\n          Update\n        </UpdateButton>\n      </ModalContent>\n    </Modal>\n  ) : null;\n\n  return (\n    <div>\n      <UtilityBar>\n        <DownloadButton style={{marginRight: '1rem'}} onClick={() => setModalOpen(true)}>\n          Set Custom Highlighting\n        </DownloadButton>\n        <DownloadButton onClick={downloadImage}>\n          <SvgIcon src={DownloadSVGURL} alt={'Download PNG'} />\n          Download Image\n        </DownloadButton>\n      </UtilityBar>\n      <ProductSpace key={codeList.join('-')} codeList={codeList} />\n      {modal}\n    </div>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport Table from './PercentTable';\nimport styled from 'styled-components';\nimport {interval} from 'd3-timer';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nfunction getLines(ctx, text, maxWidth) {\n    var words = text.split(\" \");\n    var lines = [];\n    var currentLine = words[0];\n\n    for (var i = 1; i < words.length; i++) {\n        var word = words[i];\n        var width = ctx.measureText(currentLine + \" \" + word).width;\n        if (width < maxWidth) {\n            currentLine += \" \" + word;\n        } else {\n            lines.push(currentLine);\n            currentLine = word;\n        }\n    }\n    lines.push(currentLine);\n    return lines;\n}\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-clusters-custom-2.json'));\nconst proximityNodes = JSON.parse(raw('../data/proximity-min-max.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst allProximities = [];\nfor (let node in proximityNodes) {\n  proximityNodes[node].forEach(({proximity}) => allProximities.push(proximity));\n}\nconst proximityRange = d3.extent(allProximities);\nconst proximityScale = d3.scaleLinear()\n    .domain(proximityRange)\n    .range([0, 100]);\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth - 450;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  // const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    // let radius = Math.random() * 6;\n    // radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    const label = industry6Digit.name;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {\n      ...n,\n      radius,\n      color,\n      parent: current,\n      label,\n      initial_x: n.x,\n      initial_y: n.y,\n    }\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.3, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .alphaDecay(0.99)\n\n  let transform = d3.zoomIdentity;\n\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n  let secondaryNodes = [];\n  let shouldTick = false;\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    function drawPoint(r, currentPoint, totalPoints, centerX, centerY) {  \n\n      var theta = ((Math.PI*2) / totalPoints);\n      var angle = (theta * currentPoint);\n\n      const x = (r * Math.cos(angle) + centerX);\n      const y = (r * Math.sin(angle) + centerY);\n\n      return {x, y};\n    }\n\n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        if (!shouldTick) {\n          hoveredNode = dragsubject();\n          setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n          simulationUpdate();\n        }\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        if (node) {\n          highlightedNode = node;\n          primaryNodes = [];\n          secondaryNodes = [];\n          proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n            const node2 = tempData.nodes.find(n => n.id === trg);\n            if (node2) {\n              const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n              const numSecondary = proximityNodes[node.id].length - numPrimary;\n              if (i < numPrimary) {\n                const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                primaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              } else {\n                const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                secondaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              }\n            }\n          });\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.new_x));\n            allEdgeYValues.push(yScale(n.new_y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale))\n\n          const t = interval(function(elapsed) {\n            shouldTick = false;\n            [...primaryNodes, ...secondaryNodes].forEach(n => {\n              const currentNode = tempData.nodes.find(d => d.id === n.id);\n              if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n                currentNode.x = currentNode.new_x;\n              } else {\n                shouldTick = true;\n                currentNode.x = currentNode.x > currentNode.new_x\n                  ? currentNode.x - currentNode.x_interval\n                  : currentNode.x + currentNode.x_interval;\n              }\n              if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n                currentNode.y = currentNode.new_y;\n              } else {\n                shouldTick = true;\n                currentNode.y = currentNode.y > currentNode.new_y\n                  ? currentNode.y - currentNode.y_interval\n                  : currentNode.y + currentNode.y_interval;\n              }\n            });\n            simulationUpdate();\n            if (!shouldTick || elapsed > 350) {\n              t.stop()\n            };\n          }, 10);\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes, ...secondaryNodes],\n          })\n          setHovered({node: undefined, coords: {x: d3.event.x, y: d3.event.y}});\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          if ((!primaryNodes.length && !secondaryNodes.length) ||\n                primaryNodes.find(n => n.id === node.id) ||\n                secondaryNodes.find(n => n.id === node.id)) {\n\n            return node;\n          }\n\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // Draw the nodes\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          20 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.strokeStyle = '#dfdfdf';\n        context.lineWidth = 0.2;\n        context.stroke();\n\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          40 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.stroke();\n\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n\n\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = \"#000\";\n        context.font = `400 1.3px OfficeCodeProWeb`;\n        getLines(context, highlightedNode.label, 15).reverse().forEach((t, i) => {\n          context.fillText(t, xScale(highlightedNode.x), yScale(highlightedNode.y) - (2 * (i + 2)));\n        });\n      }\n      let nodeCount = 1;\n      if (!primaryNodes.length && !secondaryNodes.length) {\n        tempData.nodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.color;\n          context.fill();\n        });\n      } else {\n        [...primaryNodes, ...secondaryNodes].forEach(function(d, i) {\n          const node = tempData.nodes.find(n => n.id === d.id);\n          context.beginPath();\n          context.arc(xScale(node.x), yScale(node.y), node.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = node.color;\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${node.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(String.fromCharCode(64 + nodeCount++), xScale(node.x), yScale(node.y));\n\n\n          if (!hoveredNode || hoveredNode.id !== d.id) {\n            context.fillStyle = \"#000\";\n            context.font = `400 1.3px OfficeCodeProWeb`;\n            const shortenedLabel = d.label.length <= 30 ? d.label : d.label.slice(0, 30) + '...'\n            getLines(context, shortenedLabel, 15).reverse().forEach((t, i) => {\n              context.fillText(t, xScale(node.x), yScale(node.y) - (2 * (i + 2)));\n            });\n          }\n        });\n      }\n\n      if (hoveredNode && hoveredNode.id !== highlightedId) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        secondaryNodes = [];\n        proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n          const node2 = tempData.nodes.find(n => n.id === trg);\n          if (node2) {\n            const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n            const numSecondary = proximityNodes[node.id].length - numPrimary;\n            if (i < numPrimary) {\n              const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              primaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            } else {\n              const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              secondaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            }\n          }\n        });\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [...primaryNodes, ...secondaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.new_x));\n          allEdgeYValues.push(yScale(n.new_y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        const t = interval(function(elapsed) {\n          shouldTick = false;\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            const currentNode = tempData.nodes.find(d => d.id === n.id);\n            if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n              currentNode.x = currentNode.new_x;\n            } else {\n              shouldTick = true;\n              currentNode.x = currentNode.x > currentNode.new_x\n                ? currentNode.x - currentNode.x_interval\n                : currentNode.x + currentNode.x_interval;\n            }\n            if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n              currentNode.y = currentNode.new_y;\n            } else {\n              shouldTick = true;\n              currentNode.y = currentNode.y > currentNode.new_y\n                ? currentNode.y - currentNode.y_interval\n                : currentNode.y + currentNode.y_interval;\n            }\n          });\n          simulationUpdate();\n          if (!shouldTick || elapsed > 350) {\n            t.stop()\n          };\n        }, 10);\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes, ...secondaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n        n.x = n.initial_x;\n        n.y = n.initial_y;\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      secondaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  setTimeout(() => {\n    update.clearSelections();\n  }, 0)\n\n  return update;\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [nodeList, setNodeList] = useState(undefined);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null\n\n  return (\n    <div>\n      {tooltip}\n      <div ref={rootNodeRef} />\n      <Table\n        nodes={nodeList}\n        hovered={hovered}\n        updateSimulation={updateSimulation}\n        proximityScale={proximityScale}\n      />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapClustersRings';\nimport Legend from '../components/BasicLegend';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n      <Legend tableLayout={true} />\n    </div>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport Table from './PercentTable';\nimport styled from 'styled-components';\nimport {interval} from 'd3-timer';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nfunction getLines(ctx, text, maxWidth) {\n    var words = text.split(\" \");\n    var lines = [];\n    var currentLine = words[0];\n\n    for (var i = 1; i < words.length; i++) {\n        var word = words[i];\n        var width = ctx.measureText(currentLine + \" \" + word).width;\n        if (width < maxWidth) {\n            currentLine += \" \" + word;\n        } else {\n            lines.push(currentLine);\n            currentLine = word;\n        }\n    }\n    lines.push(currentLine);\n    return lines;\n}\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-clusters-custom-2.json'));\nconst proximityNodes = JSON.parse(raw('../data/proximity-min-max.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst allProximities = [];\nfor (let node in proximityNodes) {\n  proximityNodes[node].forEach(({proximity}) => allProximities.push(proximity));\n}\nconst proximityRange = d3.extent(allProximities);\nconst proximityScale = d3.scaleLinear()\n    .domain(proximityRange)\n    .range([0, 100]);\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth - 450;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  // const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    // let radius = Math.random() * 6;\n    // radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    const label = industry6Digit.name;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {\n      ...n,\n      radius,\n      color,\n      parent: current,\n      label,\n      initial_x: n.x,\n      initial_y: n.y,\n    }\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.3, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .alphaDecay(0.99)\n\n  let transform = d3.zoomIdentity;\n\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n  let secondaryNodes = [];\n  let shouldTick = false;\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    function drawPoint(r, currentPoint, totalPoints, centerX, centerY) {  \n\n      var theta = ((Math.PI*2) / totalPoints);\n      var angle = (theta * currentPoint);\n\n      const x = (r * Math.cos(angle) + centerX);\n      const y = (r * Math.sin(angle) + centerY);\n\n      return {x, y};\n    }\n\n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        if (!shouldTick) {\n          hoveredNode = dragsubject();\n          setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n          simulationUpdate();\n        }\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        if (node) {\n          highlightedNode = node;\n          primaryNodes = [];\n          secondaryNodes = [];\n          proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n            const node2 = tempData.nodes.find(n => n.id === trg);\n            if (node2) {\n              const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n              const numSecondary = proximityNodes[node.id].length - numPrimary;\n              if (i < numPrimary) {\n                const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                primaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              } else {\n                const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                secondaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              }\n            }\n          });\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.new_x));\n            allEdgeYValues.push(yScale(n.new_y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale))\n\n          const t = interval(function(elapsed) {\n            shouldTick = false;\n            [...primaryNodes, ...secondaryNodes].forEach(n => {\n              const currentNode = tempData.nodes.find(d => d.id === n.id);\n              if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n                currentNode.x = currentNode.new_x;\n              } else {\n                shouldTick = true;\n                currentNode.x = currentNode.x > currentNode.new_x\n                  ? currentNode.x - currentNode.x_interval\n                  : currentNode.x + currentNode.x_interval;\n              }\n              if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n                currentNode.y = currentNode.new_y;\n              } else {\n                shouldTick = true;\n                currentNode.y = currentNode.y > currentNode.new_y\n                  ? currentNode.y - currentNode.y_interval\n                  : currentNode.y + currentNode.y_interval;\n              }\n            });\n            simulationUpdate();\n            if (!shouldTick || elapsed > 350) {\n              t.stop()\n            };\n          }, 10);\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes, ...secondaryNodes],\n          })\n          setHovered({node: undefined, coords: {x: d3.event.x, y: d3.event.y}});\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          if ((!primaryNodes.length && !secondaryNodes.length) ||\n                primaryNodes.find(n => n.id === node.id) ||\n                secondaryNodes.find(n => n.id === node.id)) {\n\n            return node;\n          }\n\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // Draw the nodes\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          20 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.strokeStyle = '#dfdfdf';\n        context.lineWidth = 0.2;\n        context.stroke();\n\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          40 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.stroke();\n\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n\n\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = \"#000\";\n        context.font = `400 1.3px OfficeCodeProWeb`;\n        getLines(context, highlightedNode.label, 15).reverse().forEach((t, i) => {\n          context.fillText(t, xScale(highlightedNode.x), yScale(highlightedNode.y) - (2 * (i + 2)));\n        });\n      }\n      let nodeCount = 1;\n      if (!primaryNodes.length && !secondaryNodes.length) {\n        tempData.nodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.color;\n          context.fill();\n        });\n\n        if (hoveredNode) {\n          const linkedNodes = [hoveredNode];\n          proximityNodes[hoveredNode.id].forEach(function({trg}) {\n            const targetNode = tempData.nodes.find(({id}) => id === trg);\n            context.beginPath();\n            context.moveTo(xScale(hoveredNode.x), yScale(hoveredNode.y));\n            context.lineTo(xScale(targetNode.x), yScale(targetNode.y));\n            context.strokeStyle = '#afafaf';\n            context.stroke();\n            linkedNodes.push(targetNode);\n          });\n\n          linkedNodes.forEach(function(d, i) {\n            if (d) {\n              context.beginPath();\n              context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n              context.fillStyle = d.color;\n              context.fill();\n              context.strokeStyle = '#afafaf';\n              context.stroke();\n            }\n          });\n        }\n      } else {\n        [...primaryNodes, ...secondaryNodes].forEach(function(d, i) {\n          const node = tempData.nodes.find(n => n.id === d.id);\n          context.beginPath();\n          context.arc(xScale(node.x), yScale(node.y), node.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = node.color;\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${node.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(String.fromCharCode(64 + nodeCount++), xScale(node.x), yScale(node.y));\n\n\n          if (!hoveredNode || hoveredNode.id !== d.id) {\n            context.fillStyle = \"#000\";\n            context.font = `400 1.3px OfficeCodeProWeb`;\n            const shortenedLabel = d.label.length <= 30 ? d.label : d.label.slice(0, 30) + '...'\n            getLines(context, shortenedLabel, 15).reverse().forEach((t, i) => {\n              context.fillText(t, xScale(node.x), yScale(node.y) - (2 * (i + 2)));\n            });\n          }\n        });\n      }\n\n      if (hoveredNode && hoveredNode.id !== highlightedId) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        secondaryNodes = [];\n        proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n          const node2 = tempData.nodes.find(n => n.id === trg);\n          if (node2) {\n            const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n            const numSecondary = proximityNodes[node.id].length - numPrimary;\n            if (i < numPrimary) {\n              const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              primaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            } else {\n              const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              secondaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            }\n          }\n        });\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [...primaryNodes, ...secondaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.new_x));\n          allEdgeYValues.push(yScale(n.new_y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        const t = interval(function(elapsed) {\n          shouldTick = false;\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            const currentNode = tempData.nodes.find(d => d.id === n.id);\n            if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n              currentNode.x = currentNode.new_x;\n            } else {\n              shouldTick = true;\n              currentNode.x = currentNode.x > currentNode.new_x\n                ? currentNode.x - currentNode.x_interval\n                : currentNode.x + currentNode.x_interval;\n            }\n            if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n              currentNode.y = currentNode.new_y;\n            } else {\n              shouldTick = true;\n              currentNode.y = currentNode.y > currentNode.new_y\n                ? currentNode.y - currentNode.y_interval\n                : currentNode.y + currentNode.y_interval;\n            }\n          });\n          simulationUpdate();\n          if (!shouldTick || elapsed > 350) {\n            t.stop()\n          };\n        }, 10);\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes, ...secondaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n        n.x = n.initial_x;\n        n.y = n.initial_y;\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      secondaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  setTimeout(() => {\n    update.clearSelections();\n  }, 0)\n\n  return update;\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [nodeList, setNodeList] = useState(undefined);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null\n\n  return (\n    <div>\n      {tooltip}\n      <div ref={rootNodeRef} />\n      <Table\n        nodes={nodeList}\n        hovered={hovered}\n        updateSimulation={updateSimulation}\n        proximityScale={proximityScale}\n      />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapClustersRingsEdgesLines';\nimport Legend from '../components/BasicLegend';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n      <Legend tableLayout={true} />\n    </div>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport Table from './PercentTable';\nimport styled from 'styled-components';\nimport {interval} from 'd3-timer';\nimport * as polished from 'polished';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nfunction getLines(ctx, text, maxWidth) {\n    var words = text.split(\" \");\n    var lines = [];\n    var currentLine = words[0];\n\n    for (var i = 1; i < words.length; i++) {\n        var word = words[i];\n        var width = ctx.measureText(currentLine + \" \" + word).width;\n        if (width < maxWidth) {\n            currentLine += \" \" + word;\n        } else {\n            lines.push(currentLine);\n            currentLine = word;\n        }\n    }\n    lines.push(currentLine);\n    return lines;\n}\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-clusters-custom-2.json'));\nconst proximityNodes = JSON.parse(raw('../data/proximity-min-max.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst allProximities = [];\nfor (let node in proximityNodes) {\n  proximityNodes[node].forEach(({proximity}) => allProximities.push(proximity));\n}\nconst proximityRange = d3.extent(allProximities);\nconst proximityScale = d3.scaleLinear()\n    .domain(proximityRange)\n    .range([0, 100]);\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth - 450;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  // const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    // let radius = Math.random() * 6;\n    // radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    const label = industry6Digit.name;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {\n      ...n,\n      radius,\n      color,\n      parent: current,\n      label,\n      initial_x: n.x,\n      initial_y: n.y,\n    }\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.3, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .alphaDecay(0.99)\n\n  let transform = d3.zoomIdentity;\n\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n  let secondaryNodes = [];\n  let shouldTick = false;\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    function drawPoint(r, currentPoint, totalPoints, centerX, centerY) {  \n\n      var theta = ((Math.PI*2) / totalPoints);\n      var angle = (theta * currentPoint);\n\n      const x = (r * Math.cos(angle) + centerX);\n      const y = (r * Math.sin(angle) + centerY);\n\n      return {x, y};\n    }\n\n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        if (!shouldTick) {\n          hoveredNode = dragsubject();\n          setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n          simulationUpdate();\n        }\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        if (node) {\n          highlightedNode = node;\n          primaryNodes = [];\n          secondaryNodes = [];\n          proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n            const node2 = tempData.nodes.find(n => n.id === trg);\n            if (node2) {\n              const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n              const numSecondary = proximityNodes[node.id].length - numPrimary;\n              if (i < numPrimary) {\n                const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                primaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              } else {\n                const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                secondaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              }\n            }\n          });\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.new_x));\n            allEdgeYValues.push(yScale(n.new_y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale))\n\n          const t = interval(function(elapsed) {\n            shouldTick = false;\n            [...primaryNodes, ...secondaryNodes].forEach(n => {\n              const currentNode = tempData.nodes.find(d => d.id === n.id);\n              if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n                currentNode.x = currentNode.new_x;\n              } else {\n                shouldTick = true;\n                currentNode.x = currentNode.x > currentNode.new_x\n                  ? currentNode.x - currentNode.x_interval\n                  : currentNode.x + currentNode.x_interval;\n              }\n              if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n                currentNode.y = currentNode.new_y;\n              } else {\n                shouldTick = true;\n                currentNode.y = currentNode.y > currentNode.new_y\n                  ? currentNode.y - currentNode.y_interval\n                  : currentNode.y + currentNode.y_interval;\n              }\n            });\n            simulationUpdate();\n            if (!shouldTick || elapsed > 350) {\n              t.stop()\n            };\n          }, 10);\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes, ...secondaryNodes],\n          })\n          setHovered({node: undefined, coords: {x: d3.event.x, y: d3.event.y}});\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          if ((!primaryNodes.length && !secondaryNodes.length) ||\n                primaryNodes.find(n => n.id === node.id) ||\n                secondaryNodes.find(n => n.id === node.id)) {\n\n            return node;\n          }\n\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // Draw the nodes\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          20 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.strokeStyle = '#dfdfdf';\n        context.lineWidth = 0.2;\n        context.stroke();\n\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          40 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.stroke();\n\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n\n\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = \"#000\";\n        context.font = `400 1.3px OfficeCodeProWeb`;\n        getLines(context, highlightedNode.label, 15).reverse().forEach((t, i) => {\n          context.fillText(t, xScale(highlightedNode.x), yScale(highlightedNode.y) - (2 * (i + 2)));\n        });\n      }\n      let nodeCount = 1;\n      if (!primaryNodes.length && !secondaryNodes.length) {\n        tempData.nodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = !hoveredNode ||\n            (hoveredNode.id === d.id || proximityNodes[hoveredNode.id].find(n => n.trg === d.id))\n            ? d.color : polished.rgba(d.color, 0.125);\n          context.fill();\n        });\n\n\n        // if (hoveredNode) {\n        //   const linkedNodes = [hoveredNode];\n        //   proximityNodes[hoveredNode.id].forEach(function({trg}) {\n        //     const targetNode = tempData.nodes.find(({id}) => id === trg);\n        //     linkedNodes.push(targetNode);\n        //   });\n\n        //   linkedNodes.forEach(function(d, i) {\n        //     if (d) {\n        //       context.beginPath();\n        //       context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n        //       context.fillStyle = d.color;\n        //       context.fill();\n        //       context.strokeStyle = '#afafaf';\n        //       context.stroke();\n        //     }\n        //   });\n        // }\n      } else {\n        [...primaryNodes, ...secondaryNodes].forEach(function(d, i) {\n          const node = tempData.nodes.find(n => n.id === d.id);\n          context.beginPath();\n          context.arc(xScale(node.x), yScale(node.y), node.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = node.color;\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${node.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(String.fromCharCode(64 + nodeCount++), xScale(node.x), yScale(node.y));\n\n\n          if (!hoveredNode || hoveredNode.id !== d.id) {\n            context.fillStyle = \"#000\";\n            context.font = `400 1.3px OfficeCodeProWeb`;\n            const shortenedLabel = d.label.length <= 30 ? d.label : d.label.slice(0, 30) + '...'\n            getLines(context, shortenedLabel, 15).reverse().forEach((t, i) => {\n              context.fillText(t, xScale(node.x), yScale(node.y) - (2 * (i + 2)));\n            });\n          }\n        });\n      }\n\n      if (hoveredNode && hoveredNode.id !== highlightedId) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        secondaryNodes = [];\n        proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n          const node2 = tempData.nodes.find(n => n.id === trg);\n          if (node2) {\n            const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n            const numSecondary = proximityNodes[node.id].length - numPrimary;\n            if (i < numPrimary) {\n              const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              primaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            } else {\n              const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              secondaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            }\n          }\n        });\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [...primaryNodes, ...secondaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.new_x));\n          allEdgeYValues.push(yScale(n.new_y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        const t = interval(function(elapsed) {\n          shouldTick = false;\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            const currentNode = tempData.nodes.find(d => d.id === n.id);\n            if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n              currentNode.x = currentNode.new_x;\n            } else {\n              shouldTick = true;\n              currentNode.x = currentNode.x > currentNode.new_x\n                ? currentNode.x - currentNode.x_interval\n                : currentNode.x + currentNode.x_interval;\n            }\n            if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n              currentNode.y = currentNode.new_y;\n            } else {\n              shouldTick = true;\n              currentNode.y = currentNode.y > currentNode.new_y\n                ? currentNode.y - currentNode.y_interval\n                : currentNode.y + currentNode.y_interval;\n            }\n          });\n          simulationUpdate();\n          if (!shouldTick || elapsed > 350) {\n            t.stop()\n          };\n        }, 10);\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes, ...secondaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n        n.x = n.initial_x;\n        n.y = n.initial_y;\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      secondaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  setTimeout(() => {\n    update.clearSelections();\n  }, 0)\n\n  return update;\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [nodeList, setNodeList] = useState(undefined);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null\n\n  return (\n    <div>\n      {tooltip}\n      <div ref={rootNodeRef} />\n      <Table\n        nodes={nodeList}\n        hovered={hovered}\n        updateSimulation={updateSimulation}\n        proximityScale={proximityScale}\n      />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapClustersRingsEdgesOpacity';\nimport Legend from '../components/BasicLegend';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n      <Legend tableLayout={true} />\n    </div>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport Table from './PercentTable';\nimport styled from 'styled-components';\nimport {interval} from 'd3-timer';\nimport * as polished from 'polished';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nfunction getLines(ctx, text, maxWidth) {\n    var words = text.split(\" \");\n    var lines = [];\n    var currentLine = words[0];\n\n    for (var i = 1; i < words.length; i++) {\n        var word = words[i];\n        var width = ctx.measureText(currentLine + \" \" + word).width;\n        if (width < maxWidth) {\n            currentLine += \" \" + word;\n        } else {\n            lines.push(currentLine);\n            currentLine = word;\n        }\n    }\n    lines.push(currentLine);\n    return lines;\n}\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-clusters-custom-2.json'));\nconst proximityNodes = JSON.parse(raw('../data/proximity-min-max.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst allProximities = [];\nfor (let node in proximityNodes) {\n  proximityNodes[node].forEach(({proximity}) => allProximities.push(proximity));\n}\nconst proximityRange = d3.extent(allProximities);\nconst proximityScale = d3.scaleLinear()\n    .domain(proximityRange)\n    .range([0, 100]);\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth - 450;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  // const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    // let radius = Math.random() * 6;\n    // radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    const label = industry6Digit.name;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n    return {\n      ...n,\n      radius,\n      color,\n      parent: current,\n      label,\n      initial_x: n.x,\n      initial_y: n.y,\n    }\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.3, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .alphaDecay(0.99)\n\n  let transform = d3.zoomIdentity;\n\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n  let secondaryNodes = [];\n  let shouldTick = false;\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    function drawPoint(r, currentPoint, totalPoints, centerX, centerY) {  \n\n      var theta = ((Math.PI*2) / totalPoints);\n      var angle = (theta * currentPoint);\n\n      const x = (r * Math.cos(angle) + centerX);\n      const y = (r * Math.sin(angle) + centerY);\n\n      return {x, y};\n    }\n\n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        if (!shouldTick) {\n          hoveredNode = dragsubject();\n          setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n          simulationUpdate();\n        }\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        if (node) {\n          highlightedNode = node;\n          primaryNodes = [];\n          secondaryNodes = [];\n          proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n            const node2 = tempData.nodes.find(n => n.id === trg);\n            if (node2) {\n              const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n              const numSecondary = proximityNodes[node.id].length - numPrimary;\n              if (i < numPrimary) {\n                const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                primaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              } else {\n                const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                secondaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              }\n            }\n          });\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.new_x));\n            allEdgeYValues.push(yScale(n.new_y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale))\n\n          const t = interval(function(elapsed) {\n            shouldTick = false;\n            [...primaryNodes, ...secondaryNodes].forEach(n => {\n              const currentNode = tempData.nodes.find(d => d.id === n.id);\n              if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n                currentNode.x = currentNode.new_x;\n              } else {\n                shouldTick = true;\n                currentNode.x = currentNode.x > currentNode.new_x\n                  ? currentNode.x - currentNode.x_interval\n                  : currentNode.x + currentNode.x_interval;\n              }\n              if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n                currentNode.y = currentNode.new_y;\n              } else {\n                shouldTick = true;\n                currentNode.y = currentNode.y > currentNode.new_y\n                  ? currentNode.y - currentNode.y_interval\n                  : currentNode.y + currentNode.y_interval;\n              }\n            });\n            simulationUpdate();\n            if (!shouldTick || elapsed > 350) {\n              t.stop()\n            };\n          }, 10);\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes, ...secondaryNodes],\n          })\n          setHovered({node: undefined, coords: {x: d3.event.x, y: d3.event.y}});\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          if ((!primaryNodes.length && !secondaryNodes.length) ||\n                primaryNodes.find(n => n.id === node.id) ||\n                secondaryNodes.find(n => n.id === node.id)) {\n\n            return node;\n          }\n\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // Draw the nodes\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          20 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.strokeStyle = '#dfdfdf';\n        context.lineWidth = 0.2;\n        context.stroke();\n\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          40 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.stroke();\n\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n\n\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = \"#000\";\n        context.font = `400 1.3px OfficeCodeProWeb`;\n        getLines(context, highlightedNode.label, 15).reverse().forEach((t, i) => {\n          context.fillText(t, xScale(highlightedNode.x), yScale(highlightedNode.y) - (2 * (i + 2)));\n        });\n      }\n      let nodeCount = 1;\n      if (!primaryNodes.length && !secondaryNodes.length) {\n        tempData.nodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = !hoveredNode ||\n            (hoveredNode.id === d.id || proximityNodes[hoveredNode.id].find(n => n.trg === d.id))\n            ? d.color : polished.rgba(d.color, 0.125);\n          context.fill();\n        });\n\n\n        if (hoveredNode) {\n          const linkedNodes = [hoveredNode];\n          proximityNodes[hoveredNode.id].forEach(function({trg}) {\n            const targetNode = tempData.nodes.find(({id}) => id === trg);\n            context.beginPath();\n            context.moveTo(xScale(hoveredNode.x), yScale(hoveredNode.y));\n            context.lineTo(xScale(targetNode.x), yScale(targetNode.y));\n            context.strokeStyle = '#afafaf';\n            context.stroke();\n            linkedNodes.push(targetNode);\n          });\n\n          linkedNodes.forEach(function(d, i) {\n            if (d) {\n              context.beginPath();\n              context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n              context.fillStyle = d.color;\n              context.fill();\n              context.strokeStyle = '#afafaf';\n              context.stroke();\n            }\n          });\n        }\n      } else {\n        [...primaryNodes, ...secondaryNodes].forEach(function(d, i) {\n          const node = tempData.nodes.find(n => n.id === d.id);\n          context.beginPath();\n          context.arc(xScale(node.x), yScale(node.y), node.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = node.color;\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${node.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(String.fromCharCode(64 + nodeCount++), xScale(node.x), yScale(node.y));\n\n\n          if (!hoveredNode || hoveredNode.id !== d.id) {\n            context.fillStyle = \"#000\";\n            context.font = `400 1.3px OfficeCodeProWeb`;\n            const shortenedLabel = d.label.length <= 30 ? d.label : d.label.slice(0, 30) + '...'\n            getLines(context, shortenedLabel, 15).reverse().forEach((t, i) => {\n              context.fillText(t, xScale(node.x), yScale(node.y) - (2 * (i + 2)));\n            });\n          }\n        });\n      }\n\n      if (hoveredNode && hoveredNode.id !== highlightedId) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        secondaryNodes = [];\n        proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n          const node2 = tempData.nodes.find(n => n.id === trg);\n          if (node2) {\n            const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n            const numSecondary = proximityNodes[node.id].length - numPrimary;\n            if (i < numPrimary) {\n              const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              primaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            } else {\n              const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              secondaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            }\n          }\n        });\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [...primaryNodes, ...secondaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.new_x));\n          allEdgeYValues.push(yScale(n.new_y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        const t = interval(function(elapsed) {\n          shouldTick = false;\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            const currentNode = tempData.nodes.find(d => d.id === n.id);\n            if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n              currentNode.x = currentNode.new_x;\n            } else {\n              shouldTick = true;\n              currentNode.x = currentNode.x > currentNode.new_x\n                ? currentNode.x - currentNode.x_interval\n                : currentNode.x + currentNode.x_interval;\n            }\n            if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n              currentNode.y = currentNode.new_y;\n            } else {\n              shouldTick = true;\n              currentNode.y = currentNode.y > currentNode.new_y\n                ? currentNode.y - currentNode.y_interval\n                : currentNode.y + currentNode.y_interval;\n            }\n          });\n          simulationUpdate();\n          if (!shouldTick || elapsed > 350) {\n            t.stop()\n          };\n        }, 10);\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes, ...secondaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n        n.x = n.initial_x;\n        n.y = n.initial_y;\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      secondaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  setTimeout(() => {\n    update.clearSelections();\n  }, 0)\n\n  return update;\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [nodeList, setNodeList] = useState(undefined);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null\n\n  return (\n    <div>\n      {tooltip}\n      <div ref={rootNodeRef} />\n      <Table\n        nodes={nodeList}\n        hovered={hovered}\n        updateSimulation={updateSimulation}\n        proximityScale={proximityScale}\n      />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapClustersRingsEdgesOpacityLines';\nimport Legend from '../components/BasicLegend';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n      <Legend tableLayout={true} />\n    </div>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport Table from './PercentTable';\nimport styled from 'styled-components';\nimport {interval} from 'd3-timer';\nimport * as polished from 'polished';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nfunction getLines(ctx, text, maxWidth) {\n    var words = text.split(\" \");\n    var lines = [];\n    var currentLine = words[0];\n\n    for (var i = 1; i < words.length; i++) {\n        var word = words[i];\n        var width = ctx.measureText(currentLine + \" \" + word).width;\n        if (width < maxWidth) {\n            currentLine += \" \" + word;\n        } else {\n            lines.push(currentLine);\n            currentLine = word;\n        }\n    }\n    lines.push(currentLine);\n    return lines;\n}\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-clusters-custom-2.json'));\nconst proximityNodes = JSON.parse(raw('../data/proximity-min-max.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst allProximities = [];\nfor (let node in proximityNodes) {\n  proximityNodes[node].forEach(({proximity}) => allProximities.push(proximity));\n}\nconst proximityRange = d3.extent(allProximities);\nconst proximityScale = d3.scaleLinear()\n    .domain(proximityRange)\n    .range([0, 100]);\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth - 450;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  // const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  let numberOfHighlightedNodes = 0;\n  data.nodes = data.nodes.map((n, i) => {\n    // let radius = Math.random() * 6;\n    // radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    const label = industry6Digit.name;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    let color = '#ddd';\n    if (numberOfHighlightedNodes < 150 || i > 850) {\n      const randomNumber = Math.round(Math.random());\n      if (randomNumber) {\n        const mappedColor = colorMap.find(({id}) => id === topLevelParentId);\n        color = mappedColor.color;\n        numberOfHighlightedNodes++;\n      }\n    }\n    return {\n      ...n,\n      radius,\n      color,\n      parent: current,\n      label,\n      initial_x: n.x,\n      initial_y: n.y,\n    }\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.3, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .alphaDecay(0.99)\n\n  let transform = d3.zoomIdentity;\n\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n  let secondaryNodes = [];\n  let shouldTick = false;\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    function drawPoint(r, currentPoint, totalPoints, centerX, centerY) {  \n\n      var theta = ((Math.PI*2) / totalPoints);\n      var angle = (theta * currentPoint);\n\n      const x = (r * Math.cos(angle) + centerX);\n      const y = (r * Math.sin(angle) + centerY);\n\n      return {x, y};\n    }\n\n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        if (!shouldTick) {\n          hoveredNode = dragsubject();\n          setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n          simulationUpdate();\n        }\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        if (node) {\n          highlightedNode = node;\n          primaryNodes = [];\n          secondaryNodes = [];\n          proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n            const node2 = tempData.nodes.find(n => n.id === trg);\n            if (node2) {\n              const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n              const numSecondary = proximityNodes[node.id].length - numPrimary;\n              if (i < numPrimary) {\n                const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                primaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              } else {\n                const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                secondaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              }\n            }\n          });\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.new_x));\n            allEdgeYValues.push(yScale(n.new_y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale))\n\n          const t = interval(function(elapsed) {\n            shouldTick = false;\n            [...primaryNodes, ...secondaryNodes].forEach(n => {\n              const currentNode = tempData.nodes.find(d => d.id === n.id);\n              if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n                currentNode.x = currentNode.new_x;\n              } else {\n                shouldTick = true;\n                currentNode.x = currentNode.x > currentNode.new_x\n                  ? currentNode.x - currentNode.x_interval\n                  : currentNode.x + currentNode.x_interval;\n              }\n              if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n                currentNode.y = currentNode.new_y;\n              } else {\n                shouldTick = true;\n                currentNode.y = currentNode.y > currentNode.new_y\n                  ? currentNode.y - currentNode.y_interval\n                  : currentNode.y + currentNode.y_interval;\n              }\n            });\n            simulationUpdate();\n            if (!shouldTick || elapsed > 350) {\n              t.stop()\n            };\n          }, 10);\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes, ...secondaryNodes],\n          })\n          setHovered({node: undefined, coords: {x: d3.event.x, y: d3.event.y}});\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          if ((!primaryNodes.length && !secondaryNodes.length) ||\n                primaryNodes.find(n => n.id === node.id) ||\n                secondaryNodes.find(n => n.id === node.id)) {\n\n            return node;\n          }\n\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // Draw the nodes\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          20 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.strokeStyle = '#dfdfdf';\n        context.lineWidth = 0.2;\n        context.stroke();\n\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          40 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.stroke();\n\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n\n\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = \"#000\";\n        context.font = `400 1.3px OfficeCodeProWeb`;\n        getLines(context, highlightedNode.label, 15).reverse().forEach((t, i) => {\n          context.fillText(t, xScale(highlightedNode.x), yScale(highlightedNode.y) - (2 * (i + 2)));\n        });\n      }\n      let nodeCount = 1;\n      if (!primaryNodes.length && !secondaryNodes.length) {\n        tempData.nodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = !hoveredNode ||\n            (hoveredNode.id === d.id || proximityNodes[hoveredNode.id].find(n => n.trg === d.id))\n            ? d.color : polished.rgba(d.color, 0.125);\n          context.fill();\n        });\n\n\n        if (hoveredNode) {\n          const linkedNodes = [hoveredNode];\n          proximityNodes[hoveredNode.id].forEach(function({trg}) {\n            const targetNode = tempData.nodes.find(({id}) => id === trg);\n            context.beginPath();\n            context.moveTo(xScale(hoveredNode.x), yScale(hoveredNode.y));\n            context.lineTo(xScale(targetNode.x), yScale(targetNode.y));\n            context.strokeStyle = '#afafaf';\n            context.stroke();\n            linkedNodes.push(targetNode);\n          });\n\n          linkedNodes.forEach(function(d, i) {\n            if (d) {\n              context.beginPath();\n              context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n              context.fillStyle = d.color;\n              context.fill();\n              context.strokeStyle = '#afafaf';\n              context.stroke();\n            }\n          });\n        }\n      } else {\n        [...primaryNodes, ...secondaryNodes].forEach(function(d, i) {\n          const node = tempData.nodes.find(n => n.id === d.id);\n          context.beginPath();\n          context.arc(xScale(node.x), yScale(node.y), node.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = node.color;\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${node.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(String.fromCharCode(64 + nodeCount++), xScale(node.x), yScale(node.y));\n\n\n          if (!hoveredNode || hoveredNode.id !== d.id) {\n            context.fillStyle = \"#000\";\n            context.font = `400 1.3px OfficeCodeProWeb`;\n            const shortenedLabel = d.label.length <= 30 ? d.label : d.label.slice(0, 30) + '...'\n            getLines(context, shortenedLabel, 15).reverse().forEach((t, i) => {\n              context.fillText(t, xScale(node.x), yScale(node.y) - (2 * (i + 2)));\n            });\n          }\n        });\n      }\n\n      if (hoveredNode && hoveredNode.id !== highlightedId) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        secondaryNodes = [];\n        proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n          const node2 = tempData.nodes.find(n => n.id === trg);\n          if (node2) {\n            const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n            const numSecondary = proximityNodes[node.id].length - numPrimary;\n            if (i < numPrimary) {\n              const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              primaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            } else {\n              const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              secondaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            }\n          }\n        });\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [...primaryNodes, ...secondaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.new_x));\n          allEdgeYValues.push(yScale(n.new_y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        const t = interval(function(elapsed) {\n          shouldTick = false;\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            const currentNode = tempData.nodes.find(d => d.id === n.id);\n            if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n              currentNode.x = currentNode.new_x;\n            } else {\n              shouldTick = true;\n              currentNode.x = currentNode.x > currentNode.new_x\n                ? currentNode.x - currentNode.x_interval\n                : currentNode.x + currentNode.x_interval;\n            }\n            if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n              currentNode.y = currentNode.new_y;\n            } else {\n              shouldTick = true;\n              currentNode.y = currentNode.y > currentNode.new_y\n                ? currentNode.y - currentNode.y_interval\n                : currentNode.y + currentNode.y_interval;\n            }\n          });\n          simulationUpdate();\n          if (!shouldTick || elapsed > 350) {\n            t.stop()\n          };\n        }, 10);\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes, ...secondaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n        n.x = n.initial_x;\n        n.y = n.initial_y;\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      secondaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  setTimeout(() => {\n    update.clearSelections();\n  }, 0)\n\n  return update;\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [nodeList, setNodeList] = useState(undefined);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null\n\n  return (\n    <div>\n      {tooltip}\n      <div ref={rootNodeRef} />\n      <Table\n        showPng={true}\n        showToggle={true}\n        nodes={nodeList}\n        hovered={hovered}\n        updateSimulation={updateSimulation}\n        proximityScale={proximityScale}\n      />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapClustersRingsEdgesOpacityLinesRCA';\nimport Legend from '../components/BasicLegend';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n      <Legend tableLayout={true} />\n    </div>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport Table from './PercentTable';\nimport styled from 'styled-components';\nimport {interval} from 'd3-timer';\nimport * as polished from 'polished';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nfunction getLines(ctx, text, maxWidth) {\n    var words = text.split(\" \");\n    var lines = [];\n    var currentLine = words[0];\n\n    for (var i = 1; i < words.length; i++) {\n        var word = words[i];\n        var width = ctx.measureText(currentLine + \" \" + word).width;\n        if (width < maxWidth) {\n            currentLine += \" \" + word;\n        } else {\n            lines.push(currentLine);\n            currentLine = word;\n        }\n    }\n    lines.push(currentLine);\n    return lines;\n}\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-clusters-custom-2.json'));\nconst proximityNodes = JSON.parse(raw('../data/proximity-min-max.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst allProximities = [];\nfor (let node in proximityNodes) {\n  proximityNodes[node].forEach(({proximity}) => allProximities.push(proximity));\n}\nconst proximityRange = d3.extent(allProximities);\nconst proximityScale = d3.scaleLinear()\n    .domain(proximityRange)\n    .range([0, 100]);\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth - 450;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  let numberOfHighlightedNodes = 0;\n  data.nodes = data.nodes.map((n, i) => {\n    let radius = Math.random() * 6;\n    radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    // const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    const label = industry6Digit.name;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    let color = '#ddd';\n    if (numberOfHighlightedNodes < 150 || i > 850) {\n      const randomNumber = Math.round(Math.random());\n      if (randomNumber) {\n        const mappedColor = colorMap.find(({id}) => id === topLevelParentId);\n        color = mappedColor.color;\n        numberOfHighlightedNodes++;\n      }\n    }\n    return {\n      ...n,\n      radius,\n      color,\n      parent: current,\n      label,\n      initial_x: n.x,\n      initial_y: n.y,\n    }\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.3, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .alphaDecay(0.99)\n\n  let transform = d3.zoomIdentity;\n\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n  let secondaryNodes = [];\n  let shouldTick = false;\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    function drawPoint(r, currentPoint, totalPoints, centerX, centerY) {  \n\n      var theta = ((Math.PI*2) / totalPoints);\n      var angle = (theta * currentPoint);\n\n      const x = (r * Math.cos(angle) + centerX);\n      const y = (r * Math.sin(angle) + centerY);\n\n      return {x, y};\n    }\n\n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        if (!shouldTick) {\n          hoveredNode = dragsubject();\n          setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n          simulationUpdate();\n        }\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        if (node) {\n          highlightedNode = node;\n          primaryNodes = [];\n          secondaryNodes = [];\n          proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n            const node2 = tempData.nodes.find(n => n.id === trg);\n            if (node2) {\n              const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n              const numSecondary = proximityNodes[node.id].length - numPrimary;\n              if (i < numPrimary) {\n                const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                primaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              } else {\n                const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                secondaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              }\n            }\n          });\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.new_x));\n            allEdgeYValues.push(yScale(n.new_y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale))\n\n          const t = interval(function(elapsed) {\n            shouldTick = false;\n            [...primaryNodes, ...secondaryNodes].forEach(n => {\n              const currentNode = tempData.nodes.find(d => d.id === n.id);\n              if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n                currentNode.x = currentNode.new_x;\n              } else {\n                shouldTick = true;\n                currentNode.x = currentNode.x > currentNode.new_x\n                  ? currentNode.x - currentNode.x_interval\n                  : currentNode.x + currentNode.x_interval;\n              }\n              if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n                currentNode.y = currentNode.new_y;\n              } else {\n                shouldTick = true;\n                currentNode.y = currentNode.y > currentNode.new_y\n                  ? currentNode.y - currentNode.y_interval\n                  : currentNode.y + currentNode.y_interval;\n              }\n            });\n            simulationUpdate();\n            if (!shouldTick || elapsed > 350) {\n              t.stop()\n            };\n          }, 10);\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes, ...secondaryNodes],\n          })\n          setHovered({node: undefined, coords: {x: d3.event.x, y: d3.event.y}});\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          if ((!primaryNodes.length && !secondaryNodes.length) ||\n                primaryNodes.find(n => n.id === node.id) ||\n                secondaryNodes.find(n => n.id === node.id)) {\n\n            return node;\n          }\n\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // Draw the nodes\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          20 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.strokeStyle = '#dfdfdf';\n        context.lineWidth = 0.2;\n        context.stroke();\n\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          40 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.stroke();\n\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n\n\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = \"#000\";\n        context.font = `400 1.3px OfficeCodeProWeb`;\n        getLines(context, highlightedNode.label, 15).reverse().forEach((t, i) => {\n          context.fillText(t, xScale(highlightedNode.x), yScale(highlightedNode.y + highlightedNode.radius / 2) - (2 * (i + 2)));\n        });\n      }\n      let nodeCount = 1;\n      if (!primaryNodes.length && !secondaryNodes.length) {\n        tempData.nodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = !hoveredNode ||\n            (hoveredNode.id === d.id || proximityNodes[hoveredNode.id].find(n => n.trg === d.id))\n            ? d.color : polished.rgba(d.color, 0.125);\n          context.fill();\n        });\n\n\n        if (hoveredNode) {\n          const linkedNodes = [hoveredNode];\n          proximityNodes[hoveredNode.id].forEach(function({trg}) {\n            const targetNode = tempData.nodes.find(({id}) => id === trg);\n            context.beginPath();\n            context.moveTo(xScale(hoveredNode.x), yScale(hoveredNode.y));\n            context.lineTo(xScale(targetNode.x), yScale(targetNode.y));\n            context.strokeStyle = '#afafaf';\n            context.stroke();\n            linkedNodes.push(targetNode);\n          });\n\n          linkedNodes.forEach(function(d, i) {\n            if (d) {\n              context.beginPath();\n              context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n              context.fillStyle = d.color;\n              context.fill();\n              context.strokeStyle = '#afafaf';\n              context.stroke();\n            }\n          });\n        }\n      } else {\n        [...primaryNodes, ...secondaryNodes].forEach(function(d, i) {\n          const node = tempData.nodes.find(n => n.id === d.id);\n          context.beginPath();\n          context.arc(xScale(node.x), yScale(node.y), node.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = node.color;\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${node.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(String.fromCharCode(64 + nodeCount++), xScale(node.x), yScale(node.y));\n\n\n          if (!hoveredNode || hoveredNode.id !== d.id) {\n            context.fillStyle = \"#000\";\n            context.font = `400 1.3px OfficeCodeProWeb`;\n            const shortenedLabel = d.label.length <= 30 ? d.label : d.label.slice(0, 30) + '...'\n            getLines(context, shortenedLabel, 15).reverse().forEach((t, i) => {\n              context.fillText(t, xScale(node.x), yScale(node.y + node.radius / 2) - (2 * (i + 2)));\n            });\n          }\n        });\n      }\n\n      if (hoveredNode && hoveredNode.id !== highlightedId) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        secondaryNodes = [];\n        proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n          const node2 = tempData.nodes.find(n => n.id === trg);\n          if (node2) {\n            const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n            const numSecondary = proximityNodes[node.id].length - numPrimary;\n            if (i < numPrimary) {\n              const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              primaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            } else {\n              const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              secondaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            }\n          }\n        });\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [...primaryNodes, ...secondaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.new_x));\n          allEdgeYValues.push(yScale(n.new_y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        const t = interval(function(elapsed) {\n          shouldTick = false;\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            const currentNode = tempData.nodes.find(d => d.id === n.id);\n            if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n              currentNode.x = currentNode.new_x;\n            } else {\n              shouldTick = true;\n              currentNode.x = currentNode.x > currentNode.new_x\n                ? currentNode.x - currentNode.x_interval\n                : currentNode.x + currentNode.x_interval;\n            }\n            if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n              currentNode.y = currentNode.new_y;\n            } else {\n              shouldTick = true;\n              currentNode.y = currentNode.y > currentNode.new_y\n                ? currentNode.y - currentNode.y_interval\n                : currentNode.y + currentNode.y_interval;\n            }\n          });\n          simulationUpdate();\n          if (!shouldTick || elapsed > 350) {\n            t.stop()\n          };\n        }, 10);\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes, ...secondaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n        n.x = n.initial_x;\n        n.y = n.initial_y;\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      secondaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  setTimeout(() => {\n    update.clearSelections();\n  }, 0)\n\n  return update;\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [nodeList, setNodeList] = useState(undefined);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null\n\n  return (\n    <div>\n      {tooltip}\n      <div ref={rootNodeRef} />\n      <Table\n        showPng={true}\n        nodes={nodeList}\n        hovered={hovered}\n        updateSimulation={updateSimulation}\n        proximityScale={proximityScale}\n      />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapClustersRingsEdgesOpacityLinesRCASizing';\nimport Legend from '../components/BasicLegend';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n      <Legend tableLayout={true} />\n    </div>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport Table from './PercentTable';\nimport styled from 'styled-components';\nimport {interval} from 'd3-timer';\nimport * as polished from 'polished';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nfunction getLines(ctx, text, maxWidth) {\n    var words = text.split(\" \");\n    var lines = [];\n    var currentLine = words[0];\n\n    for (var i = 1; i < words.length; i++) {\n        var word = words[i];\n        var width = ctx.measureText(currentLine + \" \" + word).width;\n        if (width < maxWidth) {\n            currentLine += \" \" + word;\n        } else {\n            lines.push(currentLine);\n            currentLine = word;\n        }\n    }\n    lines.push(currentLine);\n    return lines;\n}\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-clusters-custom-2.json'));\nconst proximityNodes = JSON.parse(raw('../data/proximity-min-max.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\nconst clusterMap = JSON.parse(raw('../data/clusters-mapping-1.json'));\n\nconst allProximities = [];\nfor (let node in proximityNodes) {\n  proximityNodes[node].forEach(({proximity}) => allProximities.push(proximity));\n}\nconst proximityRange = d3.extent(allProximities);\nconst proximityScale = d3.scaleLinear()\n    .domain(proximityRange)\n    .range([0, 100]);\n\n\nconst colorMap = [\n  { id: '4', color: '#A973BE' },\n  { id: '5', color: '#F1866C' },\n  { id: '9', color: '#FFC135' },\n  { id: '10', color: '#93CFD0' },\n  { id: '12', color: '#488098' },\n  { id: '13', color: '#77C898' },\n  { id: '14', color: '#6A6AAD' },\n]\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth - 450;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  // const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    // let radius = Math.random() * 6;\n    // radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    const label = industry6Digit.name;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const cluster = clusterMap.find(({naics}) => naics === n.id);\n    const mapped = cluster ? colorMap.find(({id}) => id === cluster.C1.toString()) : 'black';\n    return {\n      ...n,\n      radius,\n      color: mapped.color,\n      parent: current,\n      label,\n      initial_x: n.x,\n      initial_y: n.y,\n    }\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.3, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .alphaDecay(0.99)\n\n  let transform = d3.zoomIdentity;\n\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n  let secondaryNodes = [];\n  let shouldTick = false;\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    function drawPoint(r, currentPoint, totalPoints, centerX, centerY) {  \n\n      var theta = ((Math.PI*2) / totalPoints);\n      var angle = (theta * currentPoint);\n\n      const x = (r * Math.cos(angle) + centerX);\n      const y = (r * Math.sin(angle) + centerY);\n\n      return {x, y};\n    }\n\n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        if (!shouldTick) {\n          hoveredNode = dragsubject();\n          setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n          simulationUpdate();\n        }\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        if (node) {\n          highlightedNode = node;\n          primaryNodes = [];\n          secondaryNodes = [];\n          proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n            const node2 = tempData.nodes.find(n => n.id === trg);\n            if (node2) {\n              const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n              const numSecondary = proximityNodes[node.id].length - numPrimary;\n              if (i < numPrimary) {\n                const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                primaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              } else {\n                const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                secondaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              }\n            }\n          });\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.new_x));\n            allEdgeYValues.push(yScale(n.new_y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale))\n\n          const t = interval(function(elapsed) {\n            shouldTick = false;\n            [...primaryNodes, ...secondaryNodes].forEach(n => {\n              const currentNode = tempData.nodes.find(d => d.id === n.id);\n              if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n                currentNode.x = currentNode.new_x;\n              } else {\n                shouldTick = true;\n                currentNode.x = currentNode.x > currentNode.new_x\n                  ? currentNode.x - currentNode.x_interval\n                  : currentNode.x + currentNode.x_interval;\n              }\n              if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n                currentNode.y = currentNode.new_y;\n              } else {\n                shouldTick = true;\n                currentNode.y = currentNode.y > currentNode.new_y\n                  ? currentNode.y - currentNode.y_interval\n                  : currentNode.y + currentNode.y_interval;\n              }\n            });\n            simulationUpdate();\n            if (!shouldTick || elapsed > 350) {\n              t.stop()\n            };\n          }, 10);\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes, ...secondaryNodes],\n          })\n          setHovered({node: undefined, coords: {x: d3.event.x, y: d3.event.y}});\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          if ((!primaryNodes.length && !secondaryNodes.length) ||\n                primaryNodes.find(n => n.id === node.id) ||\n                secondaryNodes.find(n => n.id === node.id)) {\n\n            return node;\n          }\n\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // Draw the nodes\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          20 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.strokeStyle = '#dfdfdf';\n        context.lineWidth = 0.2;\n        context.stroke();\n\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          40 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.stroke();\n\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n\n\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = \"#000\";\n        context.font = `400 1.3px OfficeCodeProWeb`;\n        getLines(context, highlightedNode.label, 15).reverse().forEach((t, i) => {\n          context.fillText(t, xScale(highlightedNode.x), yScale(highlightedNode.y) - (2 * (i + 2)));\n        });\n      }\n      let nodeCount = 1;\n      if (!primaryNodes.length && !secondaryNodes.length) {\n        tempData.nodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = !hoveredNode ||\n            (hoveredNode.id === d.id || proximityNodes[hoveredNode.id].find(n => n.trg === d.id))\n            ? d.color : polished.rgba(d.color, 0.125);\n          context.fill();\n        });\n\n\n        if (hoveredNode) {\n          const linkedNodes = [hoveredNode];\n          proximityNodes[hoveredNode.id].forEach(function({trg}) {\n            const targetNode = tempData.nodes.find(({id}) => id === trg);\n            context.beginPath();\n            context.moveTo(xScale(hoveredNode.x), yScale(hoveredNode.y));\n            context.lineTo(xScale(targetNode.x), yScale(targetNode.y));\n            context.strokeStyle = '#afafaf';\n            context.stroke();\n            linkedNodes.push(targetNode);\n          });\n\n          linkedNodes.forEach(function(d, i) {\n            if (d) {\n              context.beginPath();\n              context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n              context.fillStyle = d.color;\n              context.fill();\n              context.strokeStyle = '#afafaf';\n              context.stroke();\n            }\n          });\n        }\n      } else {\n        [...primaryNodes, ...secondaryNodes].forEach(function(d, i) {\n          const node = tempData.nodes.find(n => n.id === d.id);\n          context.beginPath();\n          context.arc(xScale(node.x), yScale(node.y), node.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = node.color;\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${node.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(String.fromCharCode(64 + nodeCount++), xScale(node.x), yScale(node.y));\n\n\n          if (!hoveredNode || hoveredNode.id !== d.id) {\n            context.fillStyle = \"#000\";\n            context.font = `400 1.3px OfficeCodeProWeb`;\n            const shortenedLabel = d.label.length <= 30 ? d.label : d.label.slice(0, 30) + '...'\n            getLines(context, shortenedLabel, 15).reverse().forEach((t, i) => {\n              context.fillText(t, xScale(node.x), yScale(node.y) - (2 * (i + 2)));\n            });\n          }\n        });\n      }\n\n      if (hoveredNode && hoveredNode.id !== highlightedId) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        secondaryNodes = [];\n        proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n          const node2 = tempData.nodes.find(n => n.id === trg);\n          if (node2) {\n            const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n            const numSecondary = proximityNodes[node.id].length - numPrimary;\n            if (i < numPrimary) {\n              const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              primaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            } else {\n              const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              secondaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            }\n          }\n        });\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [...primaryNodes, ...secondaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.new_x));\n          allEdgeYValues.push(yScale(n.new_y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        const t = interval(function(elapsed) {\n          shouldTick = false;\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            const currentNode = tempData.nodes.find(d => d.id === n.id);\n            if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n              currentNode.x = currentNode.new_x;\n            } else {\n              shouldTick = true;\n              currentNode.x = currentNode.x > currentNode.new_x\n                ? currentNode.x - currentNode.x_interval\n                : currentNode.x + currentNode.x_interval;\n            }\n            if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n              currentNode.y = currentNode.new_y;\n            } else {\n              shouldTick = true;\n              currentNode.y = currentNode.y > currentNode.new_y\n                ? currentNode.y - currentNode.y_interval\n                : currentNode.y + currentNode.y_interval;\n            }\n          });\n          simulationUpdate();\n          if (!shouldTick || elapsed > 350) {\n            t.stop()\n          };\n        }, 10);\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes, ...secondaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n        n.x = n.initial_x;\n        n.y = n.initial_y;\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      secondaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  setTimeout(() => {\n    update.clearSelections();\n  }, 0)\n\n  return update;\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [nodeList, setNodeList] = useState(undefined);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null\n\n  return (\n    <div>\n      {tooltip}\n      <div ref={rootNodeRef} />\n      <Table\n        nodes={nodeList}\n        hovered={hovered}\n        updateSimulation={updateSimulation}\n        proximityScale={proximityScale}\n      />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapClustersRingsClusterColoring';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n    </div>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport Table from './PercentTable';\nimport styled from 'styled-components';\nimport {interval} from 'd3-timer';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nfunction getLines(ctx, text, maxWidth) {\n    var words = text.split(\" \");\n    var lines = [];\n    var currentLine = words[0];\n\n    for (var i = 1; i < words.length; i++) {\n        var word = words[i];\n        var width = ctx.measureText(currentLine + \" \" + word).width;\n        if (width < maxWidth) {\n            currentLine += \" \" + word;\n        } else {\n            lines.push(currentLine);\n            currentLine = word;\n        }\n    }\n    lines.push(currentLine);\n    return lines;\n}\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-clusters-custom-2.json'));\nconst proximityNodes = JSON.parse(raw('../data/proximity-min-max.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst allProximities = [];\nfor (let node in proximityNodes) {\n  proximityNodes[node].forEach(({proximity}) => allProximities.push(proximity));\n}\nconst proximityRange = d3.extent(allProximities);\nconst proximityScale = d3.scaleLinear()\n    .domain(proximityRange)\n    .range([0, 100]);\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth - 450;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  // const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  let numberOfHighlightedNodes = 0;\n  data.nodes = data.nodes.map((n, i) => {\n    // let radius = Math.random() * 6;\n    // radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    const label = industry6Digit.name;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    let color = '#ddd';\n    if (numberOfHighlightedNodes < 150 || i > 850) {\n      const randomNumber = Math.round(Math.random());\n      if (randomNumber) {\n        const mappedColor = colorMap.find(({id}) => id === topLevelParentId);\n        color = mappedColor.color;\n        numberOfHighlightedNodes++;\n      }\n    }\n    return {\n      ...n,\n      radius,\n      color,\n      parent: current,\n      label,\n      initial_x: n.x,\n      initial_y: n.y,\n    }\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.3, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .alphaDecay(0.99)\n\n  let transform = d3.zoomIdentity;\n\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n  let secondaryNodes = [];\n  let shouldTick = false;\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    function drawPoint(r, currentPoint, totalPoints, centerX, centerY) {  \n\n      var theta = ((Math.PI*2) / totalPoints);\n      var angle = (theta * currentPoint);\n\n      const x = (r * Math.cos(angle) + centerX);\n      const y = (r * Math.sin(angle) + centerY);\n\n      return {x, y};\n    }\n\n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        if (!shouldTick) {\n          hoveredNode = dragsubject();\n          setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n          simulationUpdate();\n        }\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        if (node) {\n          highlightedNode = node;\n          primaryNodes = [];\n          secondaryNodes = [];\n          proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n            const node2 = tempData.nodes.find(n => n.id === trg);\n            if (node2) {\n              const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n              const numSecondary = proximityNodes[node.id].length - numPrimary;\n              if (i < numPrimary) {\n                const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                primaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              } else {\n                const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                secondaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              }\n            }\n          });\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.new_x));\n            allEdgeYValues.push(yScale(n.new_y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale))\n\n          const t = interval(function(elapsed) {\n            shouldTick = false;\n            [...primaryNodes, ...secondaryNodes].forEach(n => {\n              const currentNode = tempData.nodes.find(d => d.id === n.id);\n              if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n                currentNode.x = currentNode.new_x;\n              } else {\n                shouldTick = true;\n                currentNode.x = currentNode.x > currentNode.new_x\n                  ? currentNode.x - currentNode.x_interval\n                  : currentNode.x + currentNode.x_interval;\n              }\n              if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n                currentNode.y = currentNode.new_y;\n              } else {\n                shouldTick = true;\n                currentNode.y = currentNode.y > currentNode.new_y\n                  ? currentNode.y - currentNode.y_interval\n                  : currentNode.y + currentNode.y_interval;\n              }\n            });\n            simulationUpdate();\n            if (!shouldTick || elapsed > 350) {\n              t.stop()\n            };\n          }, 10);\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes, ...secondaryNodes],\n          })\n          setHovered({node: undefined, coords: {x: d3.event.x, y: d3.event.y}});\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          if ((!primaryNodes.length && !secondaryNodes.length) ||\n                primaryNodes.find(n => n.id === node.id) ||\n                secondaryNodes.find(n => n.id === node.id)) {\n\n            return node;\n          }\n\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // Draw the nodes\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          20 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.strokeStyle = '#dfdfdf';\n        context.lineWidth = 0.2;\n        context.stroke();\n\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          40 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.stroke();\n\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n\n\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = \"#000\";\n        context.font = `400 1.3px OfficeCodeProWeb`;\n        getLines(context, highlightedNode.label, 15).reverse().forEach((t, i) => {\n          context.fillText(t, xScale(highlightedNode.x), yScale(highlightedNode.y) - (2 * (i + 2)));\n        });\n      }\n      let nodeCount = 1;\n      if (!primaryNodes.length && !secondaryNodes.length) {\n        tempData.nodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.color;\n          context.fill();\n        });\n      } else {\n        [...primaryNodes, ...secondaryNodes].forEach(function(d, i) {\n          const node = tempData.nodes.find(n => n.id === d.id);\n          context.beginPath();\n          context.arc(xScale(node.x), yScale(node.y), node.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = node.color;\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${node.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(String.fromCharCode(64 + nodeCount++), xScale(node.x), yScale(node.y));\n\n\n          if (!hoveredNode || hoveredNode.id !== d.id) {\n            context.fillStyle = \"#000\";\n            context.font = `400 1.3px OfficeCodeProWeb`;\n            const shortenedLabel = d.label.length <= 30 ? d.label : d.label.slice(0, 30) + '...'\n            getLines(context, shortenedLabel, 15).reverse().forEach((t, i) => {\n              context.fillText(t, xScale(node.x), yScale(node.y) - (2 * (i + 2)));\n            });\n          }\n        });\n      }\n\n      if (hoveredNode && hoveredNode.id !== highlightedId) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        secondaryNodes = [];\n        proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n          const node2 = tempData.nodes.find(n => n.id === trg);\n          if (node2) {\n            const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n            const numSecondary = proximityNodes[node.id].length - numPrimary;\n            if (i < numPrimary) {\n              const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              primaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            } else {\n              const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              secondaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            }\n          }\n        });\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [...primaryNodes, ...secondaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.new_x));\n          allEdgeYValues.push(yScale(n.new_y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        const t = interval(function(elapsed) {\n          shouldTick = false;\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            const currentNode = tempData.nodes.find(d => d.id === n.id);\n            if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n              currentNode.x = currentNode.new_x;\n            } else {\n              shouldTick = true;\n              currentNode.x = currentNode.x > currentNode.new_x\n                ? currentNode.x - currentNode.x_interval\n                : currentNode.x + currentNode.x_interval;\n            }\n            if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n              currentNode.y = currentNode.new_y;\n            } else {\n              shouldTick = true;\n              currentNode.y = currentNode.y > currentNode.new_y\n                ? currentNode.y - currentNode.y_interval\n                : currentNode.y + currentNode.y_interval;\n            }\n          });\n          simulationUpdate();\n          if (!shouldTick || elapsed > 350) {\n            t.stop()\n          };\n        }, 10);\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes, ...secondaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n        n.x = n.initial_x;\n        n.y = n.initial_y;\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      secondaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  setTimeout(() => {\n    update.clearSelections();\n  }, 0)\n\n  return update;\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [nodeList, setNodeList] = useState(undefined);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null\n\n  return (\n    <div>\n      {tooltip}\n      <div ref={rootNodeRef} />\n      <Table\n        showPng={true}\n        showToggle={true}\n        nodes={nodeList}\n        hovered={hovered}\n        updateSimulation={updateSimulation}\n        proximityScale={proximityScale}\n      />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapClustersRingsRCA.js';\nimport Legend from '../components/BasicLegend';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n      <Legend tableLayout={true} />\n    </div>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport Table from './PercentTable';\nimport styled from 'styled-components';\nimport {interval} from 'd3-timer';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nfunction getLines(ctx, text, maxWidth) {\n    var words = text.split(\" \");\n    var lines = [];\n    var currentLine = words[0];\n\n    for (var i = 1; i < words.length; i++) {\n        var word = words[i];\n        var width = ctx.measureText(currentLine + \" \" + word).width;\n        if (width < maxWidth) {\n            currentLine += \" \" + word;\n        } else {\n            lines.push(currentLine);\n            currentLine = word;\n        }\n    }\n    lines.push(currentLine);\n    return lines;\n}\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-clusters-custom-2.json'));\nconst proximityNodes = JSON.parse(raw('../data/proximity-min-max.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\n\nconst allProximities = [];\nfor (let node in proximityNodes) {\n  proximityNodes[node].forEach(({proximity}) => allProximities.push(proximity));\n}\nconst proximityRange = d3.extent(allProximities);\nconst proximityScale = d3.scaleLinear()\n    .domain(proximityRange)\n    .range([0, 100]);\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth - 450;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  let numberOfHighlightedNodes = 0;\n  data.nodes = data.nodes.map((n, i) => {\n    let radius = Math.random() * 6;\n    radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    // const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    const label = industry6Digit.name;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    let color = '#ddd';\n    if (numberOfHighlightedNodes < 150 || i > 850) {\n      const randomNumber = Math.round(Math.random());\n      if (randomNumber) {\n        const mappedColor = colorMap.find(({id}) => id === topLevelParentId);\n        color = mappedColor.color;\n        numberOfHighlightedNodes++;\n      }\n    }\n    return {\n      ...n,\n      radius,\n      color,\n      parent: current,\n      label,\n      initial_x: n.x,\n      initial_y: n.y,\n    }\n  })\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.3, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .alphaDecay(0.99)\n\n  let transform = d3.zoomIdentity;\n\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n  let secondaryNodes = [];\n  let shouldTick = false;\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    function drawPoint(r, currentPoint, totalPoints, centerX, centerY) {  \n\n      var theta = ((Math.PI*2) / totalPoints);\n      var angle = (theta * currentPoint);\n\n      const x = (r * Math.cos(angle) + centerX);\n      const y = (r * Math.sin(angle) + centerY);\n\n      return {x, y};\n    }\n\n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        if (!shouldTick) {\n          hoveredNode = dragsubject();\n          setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n          simulationUpdate();\n        }\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        if (node) {\n          highlightedNode = node;\n          primaryNodes = [];\n          secondaryNodes = [];\n          proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n            const node2 = tempData.nodes.find(n => n.id === trg);\n            if (node2) {\n              const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n              const numSecondary = proximityNodes[node.id].length - numPrimary;\n              if (i < numPrimary) {\n                const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                primaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              } else {\n                const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                secondaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              }\n            }\n          });\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.new_x));\n            allEdgeYValues.push(yScale(n.new_y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale))\n\n          const t = interval(function(elapsed) {\n            shouldTick = false;\n            [...primaryNodes, ...secondaryNodes].forEach(n => {\n              const currentNode = tempData.nodes.find(d => d.id === n.id);\n              if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n                currentNode.x = currentNode.new_x;\n              } else {\n                shouldTick = true;\n                currentNode.x = currentNode.x > currentNode.new_x\n                  ? currentNode.x - currentNode.x_interval\n                  : currentNode.x + currentNode.x_interval;\n              }\n              if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n                currentNode.y = currentNode.new_y;\n              } else {\n                shouldTick = true;\n                currentNode.y = currentNode.y > currentNode.new_y\n                  ? currentNode.y - currentNode.y_interval\n                  : currentNode.y + currentNode.y_interval;\n              }\n            });\n            simulationUpdate();\n            if (!shouldTick || elapsed > 350) {\n              t.stop()\n            };\n          }, 10);\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes, ...secondaryNodes],\n          })\n          setHovered({node: undefined, coords: {x: d3.event.x, y: d3.event.y}});\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          if ((!primaryNodes.length && !secondaryNodes.length) ||\n                primaryNodes.find(n => n.id === node.id) ||\n                secondaryNodes.find(n => n.id === node.id)) {\n\n            return node;\n          }\n\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // Draw the nodes\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          20 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.strokeStyle = '#dfdfdf';\n        context.lineWidth = 0.2;\n        context.stroke();\n\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          40 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.stroke();\n\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n\n\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = \"#000\";\n        context.font = `400 1.3px OfficeCodeProWeb`;\n        getLines(context, highlightedNode.label, 15).reverse().forEach((t, i) => {\n          context.fillText(t, xScale(highlightedNode.x), yScale(highlightedNode.y + highlightedNode.radius / 2) - (2 * (i + 2)));\n        });\n      }\n      let nodeCount = 1;\n      if (!primaryNodes.length && !secondaryNodes.length) {\n        tempData.nodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = d.color;\n          context.fill();\n        });\n      } else {\n        [...primaryNodes, ...secondaryNodes].forEach(function(d, i) {\n          const node = tempData.nodes.find(n => n.id === d.id);\n          context.beginPath();\n          context.arc(xScale(node.x), yScale(node.y), node.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = node.color;\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${node.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(String.fromCharCode(64 + nodeCount++), xScale(node.x), yScale(node.y));\n\n\n          if (!hoveredNode || hoveredNode.id !== d.id) {\n            context.fillStyle = \"#000\";\n            context.font = `400 1.3px OfficeCodeProWeb`;\n            const shortenedLabel = d.label.length <= 30 ? d.label : d.label.slice(0, 30) + '...'\n            getLines(context, shortenedLabel, 15).reverse().forEach((t, i) => {\n              context.fillText(t, xScale(node.x), yScale(node.y + node.radius / 2) - (2 * (i + 2)));\n            });\n          }\n        });\n      }\n\n      if (hoveredNode && hoveredNode.id !== highlightedId) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        secondaryNodes = [];\n        proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n          const node2 = tempData.nodes.find(n => n.id === trg);\n          if (node2) {\n            const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n            const numSecondary = proximityNodes[node.id].length - numPrimary;\n            if (i < numPrimary) {\n              const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              primaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            } else {\n              const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              secondaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            }\n          }\n        });\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [...primaryNodes, ...secondaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.new_x));\n          allEdgeYValues.push(yScale(n.new_y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        const t = interval(function(elapsed) {\n          shouldTick = false;\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            const currentNode = tempData.nodes.find(d => d.id === n.id);\n            if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n              currentNode.x = currentNode.new_x;\n            } else {\n              shouldTick = true;\n              currentNode.x = currentNode.x > currentNode.new_x\n                ? currentNode.x - currentNode.x_interval\n                : currentNode.x + currentNode.x_interval;\n            }\n            if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n              currentNode.y = currentNode.new_y;\n            } else {\n              shouldTick = true;\n              currentNode.y = currentNode.y > currentNode.new_y\n                ? currentNode.y - currentNode.y_interval\n                : currentNode.y + currentNode.y_interval;\n            }\n          });\n          simulationUpdate();\n          if (!shouldTick || elapsed > 350) {\n            t.stop()\n          };\n        }, 10);\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes, ...secondaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n        n.x = n.initial_x;\n        n.y = n.initial_y;\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      secondaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  setTimeout(() => {\n    update.clearSelections();\n  }, 0)\n\n  return update;\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [nodeList, setNodeList] = useState(undefined);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null\n\n  return (\n    <div>\n      {tooltip}\n      <div ref={rootNodeRef} />\n      <Table\n        showPng={true}\n        nodes={nodeList}\n        hovered={hovered}\n        updateSimulation={updateSimulation}\n        proximityScale={proximityScale}\n      />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapClustersRingsRCASizing.js';\nimport Legend from '../components/BasicLegend';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n      <Legend tableLayout={true} />\n    </div>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport Table from './PercentTable';\nimport styled from 'styled-components';\nimport {interval} from 'd3-timer';\nimport * as polished from 'polished';\nimport hull from 'hull.js';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nfunction getLines(ctx, text, maxWidth) {\n    var words = text.split(\" \");\n    var lines = [];\n    var currentLine = words[0];\n\n    for (var i = 1; i < words.length; i++) {\n        var word = words[i];\n        var width = ctx.measureText(currentLine + \" \" + word).width;\n        if (width < maxWidth) {\n            currentLine += \" \" + word;\n        } else {\n            lines.push(currentLine);\n            currentLine = word;\n        }\n    }\n    lines.push(currentLine);\n    return lines;\n}\n\n// var roundedPoly = function(ctx, points,radius){\n//     var i, x, y, len, p1, p2, p3, v1, v2, sinA, sinA90, radDirection, drawDirection, angle, halfAngle, cRadius, lenOut;\n//     var asVec = function (p, pp, v) { // convert points to a line with len and normalised\n//         v.x = pp.x - p.x; // x,y as vec\n//         v.y = pp.y - p.y;\n//         v.len = Math.sqrt(v.x * v.x + v.y * v.y); // length of vec\n//         v.nx = v.x / v.len; // normalised\n//         v.ny = v.y / v.len;\n//         v.ang = Math.atan2(v.ny, v.nx); // direction of vec\n//     }\n//     v1 = {};\n//     v2 = {};\n//     len = points.length;                         // number points\n//     p1 = points[len - 1];                        // start at end of path\n//     for (i = 0; i < len; i++) {                  // do each corner\n//         p2 = points[(i) % len];                  // the corner point that is being rounded\n//         p3 = points[(i + 1) % len];\n//         // get the corner as vectors out away from corner\n//         asVec(p2, p1, v1);                       // vec back from corner point\n//         asVec(p2, p3, v2);                       // vec forward from corner point\n//         // get corners cross product (asin of angle)\n//         sinA = v1.nx * v2.ny - v1.ny * v2.nx;    // cross product\n//         // get cross product of first line and perpendicular second line\n//         sinA90 = v1.nx * v2.nx - v1.ny * -v2.ny; // cross product to normal of line 2\n//         angle = Math.asin(sinA);                 // get the angle\n//         radDirection = 1;                        // may need to reverse the radius\n//         drawDirection = false;                   // may need to draw the arc anticlockwise\n//         // find the correct quadrant for circle center\n//         if (sinA90 < 0) {\n//             if (angle < 0) {\n//                 angle = Math.PI + angle; // add 180 to move us to the 3 quadrant\n//             } else {\n//                 angle = Math.PI - angle; // move back into the 2nd quadrant\n//                 radDirection = -1;\n//                 drawDirection = true;\n//             }\n//         } else {\n//             if (angle > 0) {\n//                 radDirection = -1;\n//                 drawDirection = true;\n//             }\n//         }\n//         halfAngle = angle / 2;\n//         // get distance from corner to point where round corner touches line\n//         lenOut = Math.abs(Math.cos(halfAngle) * radius / Math.sin(halfAngle));\n//         if (lenOut > Math.min(v1.len / 2, v2.len / 2)) { // fix if longer than half line length\n//             lenOut = Math.min(v1.len / 2, v2.len / 2);\n//             // ajust the radius of corner rounding to fit\n//             cRadius = Math.abs(lenOut * Math.sin(halfAngle) / Math.cos(halfAngle));\n//         } else {\n//             cRadius = radius;\n//         }\n//         x = p2.x + v2.nx * lenOut; // move out from corner along second line to point where rounded circle touches\n//         y = p2.y + v2.ny * lenOut;\n//         x += -v2.ny * cRadius * radDirection; // move away from line to circle center\n//         y += v2.nx * cRadius * radDirection;\n//         // x,y is the rounded corner circle center\n//         ctx.arc(x, y, cRadius, v1.ang + Math.PI / 2 * radDirection, v2.ang - Math.PI / 2 * radDirection, drawDirection); // draw the arc clockwise\n//         p1 = p2;\n//         p2 = p3;\n//     }\n//     ctx.closePath();\n// }\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-clusters-custom-2.json'));\nconst proximityNodes = JSON.parse(raw('../data/proximity-min-max.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\nconst clusterMap = JSON.parse(raw('../data/clusters-mapping-1.json'));\n\nconst allProximities = [];\nfor (let node in proximityNodes) {\n  proximityNodes[node].forEach(({proximity}) => allProximities.push(proximity));\n}\nconst proximityRange = d3.extent(allProximities);\nconst proximityScale = d3.scaleLinear()\n    .domain(proximityRange)\n    .range([0, 100]);\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth - 450;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  // const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    // let radius = Math.random() * 6;\n    // radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    const label = industry6Digit.name;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    \n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n\n    return {\n      ...n,\n      radius,\n      color,\n      parent: current,\n      label,\n      initial_x: n.x,\n      initial_y: n.y,\n    }\n  })\n\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.3, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .alphaDecay(0.99)\n\n  let transform = d3.zoomIdentity;\n\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n  let secondaryNodes = [];\n  let shouldTick = false;\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    function drawPoint(r, currentPoint, totalPoints, centerX, centerY) {  \n\n      var theta = ((Math.PI*2) / totalPoints);\n      var angle = (theta * currentPoint);\n\n      const x = (r * Math.cos(angle) + centerX);\n      const y = (r * Math.sin(angle) + centerY);\n\n      return {x, y};\n    }\n\n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        if (!shouldTick) {\n          hoveredNode = dragsubject();\n          setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n          simulationUpdate();\n        }\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        if (node) {\n          highlightedNode = node;\n          primaryNodes = [];\n          secondaryNodes = [];\n          proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n            const node2 = tempData.nodes.find(n => n.id === trg);\n            if (node2) {\n              const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n              const numSecondary = proximityNodes[node.id].length - numPrimary;\n              if (i < numPrimary) {\n                const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                primaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              } else {\n                const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                secondaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              }\n            }\n          });\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.new_x));\n            allEdgeYValues.push(yScale(n.new_y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale))\n\n          const t = interval(function(elapsed) {\n            shouldTick = false;\n            [...primaryNodes, ...secondaryNodes].forEach(n => {\n              const currentNode = tempData.nodes.find(d => d.id === n.id);\n              if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n                currentNode.x = currentNode.new_x;\n              } else {\n                shouldTick = true;\n                currentNode.x = currentNode.x > currentNode.new_x\n                  ? currentNode.x - currentNode.x_interval\n                  : currentNode.x + currentNode.x_interval;\n              }\n              if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n                currentNode.y = currentNode.new_y;\n              } else {\n                shouldTick = true;\n                currentNode.y = currentNode.y > currentNode.new_y\n                  ? currentNode.y - currentNode.y_interval\n                  : currentNode.y + currentNode.y_interval;\n              }\n            });\n            simulationUpdate();\n            if (!shouldTick || elapsed > 350) {\n              t.stop()\n            };\n          }, 10);\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes, ...secondaryNodes],\n          })\n          setHovered({node: undefined, coords: {x: d3.event.x, y: d3.event.y}});\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          if ((!primaryNodes.length && !secondaryNodes.length) ||\n                primaryNodes.find(n => n.id === node.id) ||\n                secondaryNodes.find(n => n.id === node.id)) {\n\n            return node;\n          }\n\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n\n      // Draw the cluster shapes \n      if (highlightedId === undefined) {\n        const convexMap = [\n          { id: '4', color: '#93CFD0', coords: [] },\n          { id: '5', color: '#488098', coords: [] },\n          { id: '9', color: '#77C898', coords: [] },\n          { id: '10', color: '#A973BE', coords: [] },\n          { id: '12', color: '#F1866C', coords: [] },\n          { id: '13', color: '#D35162', coords: [] },\n          { id: '14', color: '#FFC135', coords: [] },\n        ]\n\n        clusterMap.forEach(({naics, C1}) => {\n          const node = tempData.nodes.find(({id}) => id.toString() === naics.toString());\n          const convex = convexMap.find(({id}) => id.toString() === C1.toString());\n          if (node && convex) {\n            convex.coords.push([node.x, node.y]);\n          }\n        })\n\n        // const cornerRadius = 30;\n        context.lineWidth = 2;\n        convexMap.forEach(({coords, color}) => {\n          context.fillStyle = polished.rgba(color, 0.095);\n          context.strokeStyle = polished.rgba(color, 0.5);\n          context.beginPath(); // start a new path\n\n          // const points = hull(coords.map(([x, y]) => [xScale(x), yScale(y)]), 60)\n          //                 .map(([x, y]) => ({x, y}));\n          // roundedPoly(context, points, cornerRadius);\n          // context.fill();\n          // context.stroke();\n\n          const points = hull(coords.map(([x, y]) => [xScale(x), yScale(y)]), 200)\n          context.beginPath();\n          context.lineCap = 'round'\n          points.forEach((point, i) => {\n            if (i === 0) {\n              context.moveTo(...point);\n            } else {\n              context.lineTo(...point);\n            }\n          })\n          context.closePath();\n          context.stroke();\n          context.fill();\n        })\n        context.lineWidth = 1;\n      } \n\n\n      // Draw the nodes\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          20 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.strokeStyle = '#dfdfdf';\n        context.lineWidth = 0.2;\n        context.stroke();\n\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          40 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.stroke();\n\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n\n\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = \"#000\";\n        context.font = `400 1.3px OfficeCodeProWeb`;\n        getLines(context, highlightedNode.label, 15).reverse().forEach((t, i) => {\n          context.fillText(t, xScale(highlightedNode.x), yScale(highlightedNode.y) - (2 * (i + 2)));\n        });\n      }\n      let nodeCount = 1;\n      if (!primaryNodes.length && !secondaryNodes.length) {\n        tempData.nodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = !hoveredNode ||\n            (hoveredNode.id === d.id || proximityNodes[hoveredNode.id].find(n => n.trg === d.id))\n            ? d.color : polished.rgba(d.color, 0.125);\n          context.fill();\n        });\n\n\n        if (hoveredNode) {\n          const linkedNodes = [hoveredNode];\n          proximityNodes[hoveredNode.id].forEach(function({trg}) {\n            const targetNode = tempData.nodes.find(({id}) => id === trg);\n            context.beginPath();\n            context.moveTo(xScale(hoveredNode.x), yScale(hoveredNode.y));\n            context.lineTo(xScale(targetNode.x), yScale(targetNode.y));\n            context.strokeStyle = '#afafaf';\n            context.stroke();\n            linkedNodes.push(targetNode);\n          });\n\n          linkedNodes.forEach(function(d, i) {\n            if (d) {\n              context.beginPath();\n              context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n              context.fillStyle = d.color;\n              context.fill();\n              context.strokeStyle = '#afafaf';\n              context.stroke();\n            }\n          });\n        }\n      } else {\n        [...primaryNodes, ...secondaryNodes].forEach(function(d, i) {\n          const node = tempData.nodes.find(n => n.id === d.id);\n          context.beginPath();\n          context.arc(xScale(node.x), yScale(node.y), node.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = node.color;\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${node.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(String.fromCharCode(64 + nodeCount++), xScale(node.x), yScale(node.y));\n\n\n          if (!hoveredNode || hoveredNode.id !== d.id) {\n            context.fillStyle = \"#000\";\n            context.font = `400 1.3px OfficeCodeProWeb`;\n            const shortenedLabel = d.label.length <= 30 ? d.label : d.label.slice(0, 30) + '...'\n            getLines(context, shortenedLabel, 15).reverse().forEach((t, i) => {\n              context.fillText(t, xScale(node.x), yScale(node.y) - (2 * (i + 2)));\n            });\n          }\n        });\n      }\n\n      if (hoveredNode && hoveredNode.id !== highlightedId) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        secondaryNodes = [];\n        proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n          const node2 = tempData.nodes.find(n => n.id === trg);\n          if (node2) {\n            const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n            const numSecondary = proximityNodes[node.id].length - numPrimary;\n            if (i < numPrimary) {\n              const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              primaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            } else {\n              const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              secondaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            }\n          }\n        });\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [...primaryNodes, ...secondaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.new_x));\n          allEdgeYValues.push(yScale(n.new_y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        const t = interval(function(elapsed) {\n          shouldTick = false;\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            const currentNode = tempData.nodes.find(d => d.id === n.id);\n            if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n              currentNode.x = currentNode.new_x;\n            } else {\n              shouldTick = true;\n              currentNode.x = currentNode.x > currentNode.new_x\n                ? currentNode.x - currentNode.x_interval\n                : currentNode.x + currentNode.x_interval;\n            }\n            if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n              currentNode.y = currentNode.new_y;\n            } else {\n              shouldTick = true;\n              currentNode.y = currentNode.y > currentNode.new_y\n                ? currentNode.y - currentNode.y_interval\n                : currentNode.y + currentNode.y_interval;\n            }\n          });\n          simulationUpdate();\n          if (!shouldTick || elapsed > 350) {\n            t.stop()\n          };\n        }, 10);\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes, ...secondaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n        n.x = n.initial_x;\n        n.y = n.initial_y;\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      secondaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  setTimeout(() => {\n    update.clearSelections();\n  }, 0)\n\n  return update;\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [nodeList, setNodeList] = useState(undefined);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null\n\n  return (\n    <div>\n      {tooltip}\n      <div ref={rootNodeRef} />\n      <Table\n        nodes={nodeList}\n        hovered={hovered}\n        updateSimulation={updateSimulation}\n        proximityScale={proximityScale}\n      />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapClustersRingsClusterConvex';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n    </div>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport Table from './PercentTable';\nimport styled from 'styled-components';\nimport {interval} from 'd3-timer';\nimport * as polished from 'polished';\nimport hull from 'hull.js';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nfunction getLines(ctx, text, maxWidth) {\n    var words = text.split(\" \");\n    var lines = [];\n    var currentLine = words[0];\n\n    for (var i = 1; i < words.length; i++) {\n        var word = words[i];\n        var width = ctx.measureText(currentLine + \" \" + word).width;\n        if (width < maxWidth) {\n            currentLine += \" \" + word;\n        } else {\n            lines.push(currentLine);\n            currentLine = word;\n        }\n    }\n    lines.push(currentLine);\n    return lines;\n}\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-clusters-custom-2.json'));\nconst proximityNodes = JSON.parse(raw('../data/proximity-min-max.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\nconst clusterMap = JSON.parse(raw('../data/clusters-mapping-1.json'));\n\n// const allC2 = [];\n// clusterMap.forEach(({C2}) => allC2.includes(C2) ? null : allC2.push(C2));\n// console.log(allC2)\n\nconst allProximities = [];\nfor (let node in proximityNodes) {\n  proximityNodes[node].forEach(({proximity}) => allProximities.push(proximity));\n}\nconst proximityRange = d3.extent(allProximities);\nconst proximityScale = d3.scaleLinear()\n    .domain(proximityRange)\n    .range([0, 100]);\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth - 450;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  // const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    // let radius = Math.random() * 6;\n    // radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    const label = industry6Digit.name;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    \n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n\n    return {\n      ...n,\n      radius,\n      color,\n      parent: current,\n      label,\n      initial_x: n.x,\n      initial_y: n.y,\n    }\n  })\n\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.3, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .alphaDecay(0.99)\n\n  let transform = d3.zoomIdentity;\n\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n  let secondaryNodes = [];\n  let shouldTick = false;\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    function drawPoint(r, currentPoint, totalPoints, centerX, centerY) {  \n\n      var theta = ((Math.PI*2) / totalPoints);\n      var angle = (theta * currentPoint);\n\n      const x = (r * Math.cos(angle) + centerX);\n      const y = (r * Math.sin(angle) + centerY);\n\n      return {x, y};\n    }\n\n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        if (!shouldTick) {\n          hoveredNode = dragsubject();\n          setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n          simulationUpdate();\n        }\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        if (node) {\n          highlightedNode = node;\n          primaryNodes = [];\n          secondaryNodes = [];\n          proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n            const node2 = tempData.nodes.find(n => n.id === trg);\n            if (node2) {\n              const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n              const numSecondary = proximityNodes[node.id].length - numPrimary;\n              if (i < numPrimary) {\n                const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                primaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              } else {\n                const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                secondaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              }\n            }\n          });\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.new_x));\n            allEdgeYValues.push(yScale(n.new_y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale))\n\n          const t = interval(function(elapsed) {\n            shouldTick = false;\n            [...primaryNodes, ...secondaryNodes].forEach(n => {\n              const currentNode = tempData.nodes.find(d => d.id === n.id);\n              if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n                currentNode.x = currentNode.new_x;\n              } else {\n                shouldTick = true;\n                currentNode.x = currentNode.x > currentNode.new_x\n                  ? currentNode.x - currentNode.x_interval\n                  : currentNode.x + currentNode.x_interval;\n              }\n              if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n                currentNode.y = currentNode.new_y;\n              } else {\n                shouldTick = true;\n                currentNode.y = currentNode.y > currentNode.new_y\n                  ? currentNode.y - currentNode.y_interval\n                  : currentNode.y + currentNode.y_interval;\n              }\n            });\n            simulationUpdate();\n            if (!shouldTick || elapsed > 350) {\n              t.stop()\n            };\n          }, 10);\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes, ...secondaryNodes],\n          })\n          setHovered({node: undefined, coords: {x: d3.event.x, y: d3.event.y}});\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          if ((!primaryNodes.length && !secondaryNodes.length) ||\n                primaryNodes.find(n => n.id === node.id) ||\n                secondaryNodes.find(n => n.id === node.id)) {\n\n            return node;\n          }\n\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // Draw the cluster shapes \n      if (highlightedId === undefined) {\n        const convexMap = [\n          { id: '0', color: '#93CFD0', coords: [] },\n          { id: '15', color: '#488098', coords: [] },\n          { id: '8', color: '#77C898', coords: [] },\n          { id: '3', color: '#A973BE', coords: [] },\n          { id: '5', color: '#F1866C', coords: [] },\n          { id: '32', color: '#D35162', coords: [] },\n          { id: '14', color: '#FFC135', coords: [] },\n          { id: '24', color: '#93CFD0', coords: [] },\n          { id: '36', color: '#488098', coords: [] },\n          { id: '13', color: '#77C898', coords: [] },\n          { id: '26', color: '#A973BE', coords: [] },\n          { id: '6', color: '#F1866C', coords: [] },\n          { id: '19', color: '#D35162', coords: [] },\n          { id: '29', color: '#FFC135', coords: [] },\n          { id: '20', color: '#93CFD0', coords: [] },\n          { id: '10', color: '#488098', coords: [] },\n          { id: '7', color: '#77C898', coords: [] },\n          { id: '17', color: '#A973BE', coords: [] },\n          { id: '12', color: '#F1866C', coords: [] },\n          { id: '18', color: '#D35162', coords: [] },\n          { id: '35', color: '#FFC135', coords: [] },\n          { id: '21', color: '#93CFD0', coords: [] },\n          { id: '37', color: '#488098', coords: [] },\n          { id: '30', color: '#77C898', coords: [] },\n          { id: '22', color: '#A973BE', coords: [] },\n          { id: '23', color: '#F1866C', coords: [] },\n          { id: '40', color: '#D35162', coords: [] },\n          { id: '27', color: '#FFC135', coords: [] },\n          { id: '28', color: '#93CFD0', coords: [] },\n          { id: '38', color: '#488098', coords: [] },\n          { id: '33', color: '#77C898', coords: [] },\n          { id: '39', color: '#A973BE', coords: [] },\n        ]\n\n        clusterMap.forEach(({naics, C2}) => {\n          const node = tempData.nodes.find(({id}) => id.toString() === naics.toString());\n          const convex = convexMap.find(({id}) => id.toString() === C2.toString());\n          if (node && convex) {\n            convex.coords.push([node.x, node.y]);\n          }\n        })\n\n        // const cornerRadius = 30;\n        context.lineWidth = 2;\n        convexMap.forEach(({coords, color}) => {\n          context.fillStyle = polished.rgba(color, 0.095);\n          context.strokeStyle = polished.rgba(color, 0.5);\n          context.beginPath(); // start a new path\n\n          // const points = hull(coords.map(([x, y]) => [xScale(x), yScale(y)]), 60)\n          //                 .map(([x, y]) => ({x, y}));\n          // roundedPoly(context, points, cornerRadius);\n          // context.fill();\n          // context.stroke();\n\n          const points = hull(coords.map(([x, y]) => [xScale(x), yScale(y)]), 200)\n          context.beginPath();\n          context.lineCap = 'round'\n          points.forEach((point, i) => {\n            if (i === 0) {\n              context.moveTo(...point);\n            } else {\n              context.lineTo(...point);\n            }\n          })\n          context.closePath();\n          context.stroke();\n          context.fill();\n        })\n        context.lineWidth = 1;\n      } \n\n\n      // Draw the nodes\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          20 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.strokeStyle = '#dfdfdf';\n        context.lineWidth = 0.2;\n        context.stroke();\n\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          40 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.stroke();\n\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n\n\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = \"#000\";\n        context.font = `400 1.3px OfficeCodeProWeb`;\n        getLines(context, highlightedNode.label, 15).reverse().forEach((t, i) => {\n          context.fillText(t, xScale(highlightedNode.x), yScale(highlightedNode.y) - (2 * (i + 2)));\n        });\n      }\n      let nodeCount = 1;\n      if (!primaryNodes.length && !secondaryNodes.length) {\n        tempData.nodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = !hoveredNode ||\n            (hoveredNode.id === d.id || proximityNodes[hoveredNode.id].find(n => n.trg === d.id))\n            ? d.color : polished.rgba(d.color, 0.125);\n          context.fill();\n        });\n\n\n        if (hoveredNode) {\n          const linkedNodes = [hoveredNode];\n          proximityNodes[hoveredNode.id].forEach(function({trg}) {\n            const targetNode = tempData.nodes.find(({id}) => id === trg);\n            context.beginPath();\n            context.moveTo(xScale(hoveredNode.x), yScale(hoveredNode.y));\n            context.lineTo(xScale(targetNode.x), yScale(targetNode.y));\n            context.strokeStyle = '#afafaf';\n            context.stroke();\n            linkedNodes.push(targetNode);\n          });\n\n          linkedNodes.forEach(function(d, i) {\n            if (d) {\n              context.beginPath();\n              context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n              context.fillStyle = d.color;\n              context.fill();\n              context.strokeStyle = '#afafaf';\n              context.stroke();\n            }\n          });\n        }\n      } else {\n        [...primaryNodes, ...secondaryNodes].forEach(function(d, i) {\n          const node = tempData.nodes.find(n => n.id === d.id);\n          context.beginPath();\n          context.arc(xScale(node.x), yScale(node.y), node.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = node.color;\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${node.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(String.fromCharCode(64 + nodeCount++), xScale(node.x), yScale(node.y));\n\n\n          if (!hoveredNode || hoveredNode.id !== d.id) {\n            context.fillStyle = \"#000\";\n            context.font = `400 1.3px OfficeCodeProWeb`;\n            const shortenedLabel = d.label.length <= 30 ? d.label : d.label.slice(0, 30) + '...'\n            getLines(context, shortenedLabel, 15).reverse().forEach((t, i) => {\n              context.fillText(t, xScale(node.x), yScale(node.y) - (2 * (i + 2)));\n            });\n          }\n        });\n      }\n\n      if (hoveredNode && hoveredNode.id !== highlightedId) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        secondaryNodes = [];\n        proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n          const node2 = tempData.nodes.find(n => n.id === trg);\n          if (node2) {\n            const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n            const numSecondary = proximityNodes[node.id].length - numPrimary;\n            if (i < numPrimary) {\n              const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              primaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            } else {\n              const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              secondaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            }\n          }\n        });\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [...primaryNodes, ...secondaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.new_x));\n          allEdgeYValues.push(yScale(n.new_y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        const t = interval(function(elapsed) {\n          shouldTick = false;\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            const currentNode = tempData.nodes.find(d => d.id === n.id);\n            if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n              currentNode.x = currentNode.new_x;\n            } else {\n              shouldTick = true;\n              currentNode.x = currentNode.x > currentNode.new_x\n                ? currentNode.x - currentNode.x_interval\n                : currentNode.x + currentNode.x_interval;\n            }\n            if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n              currentNode.y = currentNode.new_y;\n            } else {\n              shouldTick = true;\n              currentNode.y = currentNode.y > currentNode.new_y\n                ? currentNode.y - currentNode.y_interval\n                : currentNode.y + currentNode.y_interval;\n            }\n          });\n          simulationUpdate();\n          if (!shouldTick || elapsed > 350) {\n            t.stop()\n          };\n        }, 10);\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes, ...secondaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n        n.x = n.initial_x;\n        n.y = n.initial_y;\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      secondaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  setTimeout(() => {\n    update.clearSelections();\n  }, 0)\n\n  return update;\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [nodeList, setNodeList] = useState(undefined);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null\n\n  return (\n    <div>\n      {tooltip}\n      <div ref={rootNodeRef} />\n      <Table\n        nodes={nodeList}\n        hovered={hovered}\n        updateSimulation={updateSimulation}\n        proximityScale={proximityScale}\n      />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapClustersRingsClusterConvexLv2';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n    </div>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport Table from './PercentTable';\nimport styled from 'styled-components';\nimport {interval} from 'd3-timer';\nimport * as polished from 'polished';\nimport hull from 'hull.js';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nfunction getLines(ctx, text, maxWidth) {\n    var words = text.split(\" \");\n    var lines = [];\n    var currentLine = words[0];\n\n    for (var i = 1; i < words.length; i++) {\n        var word = words[i];\n        var width = ctx.measureText(currentLine + \" \" + word).width;\n        if (width < maxWidth) {\n            currentLine += \" \" + word;\n        } else {\n            lines.push(currentLine);\n            currentLine = word;\n        }\n    }\n    lines.push(currentLine);\n    return lines;\n}\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-clusters-custom-2.json'));\nconst proximityNodes = JSON.parse(raw('../data/proximity-min-max.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\nconst clusterMap = JSON.parse(raw('../data/clusters-mapping-1.json'));\n\n// const allC3 = [];\n// clusterMap.forEach(({C3}) => allC3.includes(C3) ? null : allC3.push(C3));\n// console.log(allC3)\n\nconst allProximities = [];\nfor (let node in proximityNodes) {\n  proximityNodes[node].forEach(({proximity}) => allProximities.push(proximity));\n}\nconst proximityRange = d3.extent(allProximities);\nconst proximityScale = d3.scaleLinear()\n    .domain(proximityRange)\n    .range([0, 100]);\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth - 450;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  // const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    // let radius = Math.random() * 6;\n    // radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    const label = industry6Digit.name;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    \n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n\n    return {\n      ...n,\n      radius,\n      color,\n      parent: current,\n      label,\n      initial_x: n.x,\n      initial_y: n.y,\n    }\n  })\n\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.3, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .alphaDecay(0.99)\n\n  let transform = d3.zoomIdentity;\n\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n  let secondaryNodes = [];\n  let shouldTick = false;\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    function drawPoint(r, currentPoint, totalPoints, centerX, centerY) {  \n\n      var theta = ((Math.PI*2) / totalPoints);\n      var angle = (theta * currentPoint);\n\n      const x = (r * Math.cos(angle) + centerX);\n      const y = (r * Math.sin(angle) + centerY);\n\n      return {x, y};\n    }\n\n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        if (!shouldTick) {\n          hoveredNode = dragsubject();\n          setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n          simulationUpdate();\n        }\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        if (node) {\n          highlightedNode = node;\n          primaryNodes = [];\n          secondaryNodes = [];\n          proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n            const node2 = tempData.nodes.find(n => n.id === trg);\n            if (node2) {\n              const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n              const numSecondary = proximityNodes[node.id].length - numPrimary;\n              if (i < numPrimary) {\n                const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                primaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              } else {\n                const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                secondaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              }\n            }\n          });\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.new_x));\n            allEdgeYValues.push(yScale(n.new_y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale))\n\n          const t = interval(function(elapsed) {\n            shouldTick = false;\n            [...primaryNodes, ...secondaryNodes].forEach(n => {\n              const currentNode = tempData.nodes.find(d => d.id === n.id);\n              if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n                currentNode.x = currentNode.new_x;\n              } else {\n                shouldTick = true;\n                currentNode.x = currentNode.x > currentNode.new_x\n                  ? currentNode.x - currentNode.x_interval\n                  : currentNode.x + currentNode.x_interval;\n              }\n              if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n                currentNode.y = currentNode.new_y;\n              } else {\n                shouldTick = true;\n                currentNode.y = currentNode.y > currentNode.new_y\n                  ? currentNode.y - currentNode.y_interval\n                  : currentNode.y + currentNode.y_interval;\n              }\n            });\n            simulationUpdate();\n            if (!shouldTick || elapsed > 350) {\n              t.stop()\n            };\n          }, 10);\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes, ...secondaryNodes],\n          })\n          setHovered({node: undefined, coords: {x: d3.event.x, y: d3.event.y}});\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          if ((!primaryNodes.length && !secondaryNodes.length) ||\n                primaryNodes.find(n => n.id === node.id) ||\n                secondaryNodes.find(n => n.id === node.id)) {\n\n            return node;\n          }\n\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n      // Draw the cluster shapes \n      if (highlightedId === undefined) {\n        const convexMap = [\n          { id: '0', color: '#93CFD0', coords: [] },\n          { id: '2', color: '#488098', coords: [] },\n          { id: '1', color: '#77C898', coords: [] },\n          { id: '4', color: '#A973BE', coords: [] },\n          { id: '3', color: '#F1866C', coords: [] },\n          { id: '38', color: '#D35162', coords: [] },\n          { id: '15', color: '#FFC135', coords: [] },\n          { id: '5', color: '#93CFD0', coords: [] },\n          { id: '16', color: '#488098', coords: [] },\n          { id: '18', color: '#77C898', coords: [] },\n          { id: '20', color: '#A973BE', coords: [] },\n          { id: '19', color: '#F1866C', coords: [] },\n          { id: '21', color: '#D35162', coords: [] },\n          { id: '6', color: '#FFC135', coords: [] },\n          { id: '8', color: '#93CFD0', coords: [] },\n          { id: '77', color: '#488098', coords: [] },\n          { id: '37', color: '#77C898', coords: [] },\n          { id: '57', color: '#A973BE', coords: [] },\n          { id: '54', color: '#F1866C', coords: [] },\n          { id: '68', color: '#D35162', coords: [] },\n          { id: '53', color: '#FFC135', coords: [] },\n          { id: '55', color: '#93CFD0', coords: [] },\n          { id: '58', color: '#488098', coords: [] },\n          { id: '56', color: '#77C898', coords: [] },\n          { id: '81', color: '#A973BE', coords: [] },\n          { id: '7', color: '#F1866C', coords: [] },\n          { id: '9', color: '#D35162', coords: [] },\n          { id: '26', color: '#FFC135', coords: [] },\n          { id: '27', color: '#93CFD0', coords: [] },\n          { id: '24', color: '#488098', coords: [] },\n          { id: '28', color: '#77C898', coords: [] },\n          { id: '30', color: '#A973BE', coords: [] },\n          { id: '25', color: '#93CFD0', coords: [] },\n          { id: '31', color: '#488098', coords: [] },\n          { id: '29', color: '#77C898', coords: [] },\n          { id: '36', color: '#A973BE', coords: [] },\n          { id: '35', color: '#F1866C', coords: [] },\n          { id: '32', color: '#D35162', coords: [] },\n          { id: '33', color: '#FFC135', coords: [] },\n          { id: '34', color: '#93CFD0', coords: [] },\n          { id: '83', color: '#488098', coords: [] },\n          { id: '64', color: '#77C898', coords: [] },\n          { id: '62', color: '#A973BE', coords: [] },\n          { id: '59', color: '#F1866C', coords: [] },\n          { id: '61', color: '#D35162', coords: [] },\n          { id: '63', color: '#FFC135', coords: [] },\n          { id: '78', color: '#93CFD0', coords: [] },\n          { id: '75', color: '#488098', coords: [] },\n          { id: '13', color: '#77C898', coords: [] },\n          { id: '14', color: '#A973BE', coords: [] },\n          { id: '46', color: '#F1866C', coords: [] },\n          { id: '43', color: '#D35162', coords: [] },\n          { id: '71', color: '#FFC135', coords: [] },\n          { id: '69', color: '#93CFD0', coords: [] },\n          { id: '10', color: '#488098', coords: [] },\n          { id: '11', color: '#77C898', coords: [] },\n          { id: '48', color: '#A973BE', coords: [] },\n          { id: '12', color: '#F1866C', coords: [] },\n          { id: '45', color: '#D35162', coords: [] },\n          { id: '22', color: '#FFC135', coords: [] },\n          { id: '17', color: '#93CFD0', coords: [] },\n          { id: '40', color: '#488098', coords: [] },\n          { id: '23', color: '#77C898', coords: [] },\n          { id: '42', color: '#A973BE', coords: [] },\n          { id: '80', color: '#93CFD0', coords: [] },\n          { id: '39', color: '#488098', coords: [] },\n          { id: '44', color: '#77C898', coords: [] },\n          { id: '41', color: '#A973BE', coords: [] },\n          { id: '47', color: '#F1866C', coords: [] },\n          { id: '50', color: '#D35162', coords: [] },\n          { id: '73', color: '#FFC135', coords: [] },\n          { id: '49', color: '#93CFD0', coords: [] },\n          { id: '85', color: '#488098', coords: [] },\n          { id: '84', color: '#77C898', coords: [] },\n          { id: '60', color: '#A973BE', coords: [] },\n          { id: '82', color: '#F1866C', coords: [] },\n          { id: '72', color: '#D35162', coords: [] },\n          { id: '74', color: '#FFC135', coords: [] },\n          { id: '51', color: '#93CFD0', coords: [] },\n          { id: '52', color: '#488098', coords: [] },\n          { id: '79', color: '#77C898', coords: [] },\n          { id: '88', color: '#A973BE', coords: [] },\n          { id: '65', color: '#F1866C', coords: [] },\n          { id: '66', color: '#D35162', coords: [] },\n          { id: '70', color: '#FFC135', coords: [] },\n          { id: '67', color: '#93CFD0', coords: [] },\n          { id: '86', color: '#488098', coords: [] },\n          { id: '76', color: '#77C898', coords: [] },\n          { id: '87', color: '#A973BE', coords: [] },\n        ]\n\n        clusterMap.forEach(({naics, C3}) => {\n          const node = tempData.nodes.find(({id}) => id.toString() === naics.toString());\n          const convex = convexMap.find(({id}) => id.toString() === C3.toString());\n          if (node && convex) {\n            convex.coords.push([node.x, node.y]);\n          }\n        })\n\n        // const cornerRadius = 30;\n        context.lineWidth = 2;\n        convexMap.forEach(({coords, color}) => {\n          context.fillStyle = polished.rgba(color, 0.095);\n          context.strokeStyle = polished.rgba(color, 0.5);\n          context.beginPath(); // start a new path\n\n          // const points = hull(coords.map(([x, y]) => [xScale(x), yScale(y)]), 60)\n          //                 .map(([x, y]) => ({x, y}));\n          // roundedPoly(context, points, cornerRadius);\n          // context.fill();\n          // context.stroke();\n\n          const points = hull(coords.map(([x, y]) => [xScale(x), yScale(y)]), 200)\n          context.beginPath();\n          context.lineCap = 'round'\n          points.forEach((point, i) => {\n            if (i === 0) {\n              context.moveTo(...point);\n            } else {\n              context.lineTo(...point);\n            }\n          })\n          context.closePath();\n          context.stroke();\n          context.fill();\n        })\n        context.lineWidth = 1;\n      } \n\n\n      // Draw the nodes\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          20 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.strokeStyle = '#dfdfdf';\n        context.lineWidth = 0.2;\n        context.stroke();\n\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          40 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.stroke();\n\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n\n\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = \"#000\";\n        context.font = `400 1.3px OfficeCodeProWeb`;\n        getLines(context, highlightedNode.label, 15).reverse().forEach((t, i) => {\n          context.fillText(t, xScale(highlightedNode.x), yScale(highlightedNode.y) - (2 * (i + 2)));\n        });\n      }\n      let nodeCount = 1;\n      if (!primaryNodes.length && !secondaryNodes.length) {\n        tempData.nodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = !hoveredNode ||\n            (hoveredNode.id === d.id || proximityNodes[hoveredNode.id].find(n => n.trg === d.id))\n            ? d.color : polished.rgba(d.color, 0.125);\n          context.fill();\n        });\n\n\n        if (hoveredNode) {\n          const linkedNodes = [hoveredNode];\n          proximityNodes[hoveredNode.id].forEach(function({trg}) {\n            const targetNode = tempData.nodes.find(({id}) => id === trg);\n            context.beginPath();\n            context.moveTo(xScale(hoveredNode.x), yScale(hoveredNode.y));\n            context.lineTo(xScale(targetNode.x), yScale(targetNode.y));\n            context.strokeStyle = '#afafaf';\n            context.stroke();\n            linkedNodes.push(targetNode);\n          });\n\n          linkedNodes.forEach(function(d, i) {\n            if (d) {\n              context.beginPath();\n              context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n              context.fillStyle = d.color;\n              context.fill();\n              context.strokeStyle = '#afafaf';\n              context.stroke();\n            }\n          });\n        }\n      } else {\n        [...primaryNodes, ...secondaryNodes].forEach(function(d, i) {\n          const node = tempData.nodes.find(n => n.id === d.id);\n          context.beginPath();\n          context.arc(xScale(node.x), yScale(node.y), node.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = node.color;\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${node.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(String.fromCharCode(64 + nodeCount++), xScale(node.x), yScale(node.y));\n\n\n          if (!hoveredNode || hoveredNode.id !== d.id) {\n            context.fillStyle = \"#000\";\n            context.font = `400 1.3px OfficeCodeProWeb`;\n            const shortenedLabel = d.label.length <= 30 ? d.label : d.label.slice(0, 30) + '...'\n            getLines(context, shortenedLabel, 15).reverse().forEach((t, i) => {\n              context.fillText(t, xScale(node.x), yScale(node.y) - (2 * (i + 2)));\n            });\n          }\n        });\n      }\n\n      if (hoveredNode && hoveredNode.id !== highlightedId) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        secondaryNodes = [];\n        proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n          const node2 = tempData.nodes.find(n => n.id === trg);\n          if (node2) {\n            const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n            const numSecondary = proximityNodes[node.id].length - numPrimary;\n            if (i < numPrimary) {\n              const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              primaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            } else {\n              const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              secondaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            }\n          }\n        });\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [...primaryNodes, ...secondaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.new_x));\n          allEdgeYValues.push(yScale(n.new_y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        const t = interval(function(elapsed) {\n          shouldTick = false;\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            const currentNode = tempData.nodes.find(d => d.id === n.id);\n            if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n              currentNode.x = currentNode.new_x;\n            } else {\n              shouldTick = true;\n              currentNode.x = currentNode.x > currentNode.new_x\n                ? currentNode.x - currentNode.x_interval\n                : currentNode.x + currentNode.x_interval;\n            }\n            if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n              currentNode.y = currentNode.new_y;\n            } else {\n              shouldTick = true;\n              currentNode.y = currentNode.y > currentNode.new_y\n                ? currentNode.y - currentNode.y_interval\n                : currentNode.y + currentNode.y_interval;\n            }\n          });\n          simulationUpdate();\n          if (!shouldTick || elapsed > 350) {\n            t.stop()\n          };\n        }, 10);\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes, ...secondaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n        n.x = n.initial_x;\n        n.y = n.initial_y;\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      secondaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  setTimeout(() => {\n    update.clearSelections();\n  }, 0)\n\n  return update;\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [nodeList, setNodeList] = useState(undefined);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null\n\n  return (\n    <div>\n      {tooltip}\n      <div ref={rootNodeRef} />\n      <Table\n        nodes={nodeList}\n        hovered={hovered}\n        updateSimulation={updateSimulation}\n        proximityScale={proximityScale}\n      />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapClustersRingsClusterConvexLv3';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n    </div>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport raw from 'raw.macro';\nimport Table from './PercentTable';\nimport styled from 'styled-components';\nimport {interval} from 'd3-timer';\nimport * as polished from 'polished';\nimport hull from 'hull.js';\n\nconst Tooltip = styled.div`\n  position: fixed;\n  max-width: 100px;\n  font-family: 'OfficeCodeProWeb', monospace;\n  font-size: 0.75rem;\n  text-align: center;\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1rem));\n  font-weight: 600;\n  color: black;\n  text-shadow:\n   -1px -1px 0 #fff,  \n    1px -1px 0 #fff,\n    -1px 1px 0 #fff,\n     1px 1px 0 #fff;\n`;\n\nfunction getLines(ctx, text, maxWidth) {\n    var words = text.split(\" \");\n    var lines = [];\n    var currentLine = words[0];\n\n    for (var i = 1; i < words.length; i++) {\n        var word = words[i];\n        var width = ctx.measureText(currentLine + \" \" + word).width;\n        if (width < maxWidth) {\n            currentLine += \" \" + word;\n        } else {\n            lines.push(currentLine);\n            currentLine = word;\n        }\n    }\n    lines.push(currentLine);\n    return lines;\n}\n\n// var roundedPoly = function(ctx, points,radius){\n//     var i, x, y, len, p1, p2, p3, v1, v2, sinA, sinA90, radDirection, drawDirection, angle, halfAngle, cRadius, lenOut;\n//     var asVec = function (p, pp, v) { // convert points to a line with len and normalised\n//         v.x = pp.x - p.x; // x,y as vec\n//         v.y = pp.y - p.y;\n//         v.len = Math.sqrt(v.x * v.x + v.y * v.y); // length of vec\n//         v.nx = v.x / v.len; // normalised\n//         v.ny = v.y / v.len;\n//         v.ang = Math.atan2(v.ny, v.nx); // direction of vec\n//     }\n//     v1 = {};\n//     v2 = {};\n//     len = points.length;                         // number points\n//     p1 = points[len - 1];                        // start at end of path\n//     for (i = 0; i < len; i++) {                  // do each corner\n//         p2 = points[(i) % len];                  // the corner point that is being rounded\n//         p3 = points[(i + 1) % len];\n//         // get the corner as vectors out away from corner\n//         asVec(p2, p1, v1);                       // vec back from corner point\n//         asVec(p2, p3, v2);                       // vec forward from corner point\n//         // get corners cross product (asin of angle)\n//         sinA = v1.nx * v2.ny - v1.ny * v2.nx;    // cross product\n//         // get cross product of first line and perpendicular second line\n//         sinA90 = v1.nx * v2.nx - v1.ny * -v2.ny; // cross product to normal of line 2\n//         angle = Math.asin(sinA);                 // get the angle\n//         radDirection = 1;                        // may need to reverse the radius\n//         drawDirection = false;                   // may need to draw the arc anticlockwise\n//         // find the correct quadrant for circle center\n//         if (sinA90 < 0) {\n//             if (angle < 0) {\n//                 angle = Math.PI + angle; // add 180 to move us to the 3 quadrant\n//             } else {\n//                 angle = Math.PI - angle; // move back into the 2nd quadrant\n//                 radDirection = -1;\n//                 drawDirection = true;\n//             }\n//         } else {\n//             if (angle > 0) {\n//                 radDirection = -1;\n//                 drawDirection = true;\n//             }\n//         }\n//         halfAngle = angle / 2;\n//         // get distance from corner to point where round corner touches line\n//         lenOut = Math.abs(Math.cos(halfAngle) * radius / Math.sin(halfAngle));\n//         if (lenOut > Math.min(v1.len / 2, v2.len / 2)) { // fix if longer than half line length\n//             lenOut = Math.min(v1.len / 2, v2.len / 2);\n//             // ajust the radius of corner rounding to fit\n//             cRadius = Math.abs(lenOut * Math.sin(halfAngle) / Math.cos(halfAngle));\n//         } else {\n//             cRadius = radius;\n//         }\n//         x = p2.x + v2.nx * lenOut; // move out from corner along second line to point where rounded circle touches\n//         y = p2.y + v2.ny * lenOut;\n//         x += -v2.ny * cRadius * radDirection; // move away from line to circle center\n//         y += v2.nx * cRadius * radDirection;\n//         // x,y is the rounded corner circle center\n//         ctx.arc(x, y, cRadius, v1.ang + Math.PI / 2 * radDirection, v2.ang - Math.PI / 2 * radDirection, drawDirection); // draw the arc clockwise\n//         p1 = p2;\n//         p2 = p3;\n//     }\n//     ctx.closePath();\n// }\n\nconst minExpectedScreenSize = 1020;\n\n// const data = JSON.parse(raw('../data/industry-space-with-start-positions.json'));\nconst data = JSON.parse(raw('../data/umap-clusters-custom-2.json'));\nconst proximityNodes = JSON.parse(raw('../data/proximity-min-max.json'));\nconst naicsData = JSON.parse(raw('../data/naics_2017.json'));\nconst clusterMap = JSON.parse(raw('../data/clusters-mapping-2.json'));\n\nconst allProximities = [];\nfor (let node in proximityNodes) {\n  proximityNodes[node].forEach(({proximity}) => allProximities.push(proximity));\n}\nconst proximityRange = d3.extent(allProximities);\nconst proximityScale = d3.scaleLinear()\n    .domain(proximityRange)\n    .range([0, 100]);\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst createForceGraph = (rootEl, data, setNodeList, setHovered) => {\n  const root = d3.select(rootEl);\n\n  const height = window.innerHeight;\n  const width =  window.innerWidth - 450;\n\n  const smallerSize = width < height ? width : height;\n  const padding = smallerSize * 0.1;\n  const widthMargin = (width - smallerSize) / 2;\n  const heightMargin = (height - (smallerSize * 0.9)) / 2;\n  const rangeWidth = width - padding - widthMargin;\n  const rangeHeight = height - padding - heightMargin;\n\n  const allXValues = [];\n  const allYValues = [];\n  data.nodes.forEach(({x, y}) => {\n    allXValues.push(x);\n    allYValues.push(y);\n  });\n\n  // const radiusAdjuster = smallerSize / minExpectedScreenSize;\n\n  data.nodes = data.nodes.map(n => {\n    // let radius = Math.random() * 6;\n    // radius = radius < 2.5 ? 2.5 * radiusAdjuster : radius * radiusAdjuster;\n    const radius = 2.5;\n    const industry6Digit = naicsData.find(({code}) => n.id.toString() === code);\n    if (!industry6Digit) {\n      throw new Error('undefined industry');\n      \n    }\n    const naics_id = industry6Digit.naics_id;\n    const label = industry6Digit.name;\n    let topLevelParentId = naics_id.toString();\n    let current = naicsData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n    // eslint-disable-next-line\n      current = naicsData.find(datum => datum.naics_id === current.parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    \n    const {color} = colorMap.find(({id}) => id === topLevelParentId);\n\n    return {\n      ...n,\n      radius,\n      color,\n      parent: current,\n      label,\n      initial_x: n.x,\n      initial_y: n.y,\n    }\n  })\n\n\n  const xRange = d3.extent(allXValues);\n  const yRange = d3.extent(allYValues);\n\n  const xScale = d3.scaleLinear()\n    .domain(xRange)\n    .range([0 + padding + widthMargin, rangeWidth]);\n\n  const yScale = d3.scaleLinear()\n    .domain(yRange)\n    .range([ rangeHeight, 0 + padding + heightMargin]);\n\n  const canvas = root.append('canvas')\n    .attr('width', width + 'px')\n    .attr('height', height + 'px')\n    .node();\n\n  const context = canvas.getContext('2d');\n\n\n  const simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(rangeWidth / 1.3, rangeHeight / 1.8))\n                .force(\"charge\", d3.forceManyBody().strength(-10))\n                .force(\"collision\", d3.forceCollide().radius(function(d) {\n                  return (d.radius * 1.25) * (minExpectedScreenSize / smallerSize);\n                }))\n                .force(\"link\", d3.forceLink().strength(d => d.proximity).id(d => d.id))\n                .alphaDecay(0.99)\n\n  let transform = d3.zoomIdentity;\n\n\n  let hoveredNode = undefined;\n  let highlightedNode = undefined;\n  let primaryNodes = [];\n  let secondaryNodes = [];\n  let shouldTick = false;\n\n  const update = initGraph(data);\n\n  function initGraph(tempData){\n\n    function zoomed() {\n      transform = d3.event.transform;\n      simulationUpdate();\n    }\n\n    const zoom = d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed);\n\n    function drawPoint(r, currentPoint, totalPoints, centerX, centerY) {  \n\n      var theta = ((Math.PI*2) / totalPoints);\n      var angle = (theta * currentPoint);\n\n      const x = (r * Math.cos(angle) + centerX);\n      const y = (r * Math.sin(angle) + centerY);\n\n      return {x, y};\n    }\n\n    const canvasEl = d3.select(canvas);\n    canvasEl\n      .call(zoom)\n      .on('mousemove', function() {\n        if (!shouldTick) {\n          hoveredNode = dragsubject();\n          setHovered({node: hoveredNode, coords: {x: d3.event.x, y: d3.event.y}});\n          simulationUpdate();\n        }\n      })\n      .on('click', function(event) {\n        const node = dragsubject();\n        if (node) {\n          highlightedNode = node;\n          primaryNodes = [];\n          secondaryNodes = [];\n          proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n            const node2 = tempData.nodes.find(n => n.id === trg);\n            if (node2) {\n              const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n              const numSecondary = proximityNodes[node.id].length - numPrimary;\n              if (i < numPrimary) {\n                const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                primaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              } else {\n                const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n                node2.new_x = newCoords.x;\n                node2.new_y = newCoords.y;\n                const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n                const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n                node2.x_interval = xDist / 20;\n                node2.y_interval = yDist / 20;\n                secondaryNodes.push({\n                  ...node2,\n                  proximity,\n                });\n              }\n            }\n          });\n          const allEdgeXValues = [];\n          const allEdgeYValues = [];\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            allEdgeXValues.push(xScale(n.new_x));\n            allEdgeYValues.push(yScale(n.new_y));\n          });\n\n          const xBounds = d3.extent(allEdgeXValues);\n          const yBounds = d3.extent(allEdgeYValues);\n          const bounds = [\n            [xBounds[0], yBounds[0]],\n            [xBounds[1], yBounds[1]],\n          ];\n          const dx = bounds[1][0] - bounds[0][0];\n          const dy = bounds[1][1] - bounds[0][1];\n          const x = (bounds[0][0] + bounds[1][0]) / 2;\n          const y = (bounds[0][1] + bounds[1][1]) / 2;\n          const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n          const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n          canvasEl.transition()\n              .duration(500)\n              .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale))\n\n          const t = interval(function(elapsed) {\n            shouldTick = false;\n            [...primaryNodes, ...secondaryNodes].forEach(n => {\n              const currentNode = tempData.nodes.find(d => d.id === n.id);\n              if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n                currentNode.x = currentNode.new_x;\n              } else {\n                shouldTick = true;\n                currentNode.x = currentNode.x > currentNode.new_x\n                  ? currentNode.x - currentNode.x_interval\n                  : currentNode.x + currentNode.x_interval;\n              }\n              if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n                currentNode.y = currentNode.new_y;\n              } else {\n                shouldTick = true;\n                currentNode.y = currentNode.y > currentNode.new_y\n                  ? currentNode.y - currentNode.y_interval\n                  : currentNode.y + currentNode.y_interval;\n              }\n            });\n            simulationUpdate();\n            if (!shouldTick || elapsed > 350) {\n              t.stop()\n            };\n          }, 10);\n          setNodeList({\n            selected: node,\n            connected: [...primaryNodes, ...secondaryNodes],\n          })\n          setHovered({node: undefined, coords: {x: d3.event.x, y: d3.event.y}});\n        }\n        simulationUpdate();\n      })\n\n\n\n    function dragsubject() {\n      const x = transform.invertX(d3.event.x);\n      const y = transform.invertY(d3.event.y);\n      for (let i = tempData.nodes.length - 1; i >= 0; --i) {\n        const node = tempData.nodes[i];\n        let nodeX = xScale(node.x);\n        let nodeY = yScale(node.y);\n        const dx = x - nodeX;\n        const dy = y - nodeY;\n\n        if (dx * dx + dy * dy < node.radius * node.radius) {\n\n          nodeX =  transform.applyX(nodeX);\n          nodeY = transform.applyY(nodeY);\n\n          if ((!primaryNodes.length && !secondaryNodes.length) ||\n                primaryNodes.find(n => n.id === node.id) ||\n                secondaryNodes.find(n => n.id === node.id)) {\n\n            return node;\n          }\n\n        }\n      }\n    }\n\n    simulation.nodes(tempData.nodes)\n              .on(\"tick\", simulationUpdate);\n\n    simulation.force(\"link\")\n              .links(tempData.edges);\n\n    function simulationUpdate() {\n      const highlightedId = highlightedNode && highlightedNode.id ? highlightedNode.id : undefined;\n\n      context.save();\n\n      context.clearRect(0, 0, width, height);\n      context.translate(transform.x, transform.y);\n      context.scale(transform.k, transform.k);\n\n\n      // Draw the cluster shapes \n      if (highlightedId === undefined) {\n        const convexMap = [\n          { id: '4', color: '#93CFD0', coords: [] },\n          { id: '5', color: '#488098', coords: [] },\n          { id: '9', color: '#77C898', coords: [] },\n          { id: '10', color: '#A973BE', coords: [] },\n          { id: '12', color: '#F1866C', coords: [] },\n          { id: '13', color: '#D35162', coords: [] },\n          { id: '14', color: '#FFC135', coords: [] },\n        ]\n\n        clusterMap.forEach(({naics, C1}) => {\n          const node = tempData.nodes.find(({id}) => id.toString() === naics.toString());\n          const convex = convexMap.find(({id}) => id.toString() === C1.toString());\n          if (node && convex) {\n            convex.coords.push([node.x, node.y]);\n          }\n        })\n\n        // const cornerRadius = 30;\n        context.lineWidth = 2;\n        convexMap.forEach(({coords, color}) => {\n          context.fillStyle = polished.rgba(color, 0.095);\n          context.strokeStyle = polished.rgba(color, 0.5);\n          context.beginPath(); // start a new path\n\n          // const points = hull(coords.map(([x, y]) => [xScale(x), yScale(y)]), 60)\n          //                 .map(([x, y]) => ({x, y}));\n          // roundedPoly(context, points, cornerRadius);\n          // context.fill();\n          // context.stroke();\n\n          const points = hull(coords.map(([x, y]) => [xScale(x), yScale(y)]), 200)\n          context.beginPath();\n          context.lineCap = 'round'\n          points.forEach((point, i) => {\n            if (i === 0) {\n              context.moveTo(...point);\n            } else {\n              context.lineTo(...point);\n            }\n          })\n          context.closePath();\n          context.stroke();\n          context.fill();\n        })\n        context.lineWidth = 1;\n      } \n\n\n      // Draw the nodes\n      if (highlightedNode) {\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          20 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.strokeStyle = '#dfdfdf';\n        context.lineWidth = 0.2;\n        context.stroke();\n\n        context.beginPath();\n        context.arc(\n          xScale(highlightedNode.x),\n          yScale(highlightedNode.y),\n          40 / (minExpectedScreenSize / smallerSize),\n          0,\n          2 * Math.PI,\n          true\n        );\n        context.stroke();\n\n        context.beginPath();\n        context.arc(xScale(highlightedNode.x), yScale(highlightedNode.y), highlightedNode.radius, 0, 2 * Math.PI, true);\n        context.fillStyle = highlightedNode.color\n        context.fill();\n        context.strokeStyle = 'black';\n        context.stroke();\n\n\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = \"#000\";\n        context.font = `400 1.3px OfficeCodeProWeb`;\n        getLines(context, highlightedNode.label, 15).reverse().forEach((t, i) => {\n          context.fillText(t, xScale(highlightedNode.x), yScale(highlightedNode.y) - (2 * (i + 2)));\n        });\n      }\n      let nodeCount = 1;\n      if (!primaryNodes.length && !secondaryNodes.length) {\n        tempData.nodes.forEach(function(d, i) {\n          context.beginPath();\n          context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = !hoveredNode ||\n            (hoveredNode.id === d.id || proximityNodes[hoveredNode.id].find(n => n.trg === d.id))\n            ? d.color : polished.rgba(d.color, 0.125);\n          context.fill();\n        });\n\n\n        if (hoveredNode) {\n          const linkedNodes = [hoveredNode];\n          proximityNodes[hoveredNode.id].forEach(function({trg}) {\n            const targetNode = tempData.nodes.find(({id}) => id === trg);\n            context.beginPath();\n            context.moveTo(xScale(hoveredNode.x), yScale(hoveredNode.y));\n            context.lineTo(xScale(targetNode.x), yScale(targetNode.y));\n            context.strokeStyle = '#afafaf';\n            context.stroke();\n            linkedNodes.push(targetNode);\n          });\n\n          linkedNodes.forEach(function(d, i) {\n            if (d) {\n              context.beginPath();\n              context.arc(xScale(d.x), yScale(d.y), d.radius, 0, 2 * Math.PI, true);\n              context.fillStyle = d.color;\n              context.fill();\n              context.strokeStyle = '#afafaf';\n              context.stroke();\n            }\n          });\n        }\n      } else {\n        [...primaryNodes, ...secondaryNodes].forEach(function(d, i) {\n          const node = tempData.nodes.find(n => n.id === d.id);\n          context.beginPath();\n          context.arc(xScale(node.x), yScale(node.y), node.radius, 0, 2 * Math.PI, true);\n          context.fillStyle = node.color;\n          context.fill();\n\n          context.textAlign = 'center';\n          context.textBaseline = 'middle';\n          context.font = `400 ${node.radius}px OfficeCodeProWeb`;\n          context.fillStyle = \"white\";\n          context.fillText(String.fromCharCode(64 + nodeCount++), xScale(node.x), yScale(node.y));\n\n\n          if (!hoveredNode || hoveredNode.id !== d.id) {\n            context.fillStyle = \"#000\";\n            context.font = `400 1.3px OfficeCodeProWeb`;\n            const shortenedLabel = d.label.length <= 30 ? d.label : d.label.slice(0, 30) + '...'\n            getLines(context, shortenedLabel, 15).reverse().forEach((t, i) => {\n              context.fillText(t, xScale(node.x), yScale(node.y) - (2 * (i + 2)));\n            });\n          }\n        });\n      }\n\n      if (hoveredNode && hoveredNode.id !== highlightedId) {\n        rootEl.style.cursor = 'pointer';\n        context.beginPath();\n        context.arc(xScale(hoveredNode.x), yScale(hoveredNode.y), hoveredNode.radius, 0, 2 * Math.PI, true);\n        context.strokeStyle = 'black';\n        context.stroke();\n      } else {\n        rootEl.style.cursor = 'move';\n      }\n\n      context.restore();\n    }\n\n    const triggerSimulationUpdate = (node) => {\n      if (node) {\n        highlightedNode = node;\n        primaryNodes = [];\n        secondaryNodes = [];\n        proximityNodes[node.id].forEach(({trg, proximity}, i) => {\n          const node2 = tempData.nodes.find(n => n.id === trg);\n          if (node2) {\n            const numPrimary = Math.floor((proximityNodes[node.id].length - 1) / 2);\n            const numSecondary = proximityNodes[node.id].length - numPrimary;\n            if (i < numPrimary) {\n              const newCoords = drawPoint(20, i, numPrimary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              primaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            } else {\n              const newCoords = drawPoint(40, i, numSecondary, node.x, node.y)\n              node2.new_x = newCoords.x;\n              node2.new_y = newCoords.y;\n              const xDist = newCoords.x > node2.x ? newCoords.x - node2.x : node2.x - newCoords.x;\n              const yDist = newCoords.y > node2.y ? newCoords.y - node2.y : node2.y - newCoords.y;\n              node2.x_interval = xDist / 20;\n              node2.y_interval = yDist / 20;\n              secondaryNodes.push({\n                ...node2,\n                proximity,\n              });\n            }\n          }\n        });\n        const allEdgeXValues = [];\n        const allEdgeYValues = [];\n        [...primaryNodes, ...secondaryNodes].forEach(n => {\n          allEdgeXValues.push(xScale(n.new_x));\n          allEdgeYValues.push(yScale(n.new_y));\n        });\n\n        const xBounds = d3.extent(allEdgeXValues);\n        const yBounds = d3.extent(allEdgeYValues);\n        const bounds = [\n          [xBounds[0], yBounds[0]],\n          [xBounds[1], yBounds[1]],\n        ];\n        const dx = bounds[1][0] - bounds[0][0];\n        const dy = bounds[1][1] - bounds[0][1];\n        const x = (bounds[0][0] + bounds[1][0]) / 2;\n        const y = (bounds[0][1] + bounds[1][1]) / 2;\n        const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n        const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        canvasEl.transition()\n            .duration(500)\n            .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n\n        const t = interval(function(elapsed) {\n          shouldTick = false;\n          [...primaryNodes, ...secondaryNodes].forEach(n => {\n            const currentNode = tempData.nodes.find(d => d.id === n.id);\n            if (Math.ceil(currentNode.x) === Math.ceil(currentNode.new_x)) {\n              currentNode.x = currentNode.new_x;\n            } else {\n              shouldTick = true;\n              currentNode.x = currentNode.x > currentNode.new_x\n                ? currentNode.x - currentNode.x_interval\n                : currentNode.x + currentNode.x_interval;\n            }\n            if (Math.ceil(currentNode.y) === Math.ceil(currentNode.new_y)) {\n              currentNode.y = currentNode.new_y;\n            } else {\n              shouldTick = true;\n              currentNode.y = currentNode.y > currentNode.new_y\n                ? currentNode.y - currentNode.y_interval\n                : currentNode.y + currentNode.y_interval;\n            }\n          });\n          simulationUpdate();\n          if (!shouldTick || elapsed > 350) {\n            t.stop()\n          };\n        }, 10);\n        setNodeList({\n          selected: node,\n          connected: [...primaryNodes, ...secondaryNodes],\n        })\n      } else {\n        setNodeList(undefined);\n      }\n      simulationUpdate();\n    }\n    const clearSelections = () => {\n      const allEdgeXValues = [];\n      const allEdgeYValues = [];\n      tempData.nodes.forEach(n => {\n        allEdgeXValues.push(xScale(n.x));\n        allEdgeYValues.push(yScale(n.y));\n        n.x = n.initial_x;\n        n.y = n.initial_y;\n      });\n\n      const xBounds = d3.extent(allEdgeXValues);\n      const yBounds = d3.extent(allEdgeYValues);\n      const bounds = [\n        [xBounds[0], yBounds[0]],\n        [xBounds[1], yBounds[1]],\n      ];\n      const dx = bounds[1][0] - bounds[0][0];\n      const dy = bounds[1][1] - bounds[0][1];\n      const x = (bounds[0][0] + bounds[1][0]) / 2;\n      const y = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = Math.max(1, Math.min(8, 0.9 / Math.max(dx / rangeWidth, dy / rangeHeight)));\n      const translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n      canvasEl.transition()\n          .duration(500)\n          .call( zoom.transform, d3.zoomIdentity.translate(translate[0],translate[1]).scale(scale));\n      hoveredNode = undefined;\n      highlightedNode = undefined;\n      primaryNodes = [];\n      secondaryNodes = [];\n      setNodeList(undefined);\n      simulationUpdate();\n    }\n    return {triggerSimulationUpdate, clearSelections};\n  }\n  setTimeout(() => {\n    update.clearSelections();\n  }, 0)\n\n  return update;\n}\n\nexport default () => {\n  const rootNodeRef = useRef(null);\n  const [nodeList, setNodeList] = useState(undefined);\n  const [hovered, setHovered] = useState(undefined);\n  const [updateSimulation, setUpdateSimulation] = useState(undefined);\n\n  useEffect(() => {\n    let rootEl = null;\n    if (rootNodeRef && rootNodeRef.current) {\n      rootEl = rootNodeRef.current;\n      const triggerSimulationUpdate = createForceGraph(rootEl, data, setNodeList, setHovered);\n      setUpdateSimulation(triggerSimulationUpdate);\n    }\n    return (() => {\n      if (rootEl) {\n        rootEl.innerHTML = '';\n      }\n    })\n  }, [rootNodeRef, setNodeList, setHovered, setUpdateSimulation]);\n\n  const tooltip = hovered && hovered.node ? (\n    <Tooltip\n      style={{top: hovered.coords.y, left: hovered.coords.x}}\n    >\n      {hovered.node.label.replace(hovered.node.id, '')}\n    </Tooltip>\n  ) : null\n\n  return (\n    <div>\n      {tooltip}\n      <div ref={rootNodeRef} />\n      <Table\n        nodes={nodeList}\n        hovered={hovered}\n        updateSimulation={updateSimulation}\n        proximityScale={proximityScale}\n      />\n    </div>\n  );\n}\n","import React from 'react'\nimport CanvasIndustrySpace from '../components/CanvasIndustrySpaceUMapClustersRingsClusterConvexLv1V2';\n\nexport default () => {\n  return (\n    <div>\n      <CanvasIndustrySpace />\n    </div>\n  );\n}\n","import React from 'react'\n\nconst App = () => {\n\n  return (\n    <ul>\n      <li><a href={'#/original'}>Industry Space as <strong>Network</strong></a></li>\n      <li><a href={'#/no-edges'}>Industry Space as <strong>Network w/o Edges</strong></a></li>\n      <li><a href={'#/u-map'}>Industry Space as <strong>UMap</strong></a></li>\n      <li><a href={'#/u-map-lines'}>Industry Space as <strong>UMap w/ Edges</strong></a></li>\n      <li><a href={'#/u-map-edges-abs'}>Industry Space as <strong>UMap w/ Edges, Highlighted Based on <em>Value</em></strong></a></li>\n      <li><a href={'#/u-map-edges-threshold'}>Industry Space as <strong>UMap w/ Edges, Highlighted based on <em>Threshold</em></strong></a></li>\n      <li><a href={'#/u-map-edges-threshold-table'}>Industry Space as <strong>UMap w/ Edges, Highlighted based on <em>Threshold</em> w/ Table</strong></a></li>\n      <li><a href={'#/network-table'}>Industry Space as <strong>Network w/ Table</strong></a></li>\n      <li><a href={'#/network-no-edges-table'}>Industry Space as <strong>Network w/o edges and w/ Table</strong></a></li>\n      <li>\n        <a href={'#/u-map-edges-threshold-table-strength'}>Industry Space as <strong>UMap w/ Edges, Highlighted based on <em>Adjusted Threshold</em> w/ Updated Table</strong></a>\n        <ul>\n          <li>\n            <a href={'#/u-map-edges-threshold-table-strength-no-sizing'}>No Node Sizing</a>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <a href={'#/u-map-clusters'}>Industry Space as <strong>UMap Clusters</strong></a>\n        <ul>\n          <li>\n            <a href={'#/u-map-clusters-no-sizing'}>No Node Sizing</a>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <a href={'#/u-map-clusters-rings'}>Industry Space as <strong>UMap Clusters w/ Ring Chart</strong></a>\n        <ul>\n          <li><a href={'#/u-map-clusters-rings-lines'}>Show Edges as <em>Lines</em></a></li>\n          <li><a href={'#/u-map-clusters-rings-opacity'}>Show Edges with <em>Opacity</em></a></li>\n          <li><a href={'#/u-map-clusters-rings-opacity-lines'}>Show Edges with <em>Lines &amp; Opacity</em></a></li>\n          <li><a href={'#/u-map-clusters-rings-opacity-lines-rca'}>Show Edges with <em>Lines &amp; Opacity</em> <strong>and random RCA highlighting</strong></a></li>\n        </ul>\n      </li>\n      <li>\n        <a href={'#/u-map-clusters-rings-cluster-color'}>Industry Space as <strong>UMap Clusters w/ Ring Chart</strong> and <strong>Colored by Cluster</strong></a>\n      </li>\n      <li>\n        <a href={'#/u-map-clusters-rings-cluster-hull'}>Industry Space as <strong>UMap Clusters w/ Ring Chart</strong> and <strong>Cluster Shapes</strong></a>\n      </li>\n      <li>\n        <a href={'#/u-map-clusters-rings-cluster-hull-lv2'}>Industry Space as <strong>UMap Clusters w/ Ring Chart</strong> and <strong>Cluster Shapes, Level 2 detail</strong></a>\n      </li>\n      <li>\n        <a href={'#/u-map-clusters-rings-cluster-hull-lv3'}>Industry Space as <strong>UMap Clusters w/ Ring Chart</strong> and <strong>Cluster Shapes, Level 3 detail</strong></a>\n      </li>\n      <li>\n        <a href={'#/u-map-clusters-rings-cluster-hull-lv1-v2'}>Industry Space as <strong>UMap Clusters w/ Ring Chart</strong> and <strong>Cluster Shapes, Level 1 with version 2 clusters</strong></a>\n      </li>\n    </ul>\n  );\n}\n\nexport default App\n","import React from 'react'\n\nconst TestLanding = () => {\n\n  return (\n    <ol>\n      <li>\n        Lines and opacity\n        <ol>\n          <li><a href={'#/u-map-clusters-rings-opacity-lines-rca'}>No node sizing</a></li>\n          <li><a href={'#/u-map-clusters-rings-opacity-lines-rca-sizing'}>Random node sizing</a></li>\n        </ol>\n      </li>\n      <li>\n        No lines, no opacity\n        <ol>\n          <li><a href={'#/u-map-clusters-rings-rca'}>No node sizing</a></li>\n          <li><a href={'#/u-map-clusters-rings-rca-sizing'}>Random node sizing</a></li>\n        </ol>\n      </li>\n    </ol>\n  );\n}\n\nexport default TestLanding\n","import React from 'react'\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport IndustrySpaceNetwork from './pages/IndustrySpaceNetwork';\nimport IndustrySpaceNetworkNoLines from './pages/IndustrySpaceNetworkNoLines';\nimport IndustrySpaceUMap from './pages/IndustrySpaceUMap';\nimport IndustrySpaceUMapWithLines from './pages/IndustrySpaceUMapWithLines';\nimport IndustrySpaceUMapEdgesAbs from './pages/IndustrySpaceUMapEdgesAbs';\nimport IndustrySpaceUMapEdgesThreshold from './pages/IndustrySpaceUMapEdgesThreshold';\nimport IndustrySpaceUMapEdgesThresholdWithTable from './pages/IndustrySpaceUMapEdgesThresholdWithTable';\nimport IndustrySpaceNetworkWithTable from './pages/IndustrySpaceNetworkWithTable';\nimport IndustrySpaceNetworkNoEdgesWithTable from './pages/IndustrySpaceNetworkNoEdgesWithTable';\nimport IndustrySpaceUMapEdgesThresholdWithTableStrength from './pages/IndustrySpaceUMapEdgesThresholdWithTableStrength';\nimport IndustrySpaceUMapEdgesThresholdWithTableStrengthNoSizing from './pages/IndustrySpaceUMapEdgesThresholdWithTableStrengthNoSizing';\nimport IndustrySpaceClusters from './pages/IndustrySpaceClusters';\nimport IndustrySpaceClustersNoSizing from './pages/IndustrySpaceClustersNoSizing';\nimport ChemicalSpace from './pages/ChemicalSpace';\nimport ChemicalSpaceCustomHighlighting from './pages/ChemicalSpaceCustomHighlighting';\nimport ProductSpace from './pages/ProductSpace';\nimport ProductSpaceSaudi from './pages/ProductSpaceSaudi';\nimport ProductSpaceCustom from './pages/ProductSpaceCustomHighlighting';\nimport IndustrySpaceClustersRings from './pages/IndustrySpaceClustersRings';\nimport IndustrySpaceClustersRingsEdgesLines from './pages/IndustrySpaceClustersRingsEdgesLines';\nimport IndustrySpaceClustersRingsEdgesOpacity from './pages/IndustrySpaceClustersRingsEdgesOpacity';\nimport IndustrySpaceClustersRingsEdgesOpacityLines from './pages/IndustrySpaceClustersRingsEdgesOpacityLines';\nimport IndustrySpaceClustersRingsEdgesOpacityLinesRCA from './pages/IndustrySpaceClustersRingsEdgesOpacityLinesRCA';\nimport IndustrySpaceClustersRingsEdgesOpacityLinesRCASizing from './pages/IndustrySpaceClustersRingsEdgesOpacityLinesRCASizing';\nimport IndustrySpaceClustersRingsClusterColoring from './pages/IndustrySpaceClustersRingsClusterColoring';\nimport IndustrySpaceClustersRingsRCA from './pages/IndustrySpaceClustersRingsRCA';\nimport IndustrySpaceClustersRingsRCASizing from './pages/IndustrySpaceClustersRingsRCASizing';\nimport IndustrySpaceClustersRingsClusterConvex from './pages/IndustrySpaceClustersRingsClusterConvex';\nimport IndustrySpaceClustersRingsClusterConvexLv2 from './pages/IndustrySpaceClustersRingsClusterConvexLv2';\nimport IndustrySpaceClustersRingsClusterConvexLv3 from './pages/IndustrySpaceClustersRingsClusterConvexLv3';\nimport IndustrySpaceClustersRingsClusterConvexLv1V2 from './pages/IndustrySpaceClustersRingsClusterConvexLv1V2';\nimport Landing from './pages/Landing';\nimport TestLanding from './pages/TestingLanding';\nimport './fonts/fonts.css';\n\nconst App = () => {\n\n  return (\n    <div>\n      <Router>\n          <Switch>\n            <Route exact path={'/original'} component={IndustrySpaceNetwork} />\n            <Route exact path={'/no-edges'} component={IndustrySpaceNetworkNoLines} />\n            <Route exact path={'/u-map'} component={IndustrySpaceUMap} />\n            <Route exact path={'/u-map-lines'} component={IndustrySpaceUMapWithLines} />\n            <Route exact path={'/u-map-edges-abs'} component={IndustrySpaceUMapEdgesAbs} />\n            <Route exact path={'/u-map-edges-threshold'} component={IndustrySpaceUMapEdgesThreshold} />\n            <Route exact path={'/u-map-edges-threshold-table'} component={IndustrySpaceUMapEdgesThresholdWithTable} />\n            <Route exact path={'/network-table'} component={IndustrySpaceNetworkWithTable} />\n            <Route exact path={'/network-no-edges-table'} component={IndustrySpaceNetworkNoEdgesWithTable} />\n            <Route exact path={'/u-map-edges-threshold-table-strength'} component={IndustrySpaceUMapEdgesThresholdWithTableStrength} />\n            <Route exact path={'/u-map-clusters'} component={IndustrySpaceClusters} />\n            <Route exact path={'/u-map-edges-threshold-table-strength-no-sizing'} component={IndustrySpaceUMapEdgesThresholdWithTableStrengthNoSizing} />\n            <Route exact path={'/u-map-clusters-no-sizing'} component={IndustrySpaceClustersNoSizing} />\n            <Route exact path={'/u-map-clusters-rings'} component={IndustrySpaceClustersRings} />\n            <Route exact path={'/u-map-clusters-rings-lines'} component={IndustrySpaceClustersRingsEdgesLines} />\n            <Route exact path={'/u-map-clusters-rings-opacity'} component={IndustrySpaceClustersRingsEdgesOpacity} />\n            <Route exact path={'/u-map-clusters-rings-opacity-lines'} component={IndustrySpaceClustersRingsEdgesOpacityLines} />\n            <Route exact path={'/u-map-clusters-rings-opacity-lines-rca'} component={IndustrySpaceClustersRingsEdgesOpacityLinesRCA} />\n            <Route exact path={'/product-space'} component={ProductSpace} />\n            <Route exact path={'/product-space-saudi'} component={ProductSpaceSaudi} />\n            <Route exact path={'/product-space-custom'} component={ProductSpaceCustom} />\n            <Route exact path={'/chemical-space'} component={ChemicalSpace} />\n            <Route exact path={'/chemical-space-custom'} component={ChemicalSpaceCustomHighlighting} />\n            <Route exact path={'/u-map-clusters-rings-cluster-color'} component={IndustrySpaceClustersRingsClusterColoring} />\n            <Route exact path={'/u-map-clusters-rings-cluster-hull'} component={IndustrySpaceClustersRingsClusterConvex} />\n            <Route exact path={'/u-map-clusters-rings-cluster-hull-lv2'} component={IndustrySpaceClustersRingsClusterConvexLv2} />\n            <Route exact path={'/u-map-clusters-rings-cluster-hull-lv3'} component={IndustrySpaceClustersRingsClusterConvexLv3} />\n            <Route exact path={'/u-map-clusters-rings-cluster-hull-lv1-v2'} component={IndustrySpaceClustersRingsClusterConvexLv1V2} />\n\n            <Route exact path={'/test'} component={TestLanding} />\n            <Route exact path={'/u-map-clusters-rings-opacity-lines-rca-sizing'} component={IndustrySpaceClustersRingsEdgesOpacityLinesRCASizing} />\n            <Route exact path={'/u-map-clusters-rings-rca'} component={IndustrySpaceClustersRingsRCA} />\n            <Route exact path={'/u-map-clusters-rings-rca-sizing'} component={IndustrySpaceClustersRingsRCASizing} />\n\n\n            <Route component={Landing} />\n          </Switch>\n        </Router>\n    </div>\n  );\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","module.exports = __webpack_public_path__ + \"static/media/IS-Legends-01.c6d7ff3f.png\";","module.exports = __webpack_public_path__ + \"static/media/IS-Legends-02.c6d7ff3f.png\";","module.exports = __webpack_public_path__ + \"static/media/IS_how-to-read-04.aaacab25.png\";"],"sourceRoot":""}